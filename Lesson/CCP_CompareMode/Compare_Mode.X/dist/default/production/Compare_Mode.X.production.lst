

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 03 14:09:52 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.45
    13                           ; Generated 16/11/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104                           
   105                           	psect	nvCOMMON
   106  0076                     __pnvCOMMON:	
   107  0076                     _per1:	
   108  0076                     	ds	2
   109  0015                     _CCPR1	set	21
   110  001B                     _CCPR2	set	27
   111  000E                     _TMR1	set	14
   112  001D                     _CCP2CON	set	29
   113  0017                     _CCP1CON	set	23
   114  0005                     _PORTA	set	5
   115  0080                     _TMR1ON	set	128
   116  005E                     _PEIE	set	94
   117  005F                     _GIE	set	95
   118  0081                     _TMR1CS	set	129
   119  0085                     _T1CKPS1	set	133
   120  0084                     _T1CKPS0	set	132
   121  002A                     _RA2	set	42
   122  0068                     _CCP2IF	set	104
   123  0029                     _RA1	set	41
   124  0062                     _CCP1IF	set	98
   125  002B                     _RA3	set	43
   126  0060                     _TMR1IF	set	96
   127  0085                     _TRISA	set	133
   128  0468                     _CCP2IE	set	1128
   129  0462                     _CCP1IE	set	1122
   130  0460                     _TMR1IE	set	1120
   131                           
   132                           	psect	cinit
   133  0015                     start_initialization:	
   134                           ; #config settings
   135                           
   136  0015                     __initialization:	
   137  0015                     end_of_initialization:	
   138                           ;End of C runtime variable initialization code
   139                           
   140  0015                     __end_of__initialization:	
   141  0015  0183               	clrf	3
   142  0016  120A  118A  2859   	ljmp	_main	;jump to C main() function
   143                           
   144                           	psect	cstackCOMMON
   145  0070                     __pcstackCOMMON:	
   146  0070                     ?_isr:	
   147  0070                     ??_isr:	
   148                           ; 1 bytes @ 0x0
   149                           
   150  0070                     ?_main:	
   151                           ; 1 bytes @ 0x0
   152                           
   153                           
   154                           ; 1 bytes @ 0x0
   155  0070                     	ds	6
   156  0076                     ??_main:	
   157                           
   158                           	psect	maintext
   159  0059                     __pmaintext:	
   160                           ; 1 bytes @ 0x6
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 39 in file "main.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2
   175 ;; Tracked objects:
   176 ;;		On entry : B00/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   180 ;;      Params:         0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels required when called:    1
   186 ;; This function calls:
   187 ;;		Nothing
   188 ;; This function is called by:
   189 ;;		Startup code after reset
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           
   194                           ;psect for function _main
   195  0059                     _main:	
   196                           
   197                           ;main.c: 41: TRISA=0x00;
   198                           
   199                           ;incstack = 0
   200                           ; Regs used in _main: [wreg+status,2]
   201  0059  1683               	bsf	3,5	;RP0=1, select bank1
   202  005A  1303               	bcf	3,6	;RP1=0, select bank1
   203  005B  0185               	clrf	5	;volatile
   204                           
   205                           ;main.c: 42: PORTA=0x00;
   206  005C  1283               	bcf	3,5	;RP0=0, select bank0
   207  005D  1303               	bcf	3,6	;RP1=0, select bank0
   208  005E  0185               	clrf	5	;volatile
   209                           
   210                           ;main.c: 45: CCP1IE=1;
   211  005F  1683               	bsf	3,5	;RP0=1, select bank1
   212  0060  1303               	bcf	3,6	;RP1=0, select bank1
   213  0061  150C               	bsf	12,2	;volatile
   214                           
   215                           ;main.c: 46: CCP2IE=1;
   216  0062  140D               	bsf	13,0	;volatile
   217                           
   218                           ;main.c: 48: CCP1CON=0x0A;
   219  0063  300A               	movlw	10
   220  0064  1283               	bcf	3,5	;RP0=0, select bank0
   221  0065  1303               	bcf	3,6	;RP1=0, select bank0
   222  0066  0097               	movwf	23	;volatile
   223                           
   224                           ;main.c: 50: CCP2CON=0x0B;
   225  0067  300B               	movlw	11
   226  0068  009D               	movwf	29	;volatile
   227                           
   228                           ;main.c: 56: per1=100;
   229  0069  3064               	movlw	100
   230  006A  00F6               	movwf	_per1
   231  006B  3000               	movlw	0
   232  006C  00F7               	movwf	_per1+1
   233                           
   234                           ;main.c: 57: CCPR1=50;
   235  006D  3000               	movlw	0
   236  006E  0096               	movwf	22	;volatile
   237  006F  3032               	movlw	50
   238  0070  0095               	movwf	21	;volatile
   239                           
   240                           ;main.c: 58: CCPR2=per1;
   241  0071  0877               	movf	_per1+1,w
   242  0072  009C               	movwf	28	;volatile
   243  0073  0876               	movf	_per1,w
   244  0074  009B               	movwf	27	;volatile
   245                           
   246                           ;main.c: 61: CCP1IF=0;
   247  0075  110C               	bcf	12,2	;volatile
   248                           
   249                           ;main.c: 62: CCP2IF=0;
   250  0076  100D               	bcf	13,0	;volatile
   251                           
   252                           ;main.c: 64: T1CKPS0=1;
   253  0077  1610               	bsf	16,4	;volatile
   254                           
   255                           ;main.c: 65: T1CKPS1=1;
   256  0078  1690               	bsf	16,5	;volatile
   257                           
   258                           ;main.c: 67: TMR1CS=0;
   259  0079  1090               	bcf	16,1	;volatile
   260                           
   261                           ;main.c: 68: TMR1IE=1;
   262  007A  1683               	bsf	3,5	;RP0=1, select bank1
   263  007B  1303               	bcf	3,6	;RP1=0, select bank1
   264  007C  140C               	bsf	12,0	;volatile
   265                           
   266                           ;main.c: 70: GIE=0x1;
   267  007D  178B               	bsf	11,7	;volatile
   268                           
   269                           ;main.c: 71: PEIE=0x1;
   270  007E  170B               	bsf	11,6	;volatile
   271                           
   272                           ;main.c: 72: TMR1ON=1;
   273  007F  1283               	bcf	3,5	;RP0=0, select bank0
   274  0080  1303               	bcf	3,6	;RP1=0, select bank0
   275  0081  1410               	bsf	16,0	;volatile
   276  0082                     l60:	
   277                           ;main.c: 79: while(1)
   278                           
   279                           
   280                           ;main.c: 80: {
   281  0082  2882               	goto	l60
   282  0083                     __end_of_main:	
   283                           
   284                           	psect	text1
   285  0019                     __ptext1:	
   286 ;; *************** function _isr *****************
   287 ;; Defined at:
   288 ;;		line 12 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0
   304 ;;      Temps:          6       0       0       0       0
   305 ;;      Totals:         6       0       0       0       0
   306 ;;Total ram usage:        6 bytes
   307 ;; Hardware stack levels used:    1
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		Interrupt level 1
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           
   316                           ;psect for function _isr
   317  0019                     _isr:	
   318                           
   319                           ;main.c: 14: if(TMR1IE && TMR1IF)
   320  0019  1683               	bsf	3,5	;RP0=1, select bank1
   321  001A  1303               	bcf	3,6	;RP1=0, select bank1
   322  001B  1C0C               	btfss	12,0	;volatile
   323  001C  2825               	goto	i1l533
   324  001D  1283               	bcf	3,5	;RP0=0, select bank0
   325  001E  1303               	bcf	3,6	;RP1=0, select bank0
   326  001F  1C0C               	btfss	12,0	;volatile
   327  0020  2825               	goto	i1l533
   328                           
   329                           ;main.c: 15: {
   330                           ;main.c: 16: RA3=1;
   331  0021  1585               	bsf	5,3	;volatile
   332                           
   333                           ;main.c: 17: TMR1=0x0000;
   334  0022  018E               	clrf	14	;volatile
   335  0023  018F               	clrf	15	;volatile
   336                           
   337                           ;main.c: 18: TMR1IF=0;
   338  0024  100C               	bcf	12,0	;volatile
   339  0025                     i1l533:	
   340                           
   341                           ;main.c: 19: }
   342                           ;main.c: 20: if(CCP1IF)
   343  0025  1283               	bcf	3,5	;RP0=0, select bank0
   344  0026  1D0C               	btfss	12,2	;volatile
   345  0027  282A               	goto	i1l52
   346                           
   347                           ;main.c: 21: {
   348                           ;main.c: 22: RA1=1;
   349  0028  1485               	bsf	5,1	;volatile
   350                           
   351                           ;main.c: 23: CCP1IF=0;
   352  0029  110C               	bcf	12,2	;volatile
   353  002A                     i1l52:	
   354                           
   355                           ;main.c: 24: }
   356                           ;main.c: 26: if(CCP2IF)
   357  002A  1C0D               	btfss	13,0	;volatile
   358  002B  284E               	goto	i1l55
   359                           
   360                           ;main.c: 27: {
   361                           ;main.c: 28: RA2=1;
   362  002C  1505               	bsf	5,2	;volatile
   363                           
   364                           ;main.c: 29: per1+=20;
   365  002D  3014               	movlw	20
   366  002E  07F6               	addwf	_per1,f
   367  002F  1803               	skipnc
   368  0030  0AF7               	incf	_per1+1,f
   369  0031  3000               	movlw	0
   370  0032  07F7               	addwf	_per1+1,f
   371                           
   372                           ;main.c: 30: CCPR2 = per1;
   373  0033  0877               	movf	_per1+1,w
   374  0034  009C               	movwf	28	;volatile
   375  0035  0876               	movf	_per1,w
   376  0036  009B               	movwf	27	;volatile
   377                           
   378                           ;main.c: 31: CCPR1 = per1>>1;
   379  0037  0877               	movf	_per1+1,w
   380  0038  00F1               	movwf	??_isr+1
   381  0039  0876               	movf	_per1,w
   382  003A  00F0               	movwf	??_isr
   383  003B  1003               	clrc
   384  003C  0CF1               	rrf	??_isr+1,f
   385  003D  0CF0               	rrf	??_isr,f
   386  003E  0870               	movf	??_isr,w
   387  003F  0095               	movwf	21	;volatile
   388  0040  0871               	movf	??_isr+1,w
   389  0041  0096               	movwf	22	;volatile
   390                           
   391                           ;main.c: 32: if(per1>=2000) per1=80;
   392  0042  3007               	movlw	7
   393  0043  0277               	subwf	_per1+1,w
   394  0044  30D0               	movlw	208
   395  0045  1903               	skipnz
   396  0046  0276               	subwf	_per1,w
   397  0047  1C03               	skipc
   398  0048  284D               	goto	i1l547
   399  0049  3050               	movlw	80
   400  004A  00F6               	movwf	_per1
   401  004B  3000               	movlw	0
   402  004C  00F7               	movwf	_per1+1
   403  004D                     i1l547:	
   404                           
   405                           ;main.c: 33: CCP2IF=0;
   406  004D  100D               	bcf	13,0	;volatile
   407  004E                     i1l55:	
   408  004E  0875               	movf	??_isr+5,w
   409  004F  00FF               	movwf	127
   410  0050  0874               	movf	??_isr+4,w
   411  0051  008A               	movwf	10
   412  0052  0873               	movf	??_isr+3,w
   413  0053  0084               	movwf	4
   414  0054  0E72               	swapf	(??_isr+2)^(0+-128),w
   415  0055  0083               	movwf	3
   416  0056  0EFE               	swapf	126,f
   417  0057  0E7E               	swapf	126,w
   418  0058  0009               	retfie
   419  0059                     __end_of_isr:	
   420  007E                     btemp	set	126	;btemp
   421  007E                     wtemp0	set	126
   422                           
   423                           	psect	intentry
   424  0004                     __pintentry:	
   425                           ;incstack = 0
   426                           ; Regs used in _isr: [wreg+status,2+status,0]
   427                           
   428  0004                     interrupt_function:	
   429  007E                     saved_w	set	btemp
   430  0004  00FE               	movwf	btemp
   431  0005  0E03               	swapf	3,w
   432  0006  00F2               	movwf	??_isr+2
   433  0007  0804               	movf	4,w
   434  0008  00F3               	movwf	??_isr+3
   435  0009  080A               	movf	10,w
   436  000A  00F4               	movwf	??_isr+4
   437  000B  1283               	bcf	3,5	;RP0=0, select bank0
   438  000C  1303               	bcf	3,6	;RP1=0, select bank0
   439  000D  087F               	movf	btemp+1,w
   440  000E  00F5               	movwf	??_isr+5
   441  000F  120A  118A  2819   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 03 14:09:52 2018

                     l60 0082                      _GIE 005F                      _RA1 0029  
                    _RA2 002A                      _RA3 002B                      _isr 0019  
                    fsr0 0004                     ?_isr 0070                     _PEIE 005E  
                   i1l52 002A                     i1l55 004E                     _TMR1 000E  
                   _per1 0076                     _main 0059                     btemp 007E  
                   start 0012                    ??_isr 0070                    ?_main 0070  
                  _CCPR1 0015                    _CCPR2 001B                    i1l533 0025  
                  i1l547 004D                    _PORTA 0005                    _TRISA 0085  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0083                   ??_main 0076  
                 _CCP1IE 0462                   _CCP1IF 0062                   _CCP2IE 0468  
                 _CCP2IF 0068                   _TMR1IE 0460                   _TMR1IF 0060  
                 _TMR1CS 0081                   _TMR1ON 0080                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0070               __pnvCOMMON 0076  
             __pmaintext 0059               __pintentry 0004                  _CCP1CON 0017  
                _CCP2CON 001D                  _T1CKPS0 0084                  _T1CKPS1 0085  
                __ptext1 0019             __size_of_isr 0040     end_of_initialization 0015  
    start_initialization 0015              __end_of_isr 0059                ___latbits 0002  
      interrupt_function 0004            __size_of_main 002A                 intlevel1 0000  
