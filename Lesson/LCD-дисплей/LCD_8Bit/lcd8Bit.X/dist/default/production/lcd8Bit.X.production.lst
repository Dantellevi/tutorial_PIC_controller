

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Mar 22 16:15:51 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.44
    17                           ; Generated 14/09/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0008                     _PORTD	set	8
   167  003E                     _RC6	set	62
   168  003D                     _RC5	set	61
   169  003C                     _RC4	set	60
   170  0088                     _TRISD	set	136
   171  0087                     _TRISC	set	135
   172                           
   173                           	psect	strings
   174  0003                     __pstrings:	
   175  0003                     stringtab:	
   176  0003                     __stringtab:	
   177  0003                     stringcode:	
   178                           ;	String table - string pointers are 1 byte each
   179                           
   180  0003                     stringdir:	
   181  0003  3000               	movlw	high stringdir
   182  0004  008A               	movwf	10
   183  0005  0804               	movf	4,w
   184  0006  0A84               	incf	4,f
   185  0007  0782               	addwf	2,f
   186  0008                     __stringbase:	
   187  0008  3400               	retlw	0
   188  0009                     __end_of__stringtab:	
   189  0009                     STR_1:	
   190  0009  3453               	retlw	83	;'S'
   191  000A  3474               	retlw	116	;'t'
   192  000B  3472               	retlw	114	;'r'
   193  000C  3469               	retlw	105	;'i'
   194  000D  346E               	retlw	110	;'n'
   195  000E  3467               	retlw	103	;'g'
   196  000F  3420               	retlw	32	;' '
   197  0010  3431               	retlw	49	;'1'
   198  0011  3400               	retlw	0
   199  0012                     STR_2:	
   200  0012  3453               	retlw	83	;'S'
   201  0013  3474               	retlw	116	;'t'
   202  0014  3472               	retlw	114	;'r'
   203  0015  3469               	retlw	105	;'i'
   204  0016  346E               	retlw	110	;'n'
   205  0017  3467               	retlw	103	;'g'
   206  0018  3420               	retlw	32	;' '
   207  0019  3432               	retlw	50	;'2'
   208  001A  3400               	retlw	0
   209  001B                     STR_3:	
   210  001B  3453               	retlw	83	;'S'
   211  001C  3474               	retlw	116	;'t'
   212  001D  3472               	retlw	114	;'r'
   213  001E  3469               	retlw	105	;'i'
   214  001F  346E               	retlw	110	;'n'
   215  0020  3467               	retlw	103	;'g'
   216  0021  3420               	retlw	32	;' '
   217  0022  3433               	retlw	51	;'3'
   218  0023  3400               	retlw	0
   219  0024                     STR_4:	
   220  0024  3453               	retlw	83	;'S'
   221  0025  3474               	retlw	116	;'t'
   222  0026  3472               	retlw	114	;'r'
   223  0027  3469               	retlw	105	;'i'
   224  0028  346E               	retlw	110	;'n'
   225  0029  3467               	retlw	103	;'g'
   226  002A  3420               	retlw	32	;' '
   227  002B  3434               	retlw	52	;'4'
   228  002C  3400               	retlw	0
   229                           
   230                           ; #config settings
   231  0000                     
   232                           	psect	cinit
   233  07FC                     start_initialization:	
   234  07FC                     __initialization:	
   235  07FC                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238  07FC                     __end_of__initialization:	
   239  07FC  0183               	clrf	3
   240  07FD  120A  118A  2FBD   	ljmp	_main	;jump to C main() function
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:	
   244  0070                     ?_LCD_PORT_init:	
   245  0070                     ??_LCD_PORT_init:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_LCD_Init:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_LCD_String:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_LCD_delay:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ??_LCD_delay:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     LCD_delay@i:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 2 bytes @ 0x0
   268  0070                     	ds	2
   269  0072                     ?_sendbyte:	
   270  0072                     sendbyte@mode:	
   271                           ; 1 bytes @ 0x2
   272                           
   273                           
   274                           ; 1 bytes @ 0x2
   275  0072                     	ds	1
   276  0073                     ??_sendbyte:	
   277  0073                     sendbyte@c:	
   278                           ; 1 bytes @ 0x3
   279                           
   280                           
   281                           ; 1 bytes @ 0x3
   282  0073                     	ds	1
   283  0074                     ??_LCD_Init:	
   284  0074                     ??_LCD_String:	
   285                           ; 1 bytes @ 0x4
   286                           
   287  0074                     ?_LCD_SetPos:	
   288                           ; 1 bytes @ 0x4
   289                           
   290  0074                     LCD_SetPos@y:	
   291                           ; 1 bytes @ 0x4
   292                           
   293                           
   294                           ; 1 bytes @ 0x4
   295  0074                     	ds	1
   296  0075                     ??_LCD_SetPos:	
   297  0075                     LCD_SetPos@x:	
   298                           ; 1 bytes @ 0x5
   299                           
   300  0075                     LCD_String@i:	
   301                           ; 1 bytes @ 0x5
   302                           
   303                           
   304                           ; 1 bytes @ 0x5
   305  0075                     	ds	1
   306  0076                     LCD_String@st:	
   307                           
   308                           ; 1 bytes @ 0x6
   309  0076                     	ds	1
   310  0077                     ??_main:	
   311                           
   312                           ; 1 bytes @ 0x7
   313  0077                     	ds	1
   314                           
   315                           	psect	maintext
   316  07BD                     __pmaintext:	
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 6 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   331 ;; Tracked objects:
   332 ;;		On entry : B00/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   336 ;;      Params:         0       0       0       0       0
   337 ;;      Locals:         0       0       0       0       0
   338 ;;      Temps:          1       0       0       0       0
   339 ;;      Totals:         1       0       0       0       0
   340 ;;Total ram usage:        1 bytes
   341 ;; Hardware stack levels required when called:    3
   342 ;; This function calls:
   343 ;;		_LCD_Init
   344 ;;		_LCD_PORT_init
   345 ;;		_LCD_SetPos
   346 ;;		_LCD_String
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           
   353                           ;psect for function _main
   354  07BD                     _main:	
   355                           
   356                           ;main.c: 8: LCD_PORT_init();
   357                           
   358                           ;incstack = 0
   359                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   360  07BD  120A  118A  271D  120A  118A  	fcall	_LCD_PORT_init
   361                           
   362                           ;main.c: 9: LCD_Init();
   363  07C2  120A  118A  276B  120A  118A  	fcall	_LCD_Init
   364                           
   365                           ;main.c: 10: LCD_String((char*)"String 1");
   366  07C7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   367  07C8  120A  118A  274A  120A  118A  	fcall	_LCD_String
   368                           
   369                           ;main.c: 11: LCD_SetPos(2,1);
   370  07CD  01F4               	clrf	LCD_SetPos@y
   371  07CE  0AF4               	incf	LCD_SetPos@y,f
   372  07CF  3002               	movlw	2
   373  07D0  120A  118A  278D  120A  118A  	fcall	_LCD_SetPos
   374                           
   375                           ;main.c: 12: LCD_String((char*)"String 2");
   376  07D5  300A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   377  07D6  120A  118A  274A  120A  118A  	fcall	_LCD_String
   378                           
   379                           ;main.c: 13: LCD_SetPos(4,2);
   380  07DB  3002               	movlw	2
   381  07DC  00F7               	movwf	??_main
   382  07DD  0877               	movf	??_main,w
   383  07DE  00F4               	movwf	LCD_SetPos@y
   384  07DF  3004               	movlw	4
   385  07E0  120A  118A  278D  120A  118A  	fcall	_LCD_SetPos
   386                           
   387                           ;main.c: 14: LCD_String((char*)"String 3");
   388  07E5  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   389  07E6  120A  118A  274A  120A  118A  	fcall	_LCD_String
   390                           
   391                           ;main.c: 15: LCD_SetPos(6,3);
   392  07EB  3003               	movlw	3
   393  07EC  00F7               	movwf	??_main
   394  07ED  0877               	movf	??_main,w
   395  07EE  00F4               	movwf	LCD_SetPos@y
   396  07EF  3006               	movlw	6
   397  07F0  120A  118A  278D  120A  118A  	fcall	_LCD_SetPos
   398                           
   399                           ;main.c: 16: LCD_String((char*)"String 4");
   400  07F5  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   401  07F6  120A  118A  274A  120A  118A  	fcall	_LCD_String
   402  07FB                     l13:	
   403                           ;main.c: 18: while(1)
   404                           
   405                           
   406                           ;main.c: 19: {
   407  07FB  2FFB               	goto	l13
   408  07FC                     __end_of_main:	
   409                           
   410                           	psect	text1
   411  074A                     __ptext1:	
   412 ;; *************** function _LCD_String *****************
   413 ;; Defined at:
   414 ;;		line 59 in file "lcd.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;  st              1    wreg     PTR unsigned char 
   417 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  st              1    6[COMMON] PTR unsigned char 
   420 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
   421 ;;  i               1    5[COMMON] unsigned char 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   431 ;;      Params:         0       0       0       0       0
   432 ;;      Locals:         2       0       0       0       0
   433 ;;      Temps:          1       0       0       0       0
   434 ;;      Totals:         3       0       0       0       0
   435 ;;Total ram usage:        3 bytes
   436 ;; Hardware stack levels used:    1
   437 ;; Hardware stack levels required when called:    2
   438 ;; This function calls:
   439 ;;		_sendbyte
   440 ;; This function is called by:
   441 ;;		_main
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _LCD_String
   447  074A                     _LCD_String:	
   448                           
   449                           ;incstack = 0
   450                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   451                           ;LCD_String@st stored from wreg
   452  074A  00F6               	movwf	LCD_String@st
   453                           
   454                           ;lcd.c: 61: unsigned char i=0;
   455  074B  01F5               	clrf	LCD_String@i
   456  074C                     l601:	
   457                           ;lcd.c: 62: while(st[i]!=0)
   458                           
   459  074C  0875               	movf	LCD_String@i,w
   460  074D  0776               	addwf	LCD_String@st,w
   461  074E  0084               	movwf	4
   462  074F  120A  118A  2003  120A  118A  	fcall	stringdir
   463  0754  3A00               	xorlw	0
   464  0755  1903               	btfsc	3,2
   465  0756  0008               	return
   466                           
   467                           ;lcd.c: 63: {
   468                           ;lcd.c: 64: sendbyte(st[i],1);
   469  0757  01F2               	clrf	sendbyte@mode
   470  0758  0AF2               	incf	sendbyte@mode,f
   471  0759  0875               	movf	LCD_String@i,w
   472  075A  0776               	addwf	LCD_String@st,w
   473  075B  0084               	movwf	4
   474  075C  120A  118A  2003  120A  118A  	fcall	stringdir
   475  0761  120A  118A  2736  120A  118A  	fcall	_sendbyte
   476                           
   477                           ;lcd.c: 65: i++;
   478  0766  3001               	movlw	1
   479  0767  00F4               	movwf	??_LCD_String
   480  0768  0874               	movf	??_LCD_String,w
   481  0769  07F5               	addwf	LCD_String@i,f
   482  076A  2F4C               	goto	l601
   483  076B                     __end_of_LCD_String:	
   484                           
   485                           	psect	text2
   486  078D                     __ptext2:	
   487 ;; *************** function _LCD_SetPos *****************
   488 ;; Defined at:
   489 ;;		line 40 in file "lcd.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;  x               1    wreg     unsigned char 
   492 ;;  y               1    4[COMMON] unsigned char 
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  x               1    5[COMMON] unsigned char 
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         1       0       0       0       0
   505 ;;      Locals:         1       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0
   507 ;;      Totals:         2       0       0       0       0
   508 ;;Total ram usage:        2 bytes
   509 ;; Hardware stack levels used:    1
   510 ;; Hardware stack levels required when called:    2
   511 ;; This function calls:
   512 ;;		_sendbyte
   513 ;; This function is called by:
   514 ;;		_main
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _LCD_SetPos
   520  078D                     _LCD_SetPos:	
   521                           
   522                           ;incstack = 0
   523                           ; Regs used in _LCD_SetPos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   524                           ;LCD_SetPos@x stored from wreg
   525  078D  00F5               	movwf	LCD_SetPos@x
   526                           
   527                           ;lcd.c: 42: switch(y)
   528  078E  2FAE               	goto	l615
   529  078F                     l605:	
   530                           ;lcd.c: 43: {
   531                           ;lcd.c: 44: case 0:
   532                           
   533                           
   534                           ;lcd.c: 45: sendbyte((unsigned char)(x|0x80),0);
   535  078F  01F2               	clrf	sendbyte@mode
   536  0790  0875               	movf	LCD_SetPos@x,w
   537  0791  3880               	iorlw	128
   538  0792  120A  118A  2736   	fcall	_sendbyte
   539                           
   540                           ;lcd.c: 46: break;
   541  0795  0008               	return
   542  0796                     l607:	
   543                           ;lcd.c: 47: case 1:
   544                           
   545                           
   546                           ;lcd.c: 48: sendbyte((unsigned char)((0x40+x)|0x80),0);
   547  0796  01F2               	clrf	sendbyte@mode
   548  0797  0875               	movf	LCD_SetPos@x,w
   549  0798  3E40               	addlw	64
   550  0799  3880               	iorlw	128
   551  079A  120A  118A  2736   	fcall	_sendbyte
   552                           
   553                           ;lcd.c: 49: break;
   554  079D  0008               	return
   555  079E                     l609:	
   556                           ;lcd.c: 50: case 2:
   557                           
   558                           
   559                           ;lcd.c: 51: sendbyte((unsigned char)((0x14+x)|0x80),0);
   560  079E  01F2               	clrf	sendbyte@mode
   561  079F  0875               	movf	LCD_SetPos@x,w
   562  07A0  3E14               	addlw	20
   563  07A1  3880               	iorlw	128
   564  07A2  120A  118A  2736   	fcall	_sendbyte
   565                           
   566                           ;lcd.c: 52: break;
   567  07A5  0008               	return
   568  07A6                     l611:	
   569                           ;lcd.c: 53: case 3:
   570                           
   571                           
   572                           ;lcd.c: 54: sendbyte((unsigned char)((0x54+x)|0x80),0);
   573  07A6  01F2               	clrf	sendbyte@mode
   574  07A7  0875               	movf	LCD_SetPos@x,w
   575  07A8  3E54               	addlw	84
   576  07A9  3880               	iorlw	128
   577  07AA  120A  118A  2736   	fcall	_sendbyte
   578                           
   579                           ;lcd.c: 56: }
   580                           
   581                           ;lcd.c: 55: break;
   582  07AD  0008               	return
   583  07AE                     l615:	
   584  07AE  0874               	movf	LCD_SetPos@y,w
   585                           
   586                           ; Switch size 1, requested type "space"
   587                           ; Number of cases is 4, Range of values is 0 to 3
   588                           ; switch strategies available:
   589                           ; Name         Instructions Cycles
   590                           ; simple_byte           13     7 (average)
   591                           ; direct_byte           20     8 (fixed)
   592                           ; jumptable            260     6 (fixed)
   593                           ;	Chosen strategy is simple_byte
   594  07AF  3A00               	xorlw	0	; case 0
   595  07B0  1903               	skipnz
   596  07B1  2F8F               	goto	l605
   597  07B2  3A01               	xorlw	1	; case 1
   598  07B3  1903               	skipnz
   599  07B4  2F96               	goto	l607
   600  07B5  3A03               	xorlw	3	; case 2
   601  07B6  1903               	skipnz
   602  07B7  2F9E               	goto	l609
   603  07B8  3A01               	xorlw	1	; case 3
   604  07B9  1903               	skipnz
   605  07BA  2FA6               	goto	l611
   606  07BB  2FBC               	goto	l53
   607  07BC                     l53:	
   608  07BC  0008               	return
   609  07BD                     __end_of_LCD_SetPos:	
   610                           
   611                           	psect	text3
   612  071D                     __ptext3:	
   613 ;; *************** function _LCD_PORT_init *****************
   614 ;; Defined at:
   615 ;;		line 13 in file "lcd.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		status,2
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0
   632 ;;      Totals:         0       0       0       0       0
   633 ;;Total ram usage:        0 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _LCD_PORT_init
   644  071D                     _LCD_PORT_init:	
   645                           
   646                           ;lcd.c: 15: TRISC=0X00;
   647                           
   648                           ;incstack = 0
   649                           ; Regs used in _LCD_PORT_init: [status,2]
   650  071D  1683               	bsf	3,5	;RP0=1, select bank1
   651  071E  1303               	bcf	3,6	;RP1=0, select bank1
   652  071F  0187               	clrf	7	;volatile
   653                           
   654                           ;lcd.c: 16: TRISD=0X00;
   655  0720  0188               	clrf	8	;volatile
   656  0721  0008               	return
   657  0722                     __end_of_LCD_PORT_init:	
   658                           
   659                           	psect	text4
   660  076B                     __ptext4:	
   661 ;; *************** function _LCD_Init *****************
   662 ;; Defined at:
   663 ;;		line 30 in file "lcd.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    2
   684 ;; This function calls:
   685 ;;		_sendbyte
   686 ;; This function is called by:
   687 ;;		_main
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           
   692                           ;psect for function _LCD_Init
   693  076B                     _LCD_Init:	
   694                           
   695                           ;lcd.c: 32: sendbyte(0X01,0);
   696                           
   697                           ;incstack = 0
   698                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   699  076B  01F2               	clrf	sendbyte@mode
   700  076C  3001               	movlw	1
   701  076D  120A  118A  2736  120A  118A  	fcall	_sendbyte
   702                           
   703                           ;lcd.c: 33: sendbyte(0X38,0);
   704  0772  01F2               	clrf	sendbyte@mode
   705  0773  3038               	movlw	56
   706  0774  120A  118A  2736  120A  118A  	fcall	_sendbyte
   707                           
   708                           ;lcd.c: 35: sendbyte(0X0c,0);
   709  0779  01F2               	clrf	sendbyte@mode
   710  077A  300C               	movlw	12
   711  077B  120A  118A  2736  120A  118A  	fcall	_sendbyte
   712                           
   713                           ;lcd.c: 36: sendbyte(0X06,0);
   714  0780  01F2               	clrf	sendbyte@mode
   715  0781  3006               	movlw	6
   716  0782  120A  118A  2736  120A  118A  	fcall	_sendbyte
   717                           
   718                           ;lcd.c: 37: sendbyte(0X80,0);
   719  0787  01F2               	clrf	sendbyte@mode
   720  0788  3080               	movlw	128
   721  0789  120A  118A  2736   	fcall	_sendbyte
   722  078C  0008               	return
   723  078D                     __end_of_LCD_Init:	
   724                           
   725                           	psect	text5
   726  0736                     __ptext5:	
   727 ;; *************** function _sendbyte *****************
   728 ;; Defined at:
   729 ;;		line 19 in file "lcd.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  c               1    wreg     unsigned char 
   732 ;;  mode            1    2[COMMON] unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  c               1    3[COMMON] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         1       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         2       0       0       0       0
   748 ;;Total ram usage:        2 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    1
   751 ;; This function calls:
   752 ;;		_LCD_delay
   753 ;; This function is called by:
   754 ;;		_LCD_Init
   755 ;;		_LCD_SetPos
   756 ;;		_LCD_String
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _sendbyte
   762  0736                     _sendbyte:	
   763                           
   764                           ;incstack = 0
   765                           ; Regs used in _sendbyte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   766                           ;sendbyte@c stored from wreg
   767  0736  00F3               	movwf	sendbyte@c
   768                           
   769                           ;lcd.c: 21: PORTD=c;
   770  0737  0873               	movf	sendbyte@c,w
   771  0738  1283               	bcf	3,5	;RP0=0, select bank0
   772  0739  1303               	bcf	3,6	;RP1=0, select bank0
   773  073A  0088               	movwf	8	;volatile
   774                           
   775                           ;lcd.c: 22: if(mode==0) RC4=0;
   776  073B  0872               	movf	sendbyte@mode,w
   777  073C  1D03               	btfss	3,2
   778  073D  2F40               	goto	l39
   779  073E  1207               	bcf	7,4	;volatile
   780  073F  2F41               	goto	l40
   781  0740                     l39:	
   782                           
   783                           ;lcd.c: 23: else RC4=1;
   784  0740  1607               	bsf	7,4	;volatile
   785  0741                     l40:	
   786                           
   787                           ;lcd.c: 24: RC5=0;
   788  0741  1287               	bcf	7,5	;volatile
   789                           
   790                           ;lcd.c: 25: RC6=0;
   791  0742  1307               	bcf	7,6	;volatile
   792                           
   793                           ;lcd.c: 26: LCD_delay();
   794  0743  120A  118A  2722   	fcall	_LCD_delay
   795                           
   796                           ;lcd.c: 27: RC6=1;
   797  0746  1283               	bcf	3,5	;RP0=0, select bank0
   798  0747  1303               	bcf	3,6	;RP1=0, select bank0
   799  0748  1707               	bsf	7,6	;volatile
   800  0749  0008               	return
   801  074A                     __end_of_sendbyte:	
   802                           
   803                           	psect	text6
   804  0722                     __ptext6:	
   805 ;; *************** function _LCD_delay *****************
   806 ;; Defined at:
   807 ;;		line 7 in file "lcd.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  i               2    0[COMMON] int 
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2, btemp+1
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         2       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0
   824 ;;      Totals:         2       0       0       0       0
   825 ;;Total ram usage:        2 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_sendbyte
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _LCD_delay
   836  0722                     _LCD_delay:	
   837                           
   838                           ;lcd.c: 9: int i;
   839                           ;lcd.c: 10: for(i=0;i<19;i++);
   840                           
   841                           ;incstack = 0
   842                           ; Regs used in _LCD_delay: [wreg+status,2+btemp+1]
   843  0722  01F0               	clrf	LCD_delay@i
   844  0723  01F1               	clrf	LCD_delay@i+1
   845  0724                     L1:	
   846  0724  0871               	movf	LCD_delay@i+1,w
   847  0725  3A80               	xorlw	128
   848  0726  00FF               	movwf	127
   849  0727  3080               	movlw	128
   850  0728  027F               	subwf	127,w
   851  0729  1D03               	skipz
   852  072A  2F2D               	goto	u15
   853  072B  3013               	movlw	19
   854  072C  0270               	subwf	LCD_delay@i,w
   855  072D                     u15:	
   856  072D  1803               	btfsc	3,0
   857  072E  0008               	return
   858  072F  3001               	movlw	1
   859  0730  07F0               	addwf	LCD_delay@i,f
   860  0731  1803               	skipnc
   861  0732  0AF1               	incf	LCD_delay@i+1,f
   862  0733  3000               	movlw	0
   863  0734  07F1               	addwf	LCD_delay@i+1,f
   864  0735  2F24               	goto	L1
   865  0736                     __end_of_LCD_delay:	
   866  007E                     btemp	set	126	;btemp
   867  007E                     wtemp0	set	126


Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_String@st	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_LCD_String
    _LCD_String->_sendbyte
    _LCD_SetPos->_sendbyte
    _LCD_Init->_sendbyte
    _sendbyte->_LCD_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2279
                                              7 COMMON     1     1      0
                           _LCD_Init
                      _LCD_PORT_init
                         _LCD_SetPos
                         _LCD_String
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           3     3      0     802
                                              4 COMMON     3     3      0
                           _sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_SetPos                                           2     1      1     873
                                              4 COMMON     2     1      1
                           _sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_PORT_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     604
                           _sendbyte
 ---------------------------------------------------------------------------------
 (2) _sendbyte                                             2     1      1     604
                                              2 COMMON     2     1      1
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (3) _LCD_delay                                            2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _sendbyte
       _LCD_delay
   _LCD_PORT_init
   _LCD_SetPos
     _sendbyte
       _LCD_delay
   _LCD_String
     _sendbyte
       _LCD_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Mar 22 16:15:51 2018

                      pc 0002              __CFG_CP$OFF 0000              ?_LCD_SetPos 0074  
                     l13 07FB                       l40 0741                       l53 07BC  
                     l39 0740                       u15 072D                       fsr 0004  
            ?_LCD_String 0070                      l601 074C                      l611 07A6  
                    l605 078F                      l607 0796                      l615 07AE  
                    l609 079E                      _RC4 003C                      _RC5 003D  
                    _RC6 003E             __CFG_CPD$OFF 0000                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     STR_1 0009  
                   STR_2 0012                     STR_3 001B                     STR_4 0024  
           __CFG_WRT$OFF 0000                     _main 07BD                     btemp 007E  
                   start 0000       __size_of_LCD_delay 0014              LCD_SetPos@x 0075  
            LCD_SetPos@y 0074         __end_of_LCD_Init 078D                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088            __CFG_PWRTE$ON 0000              LCD_String@i 0075  
         __CFG_BOREN$OFF 0000                    pclath 000A          ??_LCD_PORT_init 0070  
    __size_of_LCD_SetPos 0030                    status 0003                    wtemp0 007E  
    __size_of_LCD_String 0021          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0077        __end_of_LCD_delay 0736             LCD_String@st 0076  
       __end_of_sendbyte 074A  __end_of__initialization 07FC                ?_LCD_Init 0070  
         __pcstackCOMMON 0070             ??_LCD_SetPos 0075             ??_LCD_String 0074  
             ??_LCD_Init 0074       __end_of_LCD_SetPos 07BD       __end_of_LCD_String 076B  
             __pmaintext 07BD               __stringtab 0003                ?_sendbyte 0072  
                __ptext1 074A                  __ptext2 078D                  __ptext3 071D  
                __ptext4 076B                  __ptext5 0736                  __ptext6 0722  
              _LCD_delay 0722     end_of_initialization 07FC    __end_of_LCD_PORT_init 0722  
             ??_sendbyte 0073               ?_LCD_delay 0070        __size_of_LCD_Init 0022  
             LCD_delay@i 0070      start_initialization 07FC                ___latbits 0002  
            ??_LCD_delay 0070        __size_of_sendbyte 0014                __pstrings 0003  
               _LCD_Init 076B              __stringbase 0008             sendbyte@mode 0072  
     __end_of__stringtab 0009   __size_of_LCD_PORT_init 0005                sendbyte@c 0073  
          __size_of_main 003F                 _sendbyte 0736               _LCD_SetPos 078D  
             _LCD_String 074A            _LCD_PORT_init 071D                stringcode 0003  
               stringdir 0003                 stringtab 0003           ?_LCD_PORT_init 0070  
