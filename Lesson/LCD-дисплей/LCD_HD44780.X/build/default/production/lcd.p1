Version 3.2 HI-TECH Software Intermediate Code
"496 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f84a.h
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"208
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"164
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
[v F276 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic.h
[v __delay `JF276 ~T0 @X0 0 e ]
[p i __delay ]
"664 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f84a.h
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
"63 lcd.h
[v _Send_byte `(v ~T0 @X0 0 sf1`uc ]
"452 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f84a.h
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"64 lcd.h
[v _LCDGotoXY `(v ~T0 @X0 0 ef2`uc`uc ]
"95 C:\Program Files (x86)\Microchip\xc8\v1.44\include\stdlib.h
[v _itoa `(*uc ~T0 @X0 0 ef3`*uc`i`i ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f84a.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f84a.h
[; ;pic16f84a.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f84a.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f84a.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f84a.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f84a.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f84a.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f84a.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f84a.h: 76: typedef union {
[; ;pic16f84a.h: 77: struct {
[; ;pic16f84a.h: 78: unsigned C :1;
[; ;pic16f84a.h: 79: unsigned DC :1;
[; ;pic16f84a.h: 80: unsigned Z :1;
[; ;pic16f84a.h: 81: unsigned nPD :1;
[; ;pic16f84a.h: 82: unsigned nTO :1;
[; ;pic16f84a.h: 83: unsigned RP :2;
[; ;pic16f84a.h: 84: unsigned IRP :1;
[; ;pic16f84a.h: 85: };
[; ;pic16f84a.h: 86: struct {
[; ;pic16f84a.h: 87: unsigned :5;
[; ;pic16f84a.h: 88: unsigned RP0 :1;
[; ;pic16f84a.h: 89: unsigned RP1 :1;
[; ;pic16f84a.h: 90: };
[; ;pic16f84a.h: 91: struct {
[; ;pic16f84a.h: 92: unsigned CARRY :1;
[; ;pic16f84a.h: 93: unsigned :1;
[; ;pic16f84a.h: 94: unsigned ZERO :1;
[; ;pic16f84a.h: 95: };
[; ;pic16f84a.h: 96: } STATUSbits_t;
[; ;pic16f84a.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f84a.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f84a.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f84a.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f84a.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f84a.h: 169: typedef union {
[; ;pic16f84a.h: 170: struct {
[; ;pic16f84a.h: 171: unsigned RA0 :1;
[; ;pic16f84a.h: 172: unsigned RA1 :1;
[; ;pic16f84a.h: 173: unsigned RA2 :1;
[; ;pic16f84a.h: 174: unsigned RA3 :1;
[; ;pic16f84a.h: 175: unsigned RA4 :1;
[; ;pic16f84a.h: 176: };
[; ;pic16f84a.h: 177: } PORTAbits_t;
[; ;pic16f84a.h: 178: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f84a.h: 208: extern volatile unsigned char PORTB @ 0x006;
"210
[; ;pic16f84a.h: 210: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f84a.h: 213: typedef union {
[; ;pic16f84a.h: 214: struct {
[; ;pic16f84a.h: 215: unsigned RB0 :1;
[; ;pic16f84a.h: 216: unsigned RB1 :1;
[; ;pic16f84a.h: 217: unsigned RB2 :1;
[; ;pic16f84a.h: 218: unsigned RB3 :1;
[; ;pic16f84a.h: 219: unsigned RB4 :1;
[; ;pic16f84a.h: 220: unsigned RB5 :1;
[; ;pic16f84a.h: 221: unsigned RB6 :1;
[; ;pic16f84a.h: 222: unsigned RB7 :1;
[; ;pic16f84a.h: 223: };
[; ;pic16f84a.h: 224: } PORTBbits_t;
[; ;pic16f84a.h: 225: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f84a.h: 270: extern volatile unsigned char EEDATA @ 0x008;
"272
[; ;pic16f84a.h: 272: asm("EEDATA equ 08h");
[; <" EEDATA equ 08h ;# ">
[; ;pic16f84a.h: 277: extern volatile unsigned char EEADR @ 0x009;
"279
[; ;pic16f84a.h: 279: asm("EEADR equ 09h");
[; <" EEADR equ 09h ;# ">
[; ;pic16f84a.h: 284: extern volatile unsigned char PCLATH @ 0x00A;
"286
[; ;pic16f84a.h: 286: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f84a.h: 289: typedef union {
[; ;pic16f84a.h: 290: struct {
[; ;pic16f84a.h: 291: unsigned PCLATH :5;
[; ;pic16f84a.h: 292: };
[; ;pic16f84a.h: 293: } PCLATHbits_t;
[; ;pic16f84a.h: 294: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f84a.h: 304: extern volatile unsigned char INTCON @ 0x00B;
"306
[; ;pic16f84a.h: 306: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f84a.h: 309: typedef union {
[; ;pic16f84a.h: 310: struct {
[; ;pic16f84a.h: 311: unsigned RBIF :1;
[; ;pic16f84a.h: 312: unsigned INTF :1;
[; ;pic16f84a.h: 313: unsigned T0IF :1;
[; ;pic16f84a.h: 314: unsigned RBIE :1;
[; ;pic16f84a.h: 315: unsigned INTE :1;
[; ;pic16f84a.h: 316: unsigned T0IE :1;
[; ;pic16f84a.h: 317: unsigned EEIE :1;
[; ;pic16f84a.h: 318: unsigned GIE :1;
[; ;pic16f84a.h: 319: };
[; ;pic16f84a.h: 320: struct {
[; ;pic16f84a.h: 321: unsigned :2;
[; ;pic16f84a.h: 322: unsigned TMR0IF :1;
[; ;pic16f84a.h: 323: unsigned :2;
[; ;pic16f84a.h: 324: unsigned TMR0IE :1;
[; ;pic16f84a.h: 325: };
[; ;pic16f84a.h: 326: } INTCONbits_t;
[; ;pic16f84a.h: 327: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f84a.h: 382: extern volatile unsigned char OPTION_REG @ 0x081;
"384
[; ;pic16f84a.h: 384: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f84a.h: 387: typedef union {
[; ;pic16f84a.h: 388: struct {
[; ;pic16f84a.h: 389: unsigned PS :3;
[; ;pic16f84a.h: 390: unsigned PSA :1;
[; ;pic16f84a.h: 391: unsigned T0SE :1;
[; ;pic16f84a.h: 392: unsigned T0CS :1;
[; ;pic16f84a.h: 393: unsigned INTEDG :1;
[; ;pic16f84a.h: 394: unsigned nRBPU :1;
[; ;pic16f84a.h: 395: };
[; ;pic16f84a.h: 396: struct {
[; ;pic16f84a.h: 397: unsigned PS0 :1;
[; ;pic16f84a.h: 398: unsigned PS1 :1;
[; ;pic16f84a.h: 399: unsigned PS2 :1;
[; ;pic16f84a.h: 400: };
[; ;pic16f84a.h: 401: } OPTION_REGbits_t;
[; ;pic16f84a.h: 402: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f84a.h: 452: extern volatile unsigned char TRISA @ 0x085;
"454
[; ;pic16f84a.h: 454: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f84a.h: 457: typedef union {
[; ;pic16f84a.h: 458: struct {
[; ;pic16f84a.h: 459: unsigned TRISA0 :1;
[; ;pic16f84a.h: 460: unsigned TRISA1 :1;
[; ;pic16f84a.h: 461: unsigned TRISA2 :1;
[; ;pic16f84a.h: 462: unsigned TRISA3 :1;
[; ;pic16f84a.h: 463: unsigned TRISA4 :1;
[; ;pic16f84a.h: 464: };
[; ;pic16f84a.h: 465: } TRISAbits_t;
[; ;pic16f84a.h: 466: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f84a.h: 496: extern volatile unsigned char TRISB @ 0x086;
"498
[; ;pic16f84a.h: 498: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f84a.h: 501: typedef union {
[; ;pic16f84a.h: 502: struct {
[; ;pic16f84a.h: 503: unsigned TRISB0 :1;
[; ;pic16f84a.h: 504: unsigned TRISB1 :1;
[; ;pic16f84a.h: 505: unsigned TRISB2 :1;
[; ;pic16f84a.h: 506: unsigned TRISB3 :1;
[; ;pic16f84a.h: 507: unsigned TRISB4 :1;
[; ;pic16f84a.h: 508: unsigned TRISB5 :1;
[; ;pic16f84a.h: 509: unsigned TRISB6 :1;
[; ;pic16f84a.h: 510: unsigned TRISB7 :1;
[; ;pic16f84a.h: 511: };
[; ;pic16f84a.h: 512: } TRISBbits_t;
[; ;pic16f84a.h: 513: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f84a.h: 558: extern volatile unsigned char EECON1 @ 0x088;
"560
[; ;pic16f84a.h: 560: asm("EECON1 equ 088h");
[; <" EECON1 equ 088h ;# ">
[; ;pic16f84a.h: 563: typedef union {
[; ;pic16f84a.h: 564: struct {
[; ;pic16f84a.h: 565: unsigned RD :1;
[; ;pic16f84a.h: 566: unsigned WR :1;
[; ;pic16f84a.h: 567: unsigned WREN :1;
[; ;pic16f84a.h: 568: unsigned WRERR :1;
[; ;pic16f84a.h: 569: unsigned EEIF :1;
[; ;pic16f84a.h: 570: };
[; ;pic16f84a.h: 571: } EECON1bits_t;
[; ;pic16f84a.h: 572: extern volatile EECON1bits_t EECON1bits @ 0x088;
[; ;pic16f84a.h: 602: extern volatile unsigned char EECON2 @ 0x089;
"604
[; ;pic16f84a.h: 604: asm("EECON2 equ 089h");
[; <" EECON2 equ 089h ;# ">
[; ;pic16f84a.h: 614: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f84a.h: 616: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f84a.h: 618: extern volatile __bit EEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f84a.h: 620: extern volatile __bit EEIF @ (((unsigned) &EECON1)*8) + 4;
[; ;pic16f84a.h: 622: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f84a.h: 624: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f84a.h: 626: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f84a.h: 628: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f84a.h: 630: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f84a.h: 632: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f84a.h: 634: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f84a.h: 636: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f84a.h: 638: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f84a.h: 640: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f84a.h: 642: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f84a.h: 644: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f84a.h: 646: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f84a.h: 648: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f84a.h: 650: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f84a.h: 652: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f84a.h: 654: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f84a.h: 656: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f84a.h: 658: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f84a.h: 660: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f84a.h: 662: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f84a.h: 664: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f84a.h: 666: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f84a.h: 668: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f84a.h: 670: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f84a.h: 672: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f84a.h: 674: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f84a.h: 676: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f84a.h: 678: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f84a.h: 680: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f84a.h: 682: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f84a.h: 684: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f84a.h: 686: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f84a.h: 688: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f84a.h: 690: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f84a.h: 692: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f84a.h: 694: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f84a.h: 696: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f84a.h: 698: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f84a.h: 700: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f84a.h: 702: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f84a.h: 704: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f84a.h: 706: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f84a.h: 708: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f84a.h: 710: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f84a.h: 712: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f84a.h: 714: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f84a.h: 716: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f84a.h: 718: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f84a.h: 720: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f84a.h: 722: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f84a.h: 724: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f84a.h: 726: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 142: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;lcd.h: 63: static void Send_byte(char i);
[; ;lcd.h: 64: void LCDGotoXY(char x,char y) ;
[; ;lcd.h: 65: void LCDputsIntGotoXY(int val,char x,char y);
[; ;lcd.h: 66: void LCDsendString(char *s);
[; ;lcd.h: 67: void LCDstringXY(char *i,char x,char y);
[; ;lcd.h: 68: void LCDGotoXY(char x,char y);
[; ;lcd.h: 69: void LCDdataXY (char a, char b,char c);
[; ;lcd.h: 70: void LCDdata(char i);
[; ;lcd.h: 71: void LCDinit(void);
[; ;lcd.h: 72: void LCDclear(void);
[; ;lcd.c: 2: static void HiPin(void) ;
[; ;lcd.c: 3: static void OutPin(void);
[; ;lcd.c: 4: static void InPin(void) ;
[; ;lcd.c: 5: void strob(void);
[; ;lcd.c: 6: unsigned char check_Button(void);
[; ;lcd.c: 7: static void Busy_flag(void);
"11 lcd.c
[v _HiPin `(v ~T0 @X0 1 sf ]
"12
{
[; ;lcd.c: 11: static void HiPin(void)
[; ;lcd.c: 12: {
[e :U _HiPin ]
[f ]
[; ;lcd.c: 13: TRISB |=((1<<7)|(1<<6)|(1<<5)|(1<<4));
"13
[e =| _TRISB -> | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i `uc ]
[; ;lcd.c: 14: PORTB&=~((1<<7)|(1<<6)|(1<<5)|(1<<4));
"14
[e =& _PORTB -> ~ | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i `uc ]
[; ;lcd.c: 15: }
"15
[e :UE 28 ]
}
"17
[v _OutPin `(v ~T0 @X0 1 sf ]
"18
{
[; ;lcd.c: 17: static void OutPin(void)
[; ;lcd.c: 18: {
[e :U _OutPin ]
[f ]
[; ;lcd.c: 19: TRISB &=~((1<<7)|(1<<6)|(1<<5)|(1<<4));
"19
[e =& _TRISB -> ~ | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i `uc ]
[; ;lcd.c: 20: PORTB&=~((1<<7)|(1<<6)|(1<<5)|(1<<4));
"20
[e =& _PORTB -> ~ | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i `uc ]
[; ;lcd.c: 21: }
"21
[e :UE 29 ]
}
"23
[v _InPin `(v ~T0 @X0 1 sf ]
"24
{
[; ;lcd.c: 23: static void InPin(void)
[; ;lcd.c: 24: {
[e :U _InPin ]
[f ]
[; ;lcd.c: 25: TRISB |=((1<<7)|(1<<6)|(1<<5)|(1<<4));
"25
[e =| _TRISB -> | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i `uc ]
[; ;lcd.c: 26: PORTB|=(1<<7)|(1<<6)|(1<<5)|(1<<4);
"26
[e =| _PORTB -> | | | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i `uc ]
[; ;lcd.c: 27: }
"27
[e :UE 30 ]
}
"30
[v _strob `(v ~T0 @X0 1 ef ]
"31
{
[; ;lcd.c: 30: void strob(void)
[; ;lcd.c: 31: {
[e :U _strob ]
[f ]
[; ;lcd.c: 32: PORTA|=(1<<2);
"32
[e =| _PORTA -> << -> 1 `i -> 2 `i `uc ]
[; ;lcd.c: 33: _delay((unsigned long)((1)*(4000000/4000.0)));
"33
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;lcd.c: 34: PORTA&=~(1<<2);
"34
[e =& _PORTA -> ~ << -> 1 `i -> 2 `i `uc ]
[; ;lcd.c: 35: }
"35
[e :UE 31 ]
}
"37
[v _check_Button `(uc ~T0 @X0 1 ef ]
"38
{
[; ;lcd.c: 37: unsigned char check_Button(void)
[; ;lcd.c: 38: {
[e :U _check_Button ]
[f ]
"39
[v _result `uc ~T0 @X0 1 a ]
[; ;lcd.c: 39: unsigned char result=0;
[e = _result -> -> 0 `i `uc ]
"40
[v _butcount `ui ~T0 @X0 1 a ]
[; ;lcd.c: 40: unsigned int butcount=0;
[e = _butcount -> -> 0 `i `ui ]
[; ;lcd.c: 42: while(PORTB&(1<<RB7))
"42
[e $U 33  ]
[e :U 34 ]
[; ;lcd.c: 43: {
"43
{
[; ;lcd.c: 44: if(butcount<10)
"44
[e $ ! < _butcount -> -> 10 `i `ui 36  ]
[; ;lcd.c: 45: {
"45
{
[; ;lcd.c: 46: butcount++;
"46
[e ++ _butcount -> -> 1 `i `ui ]
"47
}
[; ;lcd.c: 47: }
[e $U 37  ]
"48
[e :U 36 ]
[; ;lcd.c: 48: else
[; ;lcd.c: 49: {
"49
{
[; ;lcd.c: 50: result=1;
"50
[e = _result -> -> 1 `i `uc ]
[; ;lcd.c: 51: break;
"51
[e $U 35  ]
"52
}
[e :U 37 ]
"53
}
[e :U 33 ]
"42
[e $ != & -> _PORTB `i << -> 1 `i -> _RB7 `i -> 0 `i 34  ]
[e :U 35 ]
[; ;lcd.c: 52: }
[; ;lcd.c: 53: }
[; ;lcd.c: 55: return result;
"55
[e ) _result ]
[e $UE 32  ]
[; ;lcd.c: 56: }
"56
[e :UE 32 ]
}
"60
[v _Busy_flag `(v ~T0 @X0 1 sf ]
"61
{
[; ;lcd.c: 60: static void Busy_flag(void)
[; ;lcd.c: 61: {
[e :U _Busy_flag ]
[f ]
"62
[v _i `uc ~T0 @X0 1 a ]
[; ;lcd.c: 62: char i=1;
[e = _i -> -> 1 `i `uc ]
[; ;lcd.c: 64: while(i==1)
"64
[e $U 39  ]
[e :U 40 ]
[; ;lcd.c: 65: {
"65
{
[; ;lcd.c: 66: PORTA|=(1<<2);
"66
[e =| _PORTA -> << -> 1 `i -> 2 `i `uc ]
[; ;lcd.c: 67: asm("nop");
"67
[; <" nop ;# ">
[; ;lcd.c: 68: asm("nop");
"68
[; <" nop ;# ">
[; ;lcd.c: 69: if(check_Button()==1)
"69
[e $ ! == -> ( _check_Button ..  `i -> 1 `i 42  ]
[; ;lcd.c: 70: {
"70
{
[; ;lcd.c: 71: i=0;
"71
[e = _i -> -> 0 `i `uc ]
"72
}
[e :U 42 ]
[; ;lcd.c: 72: }
[; ;lcd.c: 73: PORTA&=~(1<<2);
"73
[e =& _PORTA -> ~ << -> 1 `i -> 2 `i `uc ]
[; ;lcd.c: 74: asm("nop");
"74
[; <" nop ;# ">
[; ;lcd.c: 75: asm("nop");
"75
[; <" nop ;# ">
[; ;lcd.c: 76: strob();
"76
[e ( _strob ..  ]
[; ;lcd.c: 77: asm("nop");
"77
[; <" nop ;# ">
[; ;lcd.c: 78: asm("nop");
"78
[; <" nop ;# ">
"80
}
[e :U 39 ]
"64
[e $ == -> _i `i -> 1 `i 40  ]
[e :U 41 ]
[; ;lcd.c: 80: }
[; ;lcd.c: 81: PORTA&=~(1<<1);
"81
[e =& _PORTA -> ~ << -> 1 `i -> 1 `i `uc ]
[; ;lcd.c: 84: }
"84
[e :UE 38 ]
}
"86
[v _LCDcommand `(v ~T0 @X0 1 sf1`uc ]
"87
{
[; ;lcd.c: 86: static void LCDcommand(char i)
[; ;lcd.c: 87: {
[e :U _LCDcommand ]
"86
[v _i `uc ~T0 @X0 1 r1 ]
"87
[f ]
[; ;lcd.c: 88: Busy_flag();
"88
[e ( _Busy_flag ..  ]
[; ;lcd.c: 89: Send_byte(i);
"89
[e ( _Send_byte (1 _i ]
[; ;lcd.c: 91: }
"91
[e :UE 43 ]
}
"92
[v _Send_byte `(v ~T0 @X0 1 sf1`uc ]
"93
{
[; ;lcd.c: 92: static void Send_byte(char i)
[; ;lcd.c: 93: {
[e :U _Send_byte ]
"92
[v _i `uc ~T0 @X0 1 r1 ]
"93
[f ]
[; ;lcd.c: 94: OutPin();
"94
[e ( _OutPin ..  ]
"95
[v _higb `uc ~T0 @X0 1 a ]
[; ;lcd.c: 95: char higb=((i&0b11110000)>>4);
[e = _higb -> >> & -> _i `i -> 240 `i -> 4 `i `uc ]
"96
[v _lowb `uc ~T0 @X0 1 a ]
[; ;lcd.c: 96: char lowb = (i&0b00001111);
[e = _lowb -> & -> _i `i -> 15 `i `uc ]
[; ;lcd.c: 97: if ((higb&1)==1)
"97
[e $ ! == & -> _higb `i -> 1 `i -> 1 `i 45  ]
[; ;lcd.c: 98: {
"98
{
[; ;lcd.c: 99: PORTB|=(1<<4);
"99
[e =| _PORTB -> << -> 1 `i -> 4 `i `uc ]
"100
}
[e :U 45 ]
[; ;lcd.c: 100: }
[; ;lcd.c: 101: higb=higb>>1;
"101
[e = _higb -> >> -> _higb `i -> 1 `i `uc ]
[; ;lcd.c: 102: if ((higb&1)==1)
"102
[e $ ! == & -> _higb `i -> 1 `i -> 1 `i 46  ]
[; ;lcd.c: 103: {
"103
{
[; ;lcd.c: 104: PORTB|=(1<<5);
"104
[e =| _PORTB -> << -> 1 `i -> 5 `i `uc ]
"105
}
[e :U 46 ]
[; ;lcd.c: 105: }
[; ;lcd.c: 106: higb=higb>>1;
"106
[e = _higb -> >> -> _higb `i -> 1 `i `uc ]
[; ;lcd.c: 107: if ((higb&1)==1)
"107
[e $ ! == & -> _higb `i -> 1 `i -> 1 `i 47  ]
[; ;lcd.c: 108: {
"108
{
[; ;lcd.c: 109: PORTB|=(1<<6);
"109
[e =| _PORTB -> << -> 1 `i -> 6 `i `uc ]
"110
}
[e :U 47 ]
[; ;lcd.c: 110: }
[; ;lcd.c: 111: higb=higb>>1;
"111
[e = _higb -> >> -> _higb `i -> 1 `i `uc ]
[; ;lcd.c: 112: if ((higb&1)==1)
"112
[e $ ! == & -> _higb `i -> 1 `i -> 1 `i 48  ]
[; ;lcd.c: 113: {
"113
{
[; ;lcd.c: 114: PORTB|=(1<<7);
"114
[e =| _PORTB -> << -> 1 `i -> 7 `i `uc ]
"115
}
[e :U 48 ]
[; ;lcd.c: 115: }
[; ;lcd.c: 117: strob();
"117
[e ( _strob ..  ]
[; ;lcd.c: 118: OutPin();
"118
[e ( _OutPin ..  ]
[; ;lcd.c: 120: if ((lowb&1)==1)
"120
[e $ ! == & -> _lowb `i -> 1 `i -> 1 `i 49  ]
[; ;lcd.c: 121: {
"121
{
[; ;lcd.c: 122: PORTB|=(1<<4);
"122
[e =| _PORTB -> << -> 1 `i -> 4 `i `uc ]
"123
}
[e :U 49 ]
[; ;lcd.c: 123: }
[; ;lcd.c: 124: lowb=lowb>>1;
"124
[e = _lowb -> >> -> _lowb `i -> 1 `i `uc ]
[; ;lcd.c: 125: if ((lowb&1)==1)
"125
[e $ ! == & -> _lowb `i -> 1 `i -> 1 `i 50  ]
[; ;lcd.c: 126: {
"126
{
[; ;lcd.c: 127: PORTB|=(1<<5);
"127
[e =| _PORTB -> << -> 1 `i -> 5 `i `uc ]
"128
}
[e :U 50 ]
[; ;lcd.c: 128: }
[; ;lcd.c: 129: lowb=lowb>>1;
"129
[e = _lowb -> >> -> _lowb `i -> 1 `i `uc ]
[; ;lcd.c: 130: if ((lowb&1)==1)
"130
[e $ ! == & -> _lowb `i -> 1 `i -> 1 `i 51  ]
[; ;lcd.c: 131: {
"131
{
[; ;lcd.c: 132: PORTB|=(1<<6);
"132
[e =| _PORTB -> << -> 1 `i -> 6 `i `uc ]
"133
}
[e :U 51 ]
[; ;lcd.c: 133: }
[; ;lcd.c: 134: lowb=lowb>>1;
"134
[e = _lowb -> >> -> _lowb `i -> 1 `i `uc ]
[; ;lcd.c: 135: if ((lowb&1)==1)
"135
[e $ ! == & -> _lowb `i -> 1 `i -> 1 `i 52  ]
[; ;lcd.c: 136: {
"136
{
[; ;lcd.c: 137: PORTB|=(1<<7);
"137
[e =| _PORTB -> << -> 1 `i -> 7 `i `uc ]
"138
}
[e :U 52 ]
[; ;lcd.c: 138: }
[; ;lcd.c: 140: strob();
"140
[e ( _strob ..  ]
[; ;lcd.c: 141: }
"141
[e :UE 44 ]
}
"150
[v _LCDinit `(v ~T0 @X0 1 ef ]
"151
{
[; ;lcd.c: 150: void LCDinit(void)
[; ;lcd.c: 151: {
[e :U _LCDinit ]
[f ]
[; ;lcd.c: 152: TRISA &=~((1<<0)|(1<<2)|(1<<1));
"152
[e =& _TRISA -> ~ | | << -> 1 `i -> 0 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `uc ]
[; ;lcd.c: 153: PORTA&=~((1<<0)|(1<<2)|(1<<1));
"153
[e =& _PORTA -> ~ | | << -> 1 `i -> 0 `i << -> 1 `i -> 2 `i << -> 1 `i -> 1 `i `uc ]
[; ;lcd.c: 154: OutPin();
"154
[e ( _OutPin ..  ]
"156
[v _i `uc ~T0 @X0 1 a ]
[; ;lcd.c: 156: char i=0;
[e = _i -> -> 0 `i `uc ]
[; ;lcd.c: 157: while (i!=3)
"157
[e $U 54  ]
[e :U 55 ]
[; ;lcd.c: 158: {
"158
{
[; ;lcd.c: 159: PORTB|=(0<<7)|(0<<6)|(1<<5)|(1<<4);
"159
[e =| _PORTB -> | | | << -> 0 `i -> 7 `i << -> 0 `i -> 6 `i << -> 1 `i -> 5 `i << -> 1 `i -> 4 `i `uc ]
[; ;lcd.c: 160: strob();
"160
[e ( _strob ..  ]
[; ;lcd.c: 161: _delay((unsigned long)((5)*(4000000/4000.0)));
"161
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;lcd.c: 162: i++;
"162
[e ++ _i -> -> 1 `i `uc ]
"163
}
[e :U 54 ]
"157
[e $ != -> _i `i -> 3 `i 55  ]
[e :U 56 ]
[; ;lcd.c: 163: }
[; ;lcd.c: 166: Busy_flag();
"166
[e ( _Busy_flag ..  ]
[; ;lcd.c: 167: OutPin();
"167
[e ( _OutPin ..  ]
[; ;lcd.c: 168: PORTB|=(0<<7)|(0<<6)|(1<<5)|(0<<4);
"168
[e =| _PORTB -> | | | << -> 0 `i -> 7 `i << -> 0 `i -> 6 `i << -> 1 `i -> 5 `i << -> 0 `i -> 4 `i `uc ]
[; ;lcd.c: 169: strob();
"169
[e ( _strob ..  ]
[; ;lcd.c: 170: LCDcommand(0b00101000);
"170
[e ( _LCDcommand (1 -> -> 40 `i `uc ]
[; ;lcd.c: 171: LCDcommand(0b1100);
"171
[e ( _LCDcommand (1 -> -> 12 `i `uc ]
[; ;lcd.c: 172: LCDcommand(0b110);
"172
[e ( _LCDcommand (1 -> -> 6 `i `uc ]
[; ;lcd.c: 173: LCDcommand(0b10);
"173
[e ( _LCDcommand (1 -> -> 2 `i `uc ]
[; ;lcd.c: 174: LCDcommand(0b1);
"174
[e ( _LCDcommand (1 -> -> 1 `i `uc ]
[; ;lcd.c: 175: }
"175
[e :UE 53 ]
}
"180
[v _LCDdata `(v ~T0 @X0 1 ef1`uc ]
"181
{
[; ;lcd.c: 180: void LCDdata(char i)
[; ;lcd.c: 181: {
[e :U _LCDdata ]
"180
[v _i `uc ~T0 @X0 1 r1 ]
"181
[f ]
[; ;lcd.c: 182: Busy_flag();
"182
[e ( _Busy_flag ..  ]
[; ;lcd.c: 183: PORTA|=(1<<0);
"183
[e =| _PORTA -> << -> 1 `i -> 0 `i `uc ]
[; ;lcd.c: 184: Send_byte(i);
"184
[e ( _Send_byte (1 _i ]
[; ;lcd.c: 185: PORTA&=~(1<<0);
"185
[e =& _PORTA -> ~ << -> 1 `i -> 0 `i `uc ]
[; ;lcd.c: 186: }
"186
[e :UE 57 ]
}
"187
[v _LCDdataXY `(v ~T0 @X0 1 ef3`uc`uc`uc ]
"188
{
[; ;lcd.c: 187: void LCDdataXY (char a, char b,char c)
[; ;lcd.c: 188: {
[e :U _LCDdataXY ]
"187
[v _a `uc ~T0 @X0 1 r1 ]
[v _b `uc ~T0 @X0 1 r2 ]
[v _c `uc ~T0 @X0 1 r3 ]
"188
[f ]
[; ;lcd.c: 189: LCDGotoXY(b,c);
"189
[e ( _LCDGotoXY (2 , _b _c ]
[; ;lcd.c: 190: LCDdata(a);
"190
[e ( _LCDdata (1 _a ]
[; ;lcd.c: 191: }
"191
[e :UE 58 ]
}
"192
[v _LCDGotoXY `(v ~T0 @X0 1 ef2`uc`uc ]
"193
{
[; ;lcd.c: 192: void LCDGotoXY(char x,char y)
[; ;lcd.c: 193: {
[e :U _LCDGotoXY ]
"192
[v _x `uc ~T0 @X0 1 r1 ]
[v _y `uc ~T0 @X0 1 r2 ]
"193
[f ]
"194
[v _Address `uc ~T0 @X0 1 a ]
[; ;lcd.c: 194: char Address;
[; ;lcd.c: 196: switch(y)
"196
[e $U 61  ]
[; ;lcd.c: 197: {
"197
{
[; ;lcd.c: 198: case 0: Address = 0x00+x;
"198
[e :U 62 ]
[e = _Address -> + -> 0 `i -> _x `i `uc ]
[; ;lcd.c: 199: break;
"199
[e $U 60  ]
[; ;lcd.c: 200: case 1: Address = 0x40+x;
"200
[e :U 63 ]
[e = _Address -> + -> 64 `i -> _x `i `uc ]
[; ;lcd.c: 201: break;
"201
[e $U 60  ]
[; ;lcd.c: 202: case 2: Address = 0x14+x;
"202
[e :U 64 ]
[e = _Address -> + -> 20 `i -> _x `i `uc ]
[; ;lcd.c: 203: break;
"203
[e $U 60  ]
[; ;lcd.c: 204: case 3: Address = 0x54+x;
"204
[e :U 65 ]
[e = _Address -> + -> 84 `i -> _x `i `uc ]
[; ;lcd.c: 205: break;
"205
[e $U 60  ]
[; ;lcd.c: 206: default: Address = 0x00+x;
"206
[e :U 66 ]
[e = _Address -> + -> 0 `i -> _x `i `uc ]
"207
}
[; ;lcd.c: 207: }
[e $U 60  ]
"196
[e :U 61 ]
[e [\ _y , $ -> -> 0 `i `uc 62
 , $ -> -> 1 `i `uc 63
 , $ -> -> 2 `i `uc 64
 , $ -> -> 3 `i `uc 65
 66 ]
"207
[e :U 60 ]
[; ;lcd.c: 209: LCDcommand(1<<7 | Address);
"209
[e ( _LCDcommand (1 -> | << -> 1 `i -> 7 `i -> _Address `i `uc ]
[; ;lcd.c: 210: }
"210
[e :UE 59 ]
}
"214
[v _LCDstringXY `(v ~T0 @X0 1 ef3`*uc`uc`uc ]
"215
{
[; ;lcd.c: 214: void LCDstringXY(char *i,char x,char y)
[; ;lcd.c: 215: {
[e :U _LCDstringXY ]
"214
[v _i `*uc ~T0 @X0 1 r1 ]
[v _x `uc ~T0 @X0 1 r2 ]
[v _y `uc ~T0 @X0 1 r3 ]
"215
[f ]
[; ;lcd.c: 216: LCDGotoXY(x,y);
"216
[e ( _LCDGotoXY (2 , _x _y ]
[; ;lcd.c: 217: while( *i )
"217
[e $U 68  ]
[e :U 69 ]
[; ;lcd.c: 218: {
"218
{
[; ;lcd.c: 219: LCDdata(*i++ );
"219
[e ( _LCDdata (1 *U ++ _i * -> -> 1 `i `x -> -> # *U _i `i `x ]
"220
}
[e :U 68 ]
"217
[e $ != -> *U _i `i -> -> -> 0 `i `uc `i 69  ]
[e :U 70 ]
[; ;lcd.c: 220: }
[; ;lcd.c: 221: }
"221
[e :UE 67 ]
}
"222
[v _LCDsendString `(v ~T0 @X0 1 ef1`*uc ]
"223
{
[; ;lcd.c: 222: void LCDsendString(char *s)
[; ;lcd.c: 223: {
[e :U _LCDsendString ]
"222
[v _s `*uc ~T0 @X0 1 r1 ]
"223
[f ]
[; ;lcd.c: 224: while( *s )
"224
[e $U 72  ]
[e :U 73 ]
[; ;lcd.c: 225: {
"225
{
[; ;lcd.c: 226: LCDdata(*s++ );
"226
[e ( _LCDdata (1 *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
"227
}
[e :U 72 ]
"224
[e $ != -> *U _s `i -> -> -> 0 `i `uc `i 73  ]
[e :U 74 ]
[; ;lcd.c: 227: }
[; ;lcd.c: 229: }
"229
[e :UE 71 ]
}
"232
[v _LCDputsIntGotoXY `(v ~T0 @X0 1 ef3`i`uc`uc ]
"233
{
[; ;lcd.c: 232: void LCDputsIntGotoXY(int val,char x,char y)
[; ;lcd.c: 233: {
[e :U _LCDputsIntGotoXY ]
"232
[v _val `i ~T0 @X0 1 r1 ]
[v _x `uc ~T0 @X0 1 r2 ]
[v _y `uc ~T0 @X0 1 r3 ]
"233
[f ]
"234
[v _str `uc ~T0 @X0 -> 40 `i a ]
[; ;lcd.c: 234: char str[40];
[; ;lcd.c: 235: itoa(val,str,10);
"235
[e ( _itoa (3 , , -> _val `*uc -> &U _str `i -> 10 `i ]
[; ;lcd.c: 237: LCDstringXY(str,x,y);
"237
[e ( _LCDstringXY (3 , , &U _str _x _y ]
[; ;lcd.c: 239: }
"239
[e :UE 75 ]
}
"241
[v _LCDclear `(v ~T0 @X0 1 ef ]
"242
{
[; ;lcd.c: 241: void LCDclear(void)
[; ;lcd.c: 242: {
[e :U _LCDclear ]
[f ]
[; ;lcd.c: 243: LCDcommand(0b1);
"243
[e ( _LCDcommand (1 -> -> 1 `i `uc ]
[; ;lcd.c: 244: }
"244
[e :UE 76 ]
}
