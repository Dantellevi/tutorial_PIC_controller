

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Feb 04 19:39:36 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.44
    15                           ; Generated 14/09/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  001A                     _RCREG	set	26
   205  0019                     _TXREG	set	25
   206  0005                     _PORTAbits	set	5
   207  0005                     _PORTA	set	5
   208  0065                     _RCIF	set	101
   209  00C4                     _CREN	set	196
   210  00C7                     _SPEN	set	199
   211  0099                     _SPBRG	set	153
   212  0085                     _TRISA	set	133
   213  04C1                     _TRMT	set	1217
   214  04C5                     _TXEN	set	1221
   215  043E                     _TRISC6	set	1086
   216  043F                     _TRISC7	set	1087
   217  04C4                     _SYNC	set	1220
   218  04C2                     _BRGH	set	1218
   219                           
   220                           ; #config settings
   221  0000                     
   222                           	psect	cinit
   223  07FC                     start_initialization:	
   224  07FC                     __initialization:	
   225  07FC                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228  07FC                     __end_of__initialization:	
   229  07FC  0183               	clrf	3
   230  07FD  120A  118A  2E4C   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	cstackCOMMON
   233  0070                     __pcstackCOMMON:	
   234  0070                     ?_USART_Read:	
   235  0070                     ??_USART_Read:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_Port_Init:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ??_Port_Init:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_main:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?___aldiv:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ___aldiv@divisor:	
   251                           ; 4 bytes @ 0x0
   252                           
   253                           
   254                           ; 4 bytes @ 0x0
   255  0070                     	ds	4
   256  0074                     ___aldiv@dividend:	
   257                           
   258                           ; 4 bytes @ 0x4
   259  0074                     	ds	4
   260  0078                     ??___aldiv:	
   261                           
   262                           ; 1 bytes @ 0x8
   263  0078                     	ds	1
   264  0079                     USART_Init@x:	
   265                           
   266                           ; 2 bytes @ 0x9
   267  0079                     	ds	2
   268  007B                     ??_main:	
   269                           
   270                           ; 1 bytes @ 0xB
   271  007B                     	ds	3
   272                           
   273                           	psect	cstackBANK0
   274  0020                     __pcstackBANK0:	
   275  0020                     ___aldiv@counter:	
   276                           
   277                           ; 1 bytes @ 0x0
   278  0020                     	ds	1
   279  0021                     ___aldiv@sign:	
   280                           
   281                           ; 1 bytes @ 0x1
   282  0021                     	ds	1
   283  0022                     ___aldiv@quotient:	
   284                           
   285                           ; 4 bytes @ 0x2
   286  0022                     	ds	4
   287  0026                     ?_USART_Init:	
   288  0026                     USART_Init@baud:	
   289                           ; 1 bytes @ 0x6
   290                           
   291                           
   292                           ; 4 bytes @ 0x6
   293  0026                     	ds	4
   294  002A                     ??_USART_Init:	
   295                           
   296                           ; 1 bytes @ 0xA
   297  002A                     	ds	12
   298  0036                     main@status:	
   299                           
   300                           ; 1 bytes @ 0x16
   301  0036                     	ds	1
   302                           
   303                           	psect	maintext
   304  064C                     __pmaintext:	
   305 ;;
   306 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   307 ;;
   308 ;; *************** function _main *****************
   309 ;; Defined at:
   310 ;;		line 12 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  status          1   22[BANK0 ] unsigned char 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0, pclath, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : B00/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   324 ;;      Params:         0       0       0       0       0
   325 ;;      Locals:         0       1       0       0       0
   326 ;;      Temps:          3       0       0       0       0
   327 ;;      Totals:         3       1       0       0       0
   328 ;;Total ram usage:        4 bytes
   329 ;; Hardware stack levels required when called:    2
   330 ;; This function calls:
   331 ;;		_Port_Init
   332 ;;		_USART_Init
   333 ;;		_USART_Read
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           
   340                           ;psect for function _main
   341  064C                     _main:	
   342                           
   343                           ;main.c: 14: Port_Init();
   344                           
   345                           ;incstack = 0
   346                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   347  064C  120A  118A  2645  120A  118A  	fcall	_Port_Init
   348                           
   349                           ;main.c: 15: char status=USART_Init(9600);
   350  0651  3000               	movlw	0
   351  0652  1283               	bcf	3,5	;RP0=0, select bank0
   352  0653  1303               	bcf	3,6	;RP1=0, select bank0
   353  0654  00A9               	movwf	USART_Init@baud+3
   354  0655  3000               	movlw	0
   355  0656  00A8               	movwf	USART_Init@baud+2
   356  0657  3025               	movlw	37
   357  0658  00A7               	movwf	USART_Init@baud+1
   358  0659  3080               	movlw	128
   359  065A  00A6               	movwf	USART_Init@baud
   360  065B  120A  118A  2711  120A  118A  	fcall	_USART_Init
   361  0660  00FB               	movwf	??_main
   362  0661  087B               	movf	??_main,w
   363  0662  1283               	bcf	3,5	;RP0=0, select bank0
   364  0663  1303               	bcf	3,6	;RP1=0, select bank0
   365  0664  00B6               	movwf	main@status
   366  0665                     l740:	
   367                           ;main.c: 17: while(1)
   368                           
   369                           
   370                           ;main.c: 18: {
   371                           ;main.c: 25: if(USART_Read()=='1')
   372  0665  120A  118A  263F  120A  118A  	fcall	_USART_Read
   373  066A  3A31               	xorlw	49
   374  066B  1D03               	skipz
   375  066C  2E71               	goto	l21
   376                           
   377                           ;main.c: 26: {
   378                           ;main.c: 27: PORTAbits.RA0=1;
   379  066D  1283               	bcf	3,5	;RP0=0, select bank0
   380  066E  1303               	bcf	3,6	;RP1=0, select bank0
   381  066F  1405               	bsf	5,0	;volatile
   382                           
   383                           ;main.c: 28: }
   384  0670  2E74               	goto	l744
   385  0671                     l21:	
   386                           
   387                           ;main.c: 29: else
   388                           ;main.c: 30: {
   389                           ;main.c: 31: PORTAbits.RA0=0;
   390  0671  1283               	bcf	3,5	;RP0=0, select bank0
   391  0672  1303               	bcf	3,6	;RP1=0, select bank0
   392  0673  1005               	bcf	5,0	;volatile
   393  0674                     l744:	
   394                           
   395                           ;main.c: 32: }
   396                           ;main.c: 34: _delay((unsigned long)((500)*(8000000/4000.0)));
   397  0674  3006               	movlw	6
   398  0675  00FD               	movwf	??_main+2
   399  0676  3013               	movlw	19
   400  0677  00FC               	movwf	??_main+1
   401  0678  30AD               	movlw	173
   402  0679  00FB               	movwf	??_main
   403  067A                     u457:	
   404  067A  0BFB               	decfsz	??_main,f
   405  067B  2E7A               	goto	u457
   406  067C  0BFC               	decfsz	??_main+1,f
   407  067D  2E7A               	goto	u457
   408  067E  0BFD               	decfsz	??_main+2,f
   409  067F  2E7A               	goto	u457
   410  0680  2E81               	nop2
   411  0681  2E65               	goto	l740
   412  0682                     __end_of_main:	
   413                           
   414                           	psect	text1
   415  063F                     __ptext1:	
   416 ;; *************** function _USART_Read *****************
   417 ;; Defined at:
   418 ;;		line 75 in file "USART.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      unsigned char 
   425 ;; Registers used:
   426 ;;		wreg
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0
   435 ;;      Totals:         0       0       0       0       0
   436 ;;Total ram usage:        0 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		_main
   442 ;;		_UART_Read_Text
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _USART_Read
   448  063F                     _USART_Read:	
   449  063F                     l72:	
   450                           ;USART.c: 77: while(!RCIF);
   451                           
   452                           ;incstack = 0
   453                           ; Regs used in _USART_Read: [wreg]
   454                           
   455  063F  1283               	bcf	3,5	;RP0=0, select bank0
   456  0640  1303               	bcf	3,6	;RP1=0, select bank0
   457  0641  1E8C               	btfss	12,5	;volatile
   458  0642  2E3F               	goto	l72
   459                           
   460                           ;USART.c: 78: return RCREG;
   461  0643  081A               	movf	26,w	;volatile
   462  0644  0008               	return
   463  0645                     __end_of_USART_Read:	
   464                           
   465                           	psect	text2
   466  0711                     __ptext2:	
   467 ;; *************** function _USART_Init *****************
   468 ;; Defined at:
   469 ;;		line 8 in file "USART.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;  baud            4    6[BANK0 ] long 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  x               2    9[COMMON] unsigned int 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      unsigned char 
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0, pclath, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       4       0       0       0
   484 ;;      Locals:         2       0       0       0       0
   485 ;;      Temps:          0      12       0       0       0
   486 ;;      Totals:         2      16       0       0       0
   487 ;;Total ram usage:       18 bytes
   488 ;; Hardware stack levels used:    1
   489 ;; Hardware stack levels required when called:    1
   490 ;; This function calls:
   491 ;;		___aldiv
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _USART_Init
   499  0711                     _USART_Init:	
   500                           
   501                           ;USART.c: 10: unsigned int x;
   502                           ;USART.c: 11: x=((8000000 - baud*64)/(baud*64));
   503                           
   504                           ;incstack = 0
   505                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
   506  0711  1283               	bcf	3,5	;RP0=0, select bank0
   507  0712  1303               	bcf	3,6	;RP1=0, select bank0
   508  0713  0826               	movf	USART_Init@baud,w
   509  0714  00AA               	movwf	??_USART_Init
   510  0715  0827               	movf	USART_Init@baud+1,w
   511  0716  00AB               	movwf	??_USART_Init+1
   512  0717  0828               	movf	USART_Init@baud+2,w
   513  0718  00AC               	movwf	??_USART_Init+2
   514  0719  0829               	movf	USART_Init@baud+3,w
   515  071A  00AD               	movwf	??_USART_Init+3
   516  071B  3006               	movlw	6
   517  071C                     u345:	
   518  071C  1003               	clrc
   519  071D  0DAA               	rlf	??_USART_Init,f
   520  071E  0DAB               	rlf	??_USART_Init+1,f
   521  071F  0DAC               	rlf	??_USART_Init+2,f
   522  0720  0DAD               	rlf	??_USART_Init+3,f
   523  0721  3EFF               	addlw	-1
   524  0722  1D03               	skipz
   525  0723  2F1C               	goto	u345
   526  0724  082D               	movf	??_USART_Init+3,w
   527  0725  00F3               	movwf	___aldiv@divisor+3
   528  0726  082C               	movf	??_USART_Init+2,w
   529  0727  00F2               	movwf	___aldiv@divisor+2
   530  0728  082B               	movf	??_USART_Init+1,w
   531  0729  00F1               	movwf	___aldiv@divisor+1
   532  072A  082A               	movf	??_USART_Init,w
   533  072B  00F0               	movwf	___aldiv@divisor
   534  072C  3000               	movlw	0
   535  072D  00AE               	movwf	??_USART_Init+4
   536  072E  3012               	movlw	18
   537  072F  00AF               	movwf	??_USART_Init+5
   538  0730  307A               	movlw	122
   539  0731  00B0               	movwf	??_USART_Init+6
   540  0732  3000               	movlw	0
   541  0733  00B1               	movwf	??_USART_Init+7
   542  0734  0826               	movf	USART_Init@baud,w
   543  0735  00B2               	movwf	??_USART_Init+8
   544  0736  0827               	movf	USART_Init@baud+1,w
   545  0737  00B3               	movwf	??_USART_Init+9
   546  0738  0828               	movf	USART_Init@baud+2,w
   547  0739  00B4               	movwf	??_USART_Init+10
   548  073A  0829               	movf	USART_Init@baud+3,w
   549  073B  00B5               	movwf	??_USART_Init+11
   550  073C  3006               	movlw	6
   551  073D                     u355:	
   552  073D  1003               	clrc
   553  073E  0DB2               	rlf	??_USART_Init+8,f
   554  073F  0DB3               	rlf	??_USART_Init+9,f
   555  0740  0DB4               	rlf	??_USART_Init+10,f
   556  0741  0DB5               	rlf	??_USART_Init+11,f
   557  0742  3EFF               	addlw	-1
   558  0743  1D03               	skipz
   559  0744  2F3D               	goto	u355
   560  0745  09B2               	comf	??_USART_Init+8,f
   561  0746  09B3               	comf	??_USART_Init+9,f
   562  0747  09B4               	comf	??_USART_Init+10,f
   563  0748  09B5               	comf	??_USART_Init+11,f
   564  0749  0AB2               	incf	??_USART_Init+8,f
   565  074A  1903               	skipnz
   566  074B  0AB3               	incf	??_USART_Init+9,f
   567  074C  1903               	skipnz
   568  074D  0AB4               	incf	??_USART_Init+10,f
   569  074E  1903               	skipnz
   570  074F  0AB5               	incf	??_USART_Init+11,f
   571  0750  0832               	movf	??_USART_Init+8,w
   572  0751  07AE               	addwf	??_USART_Init+4,f
   573  0752  0833               	movf	??_USART_Init+9,w
   574  0753  1803               	skipnc
   575  0754  0F33               	incfsz	??_USART_Init+9,w
   576  0755  2F57               	goto	u360
   577  0756  2F58               	goto	u361
   578  0757                     u360:	
   579  0757  07AF               	addwf	??_USART_Init+5,f
   580  0758                     u361:	
   581  0758  0834               	movf	??_USART_Init+10,w
   582  0759  1803               	skipnc
   583  075A  0F34               	incfsz	??_USART_Init+10,w
   584  075B  2F5D               	goto	u362
   585  075C  2F5E               	goto	u363
   586  075D                     u362:	
   587  075D  07B0               	addwf	??_USART_Init+6,f
   588  075E                     u363:	
   589  075E  0835               	movf	??_USART_Init+11,w
   590  075F  1803               	skipnc
   591  0760  0A35               	incf	??_USART_Init+11,w
   592  0761  07B1               	addwf	??_USART_Init+7,f
   593  0762  0831               	movf	??_USART_Init+7,w
   594  0763  00F7               	movwf	___aldiv@dividend+3
   595  0764  0830               	movf	??_USART_Init+6,w
   596  0765  00F6               	movwf	___aldiv@dividend+2
   597  0766  082F               	movf	??_USART_Init+5,w
   598  0767  00F5               	movwf	___aldiv@dividend+1
   599  0768  082E               	movf	??_USART_Init+4,w
   600  0769  00F4               	movwf	___aldiv@dividend
   601  076A  120A  118A  2682  120A  118A  	fcall	___aldiv
   602  076F  0871               	movf	?___aldiv+1,w
   603  0770  00FA               	movwf	USART_Init@x+1
   604  0771  0870               	movf	?___aldiv,w
   605  0772  00F9               	movwf	USART_Init@x
   606                           
   607                           ;USART.c: 12: if(x>255)
   608  0773  3001               	movlw	1
   609  0774  027A               	subwf	USART_Init@x+1,w
   610  0775  3000               	movlw	0
   611  0776  1903               	skipnz
   612  0777  0279               	subwf	USART_Init@x,w
   613  0778  1C03               	skipc
   614  0779  2FDF               	goto	l708
   615                           
   616                           ;USART.c: 13: {
   617                           ;USART.c: 14: x = (8000000 - baud*16)/(baud*16);
   618  077A  1283               	bcf	3,5	;RP0=0, select bank0
   619  077B  1303               	bcf	3,6	;RP1=0, select bank0
   620  077C  0826               	movf	USART_Init@baud,w
   621  077D  00AA               	movwf	??_USART_Init
   622  077E  0827               	movf	USART_Init@baud+1,w
   623  077F  00AB               	movwf	??_USART_Init+1
   624  0780  0828               	movf	USART_Init@baud+2,w
   625  0781  00AC               	movwf	??_USART_Init+2
   626  0782  0829               	movf	USART_Init@baud+3,w
   627  0783  00AD               	movwf	??_USART_Init+3
   628  0784  3004               	movlw	4
   629  0785                     u385:	
   630  0785  1003               	clrc
   631  0786  0DAA               	rlf	??_USART_Init,f
   632  0787  0DAB               	rlf	??_USART_Init+1,f
   633  0788  0DAC               	rlf	??_USART_Init+2,f
   634  0789  0DAD               	rlf	??_USART_Init+3,f
   635  078A  3EFF               	addlw	-1
   636  078B  1D03               	skipz
   637  078C  2F85               	goto	u385
   638  078D  082D               	movf	??_USART_Init+3,w
   639  078E  00F3               	movwf	___aldiv@divisor+3
   640  078F  082C               	movf	??_USART_Init+2,w
   641  0790  00F2               	movwf	___aldiv@divisor+2
   642  0791  082B               	movf	??_USART_Init+1,w
   643  0792  00F1               	movwf	___aldiv@divisor+1
   644  0793  082A               	movf	??_USART_Init,w
   645  0794  00F0               	movwf	___aldiv@divisor
   646  0795  3000               	movlw	0
   647  0796  00AE               	movwf	??_USART_Init+4
   648  0797  3012               	movlw	18
   649  0798  00AF               	movwf	??_USART_Init+5
   650  0799  307A               	movlw	122
   651  079A  00B0               	movwf	??_USART_Init+6
   652  079B  3000               	movlw	0
   653  079C  00B1               	movwf	??_USART_Init+7
   654  079D  0826               	movf	USART_Init@baud,w
   655  079E  00B2               	movwf	??_USART_Init+8
   656  079F  0827               	movf	USART_Init@baud+1,w
   657  07A0  00B3               	movwf	??_USART_Init+9
   658  07A1  0828               	movf	USART_Init@baud+2,w
   659  07A2  00B4               	movwf	??_USART_Init+10
   660  07A3  0829               	movf	USART_Init@baud+3,w
   661  07A4  00B5               	movwf	??_USART_Init+11
   662  07A5  3004               	movlw	4
   663  07A6                     u395:	
   664  07A6  1003               	clrc
   665  07A7  0DB2               	rlf	??_USART_Init+8,f
   666  07A8  0DB3               	rlf	??_USART_Init+9,f
   667  07A9  0DB4               	rlf	??_USART_Init+10,f
   668  07AA  0DB5               	rlf	??_USART_Init+11,f
   669  07AB  3EFF               	addlw	-1
   670  07AC  1D03               	skipz
   671  07AD  2FA6               	goto	u395
   672  07AE  09B2               	comf	??_USART_Init+8,f
   673  07AF  09B3               	comf	??_USART_Init+9,f
   674  07B0  09B4               	comf	??_USART_Init+10,f
   675  07B1  09B5               	comf	??_USART_Init+11,f
   676  07B2  0AB2               	incf	??_USART_Init+8,f
   677  07B3  1903               	skipnz
   678  07B4  0AB3               	incf	??_USART_Init+9,f
   679  07B5  1903               	skipnz
   680  07B6  0AB4               	incf	??_USART_Init+10,f
   681  07B7  1903               	skipnz
   682  07B8  0AB5               	incf	??_USART_Init+11,f
   683  07B9  0832               	movf	??_USART_Init+8,w
   684  07BA  07AE               	addwf	??_USART_Init+4,f
   685  07BB  0833               	movf	??_USART_Init+9,w
   686  07BC  1803               	skipnc
   687  07BD  0F33               	incfsz	??_USART_Init+9,w
   688  07BE  2FC0               	goto	u400
   689  07BF  2FC1               	goto	u401
   690  07C0                     u400:	
   691  07C0  07AF               	addwf	??_USART_Init+5,f
   692  07C1                     u401:	
   693  07C1  0834               	movf	??_USART_Init+10,w
   694  07C2  1803               	skipnc
   695  07C3  0F34               	incfsz	??_USART_Init+10,w
   696  07C4  2FC6               	goto	u402
   697  07C5  2FC7               	goto	u403
   698  07C6                     u402:	
   699  07C6  07B0               	addwf	??_USART_Init+6,f
   700  07C7                     u403:	
   701  07C7  0835               	movf	??_USART_Init+11,w
   702  07C8  1803               	skipnc
   703  07C9  0A35               	incf	??_USART_Init+11,w
   704  07CA  07B1               	addwf	??_USART_Init+7,f
   705  07CB  0831               	movf	??_USART_Init+7,w
   706  07CC  00F7               	movwf	___aldiv@dividend+3
   707  07CD  0830               	movf	??_USART_Init+6,w
   708  07CE  00F6               	movwf	___aldiv@dividend+2
   709  07CF  082F               	movf	??_USART_Init+5,w
   710  07D0  00F5               	movwf	___aldiv@dividend+1
   711  07D1  082E               	movf	??_USART_Init+4,w
   712  07D2  00F4               	movwf	___aldiv@dividend
   713  07D3  120A  118A  2682  120A  118A  	fcall	___aldiv
   714  07D8  0871               	movf	?___aldiv+1,w
   715  07D9  00FA               	movwf	USART_Init@x+1
   716  07DA  0870               	movf	?___aldiv,w
   717  07DB  00F9               	movwf	USART_Init@x
   718                           
   719                           ;USART.c: 15: BRGH = 1;
   720  07DC  1683               	bsf	3,5	;RP0=1, select bank1
   721  07DD  1303               	bcf	3,6	;RP1=0, select bank1
   722  07DE  1518               	bsf	24,2	;volatile
   723  07DF                     l708:	
   724                           
   725                           ;USART.c: 16: }
   726                           ;USART.c: 17: if(x<256)
   727  07DF  3001               	movlw	1
   728  07E0  027A               	subwf	USART_Init@x+1,w
   729  07E1  3000               	movlw	0
   730  07E2  1903               	skipnz
   731  07E3  0279               	subwf	USART_Init@x,w
   732  07E4  1803               	skipnc
   733  07E5  2FFA               	goto	l726
   734                           
   735                           ;USART.c: 18: {
   736                           ;USART.c: 19: SPBRG = x;
   737  07E6  0879               	movf	USART_Init@x,w
   738  07E7  1683               	bsf	3,5	;RP0=1, select bank1
   739  07E8  1303               	bcf	3,6	;RP1=0, select bank1
   740  07E9  0099               	movwf	25	;volatile
   741                           
   742                           ;USART.c: 20: SYNC=0;
   743  07EA  1218               	bcf	24,4	;volatile
   744                           
   745                           ;USART.c: 21: SPEN=1;
   746  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   747  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   748  07ED  1798               	bsf	24,7	;volatile
   749                           
   750                           ;USART.c: 22: TRISC7=1;
   751  07EE  1683               	bsf	3,5	;RP0=1, select bank1
   752  07EF  1303               	bcf	3,6	;RP1=0, select bank1
   753  07F0  1787               	bsf	7,7	;volatile
   754                           
   755                           ;USART.c: 23: TRISC6=0;
   756  07F1  1307               	bcf	7,6	;volatile
   757                           
   758                           ;USART.c: 24: CREN=1;
   759  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   760  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   761  07F4  1618               	bsf	24,4	;volatile
   762                           
   763                           ;USART.c: 25: TXEN = 1;
   764  07F5  1683               	bsf	3,5	;RP0=1, select bank1
   765  07F6  1303               	bcf	3,6	;RP1=0, select bank1
   766  07F7  1698               	bsf	24,5	;volatile
   767                           
   768                           ;USART.c: 26: return 1;
   769  07F8  3001               	movlw	1
   770  07F9  0008               	return
   771  07FA                     l726:	
   772                           
   773                           ;USART.c: 27: }
   774                           ;USART.c: 28: return 0;
   775  07FA  3000               	movlw	0
   776  07FB  0008               	return
   777  07FC                     __end_of_USART_Init:	
   778                           
   779                           	psect	text3
   780  0682                     __ptext3:	
   781 ;; *************** function ___aldiv *****************
   782 ;; Defined at:
   783 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  divisor         4    0[COMMON] long 
   786 ;;  dividend        4    4[COMMON] long 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  quotient        4    2[BANK0 ] long 
   789 ;;  sign            1    1[BANK0 ] unsigned char 
   790 ;;  counter         1    0[BANK0 ] unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  4    0[COMMON] long 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         8       0       0       0       0
   801 ;;      Locals:         0       6       0       0       0
   802 ;;      Temps:          1       0       0       0       0
   803 ;;      Totals:         9       6       0       0       0
   804 ;;Total ram usage:       15 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_USART_Init
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function ___aldiv
   815  0682                     ___aldiv:	
   816                           
   817                           ;incstack = 0
   818                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   819  0682  1283               	bcf	3,5	;RP0=0, select bank0
   820  0683  1303               	bcf	3,6	;RP1=0, select bank0
   821  0684  01A1               	clrf	___aldiv@sign
   822  0685  1FF3               	btfss	___aldiv@divisor+3,7
   823  0686  2E94               	goto	l223
   824  0687  09F0               	comf	___aldiv@divisor,f
   825  0688  09F1               	comf	___aldiv@divisor+1,f
   826  0689  09F2               	comf	___aldiv@divisor+2,f
   827  068A  09F3               	comf	___aldiv@divisor+3,f
   828  068B  0AF0               	incf	___aldiv@divisor,f
   829  068C  1903               	skipnz
   830  068D  0AF1               	incf	___aldiv@divisor+1,f
   831  068E  1903               	skipnz
   832  068F  0AF2               	incf	___aldiv@divisor+2,f
   833  0690  1903               	skipnz
   834  0691  0AF3               	incf	___aldiv@divisor+3,f
   835  0692  01A1               	clrf	___aldiv@sign
   836  0693  0AA1               	incf	___aldiv@sign,f
   837  0694                     l223:	
   838  0694  1FF7               	btfss	___aldiv@dividend+3,7
   839  0695  2EA5               	goto	l668
   840  0696  09F4               	comf	___aldiv@dividend,f
   841  0697  09F5               	comf	___aldiv@dividend+1,f
   842  0698  09F6               	comf	___aldiv@dividend+2,f
   843  0699  09F7               	comf	___aldiv@dividend+3,f
   844  069A  0AF4               	incf	___aldiv@dividend,f
   845  069B  1903               	skipnz
   846  069C  0AF5               	incf	___aldiv@dividend+1,f
   847  069D  1903               	skipnz
   848  069E  0AF6               	incf	___aldiv@dividend+2,f
   849  069F  1903               	skipnz
   850  06A0  0AF7               	incf	___aldiv@dividend+3,f
   851  06A1  3001               	movlw	1
   852  06A2  00F8               	movwf	??___aldiv
   853  06A3  0878               	movf	??___aldiv,w
   854  06A4  06A1               	xorwf	___aldiv@sign,f
   855  06A5                     l668:	
   856  06A5  3000               	movlw	0
   857  06A6  00A5               	movwf	___aldiv@quotient+3
   858  06A7  3000               	movlw	0
   859  06A8  00A4               	movwf	___aldiv@quotient+2
   860  06A9  3000               	movlw	0
   861  06AA  00A3               	movwf	___aldiv@quotient+1
   862  06AB  3000               	movlw	0
   863  06AC  00A2               	movwf	___aldiv@quotient
   864  06AD  0873               	movf	___aldiv@divisor+3,w
   865  06AE  0472               	iorwf	___aldiv@divisor+2,w
   866  06AF  0471               	iorwf	___aldiv@divisor+1,w
   867  06B0  0470               	iorwf	___aldiv@divisor,w
   868  06B1  1903               	skipnz
   869  06B2  2EFA               	goto	l690
   870  06B3  01A0               	clrf	___aldiv@counter
   871  06B4  0AA0               	incf	___aldiv@counter,f
   872  06B5                     l676:	
   873  06B5  1BF3               	btfsc	___aldiv@divisor+3,7
   874  06B6  2EC5               	goto	l678
   875  06B7  3001               	movlw	1
   876  06B8  00F8               	movwf	??___aldiv
   877  06B9                     u275:	
   878  06B9  1003               	clrc
   879  06BA  0DF0               	rlf	___aldiv@divisor,f
   880  06BB  0DF1               	rlf	___aldiv@divisor+1,f
   881  06BC  0DF2               	rlf	___aldiv@divisor+2,f
   882  06BD  0DF3               	rlf	___aldiv@divisor+3,f
   883  06BE  0BF8               	decfsz	??___aldiv,f
   884  06BF  2EB9               	goto	u275
   885  06C0  3001               	movlw	1
   886  06C1  00F8               	movwf	??___aldiv
   887  06C2  0878               	movf	??___aldiv,w
   888  06C3  07A0               	addwf	___aldiv@counter,f
   889  06C4  2EB5               	goto	l676
   890  06C5                     l678:	
   891  06C5  3001               	movlw	1
   892  06C6  00F8               	movwf	??___aldiv
   893  06C7                     u295:	
   894  06C7  1003               	clrc
   895  06C8  0DA2               	rlf	___aldiv@quotient,f
   896  06C9  0DA3               	rlf	___aldiv@quotient+1,f
   897  06CA  0DA4               	rlf	___aldiv@quotient+2,f
   898  06CB  0DA5               	rlf	___aldiv@quotient+3,f
   899  06CC  0BF8               	decfsz	??___aldiv,f
   900  06CD  2EC7               	goto	u295
   901  06CE  0873               	movf	___aldiv@divisor+3,w
   902  06CF  0277               	subwf	___aldiv@dividend+3,w
   903  06D0  1D03               	skipz
   904  06D1  2EDC               	goto	u305
   905  06D2  0872               	movf	___aldiv@divisor+2,w
   906  06D3  0276               	subwf	___aldiv@dividend+2,w
   907  06D4  1D03               	skipz
   908  06D5  2EDC               	goto	u305
   909  06D6  0871               	movf	___aldiv@divisor+1,w
   910  06D7  0275               	subwf	___aldiv@dividend+1,w
   911  06D8  1D03               	skipz
   912  06D9  2EDC               	goto	u305
   913  06DA  0870               	movf	___aldiv@divisor,w
   914  06DB  0274               	subwf	___aldiv@dividend,w
   915  06DC                     u305:	
   916  06DC  1C03               	skipc
   917  06DD  2EED               	goto	l686
   918  06DE  0870               	movf	___aldiv@divisor,w
   919  06DF  02F4               	subwf	___aldiv@dividend,f
   920  06E0  0871               	movf	___aldiv@divisor+1,w
   921  06E1  1C03               	skipc
   922  06E2  0F71               	incfsz	___aldiv@divisor+1,w
   923  06E3  02F5               	subwf	___aldiv@dividend+1,f
   924  06E4  0872               	movf	___aldiv@divisor+2,w
   925  06E5  1C03               	skipc
   926  06E6  0F72               	incfsz	___aldiv@divisor+2,w
   927  06E7  02F6               	subwf	___aldiv@dividend+2,f
   928  06E8  0873               	movf	___aldiv@divisor+3,w
   929  06E9  1C03               	skipc
   930  06EA  0F73               	incfsz	___aldiv@divisor+3,w
   931  06EB  02F7               	subwf	___aldiv@dividend+3,f
   932  06EC  1422               	bsf	___aldiv@quotient,0
   933  06ED                     l686:	
   934  06ED  3001               	movlw	1
   935  06EE                     u315:	
   936  06EE  1003               	clrc
   937  06EF  0CF3               	rrf	___aldiv@divisor+3,f
   938  06F0  0CF2               	rrf	___aldiv@divisor+2,f
   939  06F1  0CF1               	rrf	___aldiv@divisor+1,f
   940  06F2  0CF0               	rrf	___aldiv@divisor,f
   941  06F3  3EFF               	addlw	-1
   942  06F4  1D03               	skipz
   943  06F5  2EEE               	goto	u315
   944  06F6  3001               	movlw	1
   945  06F7  02A0               	subwf	___aldiv@counter,f
   946  06F8  1D03               	btfss	3,2
   947  06F9  2EC5               	goto	l678
   948  06FA                     l690:	
   949  06FA  0821               	movf	___aldiv@sign,w
   950  06FB  1903               	btfsc	3,2
   951  06FC  2F08               	goto	l694
   952  06FD  09A2               	comf	___aldiv@quotient,f
   953  06FE  09A3               	comf	___aldiv@quotient+1,f
   954  06FF  09A4               	comf	___aldiv@quotient+2,f
   955  0700  09A5               	comf	___aldiv@quotient+3,f
   956  0701  0AA2               	incf	___aldiv@quotient,f
   957  0702  1903               	skipnz
   958  0703  0AA3               	incf	___aldiv@quotient+1,f
   959  0704  1903               	skipnz
   960  0705  0AA4               	incf	___aldiv@quotient+2,f
   961  0706  1903               	skipnz
   962  0707  0AA5               	incf	___aldiv@quotient+3,f
   963  0708                     l694:	
   964  0708  0825               	movf	___aldiv@quotient+3,w
   965  0709  00F3               	movwf	?___aldiv+3
   966  070A  0824               	movf	___aldiv@quotient+2,w
   967  070B  00F2               	movwf	?___aldiv+2
   968  070C  0823               	movf	___aldiv@quotient+1,w
   969  070D  00F1               	movwf	?___aldiv+1
   970  070E  0822               	movf	___aldiv@quotient,w
   971  070F  00F0               	movwf	?___aldiv
   972  0710  0008               	return
   973  0711                     __end_of___aldiv:	
   974                           
   975                           	psect	text4
   976  0645                     __ptext4:	
   977 ;; *************** function _Port_Init *****************
   978 ;; Defined at:
   979 ;;		line 5 in file "main.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		status,2
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0
   996 ;;      Totals:         0       0       0       0       0
   997 ;;Total ram usage:        0 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _Port_Init
  1008  0645                     _Port_Init:	
  1009                           
  1010                           ;main.c: 7: TRISA=0x00;
  1011                           
  1012                           ;incstack = 0
  1013                           ; Regs used in _Port_Init: [status,2]
  1014  0645  1683               	bsf	3,5	;RP0=1, select bank1
  1015  0646  1303               	bcf	3,6	;RP1=0, select bank1
  1016  0647  0185               	clrf	5	;volatile
  1017                           
  1018                           ;main.c: 8: PORTA=0x00;
  1019  0648  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0649  1303               	bcf	3,6	;RP1=0, select bank0
  1021  064A  0185               	clrf	5	;volatile
  1022  064B  0008               	return
  1023  064C                     __end_of_Port_Init:	
  1024  007E                     btemp	set	126	;btemp
  1025  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     722
                                             11 COMMON     3     3      0
                                             22 BANK0      1     1      0
                          _Port_Init
                         _USART_Init
                         _USART_Read
 ---------------------------------------------------------------------------------
 (1) _USART_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     721
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init
   _USART_Init
     ___aldiv
   _USART_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      17       5       28.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Feb 04 19:39:36 2018

            __CFG_CP$OFF 0000                       l21 0671                       l72 063F  
                    l223 0694                      l708 07DF                      l740 0665  
                    l726 07FA                      l744 0674                      l690 06FA  
                    l676 06B5                      l668 06A5                      l694 0708  
                    l686 06ED                      l678 06C5                      u400 07C0  
                    u305 06DC                      u401 07C1                      u402 07C6  
                    u315 06EE                      u403 07C7                      u360 0757  
                    u361 0758                      u345 071C                      u362 075D  
                    u275 06B9                      u363 075E                      u355 073D  
                    u295 06C7                      u385 0785                      u457 067A  
                    u395 07A6             __CFG_FOSC$HS 0000                     _BRGH 04C2  
                   _CREN 00C4                     _RCIF 0065                     _SPEN 00C7  
                   _TRMT 04C1                     _TXEN 04C5                     _SYNC 04C4  
                   _main 064C                     btemp 007E                     start 0000  
        __end_of___aldiv 0711                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _TRISA 0085                    _TXREG 0019            __CFG_PWRTE$ON 0000  
                  status 0003                    wtemp0 007E              ?_USART_Init 0026  
            ?_USART_Read 0070          __initialization 07FC             __end_of_main 0682  
                 ??_main 007B                   _TRISC6 043E                   _TRISC7 043F  
              ??___aldiv 0078       __size_of_Port_Init 0007      __size_of_USART_Init 00EB  
    __size_of_USART_Read 0006  __end_of__initialization 07FC           __pcstackCOMMON 0070  
      __end_of_Port_Init 064C               __pmaintext 064C             ??_USART_Init 002A  
           ??_USART_Read 0070                  ___aldiv 0682                  __ptext1 063F  
                __ptext2 0711                  __ptext3 0682                  __ptext4 0645  
         USART_Init@baud 0026         ___aldiv@dividend 0074       __end_of_USART_Init 07FC  
     __end_of_USART_Read 0645     end_of_initialization 07FC         ___aldiv@quotient 0022  
              _PORTAbits 0005               main@status 0036              USART_Init@x 0079  
    start_initialization 07FC                _Port_Init 0645                ___latbits 0002  
          __pcstackBANK0 0020                 ?___aldiv 0070               ?_Port_Init 0070  
        ___aldiv@divisor 0070          ___aldiv@counter 0020              ??_Port_Init 0070  
       __size_of___aldiv 008F            __size_of_main 0036             ___aldiv@sign 0021  
             _USART_Init 0711               _USART_Read 063F  
