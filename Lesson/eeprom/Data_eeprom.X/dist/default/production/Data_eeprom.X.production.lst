

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Mar 17 18:47:39 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.44
    12                           ; Generated 14/09/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010F                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103  0007                     _PORTC	set	7
   104  000B                     _INTCON	set	11
   105  006C                     _EEIF	set	108
   106  0087                     _TRISC	set	135
   107  010C                     _EEDATA	set	268
   108  010D                     _EEADR	set	269
   109  018D                     _EECON2	set	397
   110  0C61                     _WR	set	3169
   111  0C62                     _WREN	set	3170
   112  0C60                     _RD	set	3168
   113  0C67                     _EEPGD	set	3175
   114                           
   115                           	psect	cinit
   116  07FC                     start_initialization:	
   117                           ; #config settings
   118                           
   119  07FC                     __initialization:	
   120  07FC                     end_of_initialization:	
   121                           ;End of C runtime variable initialization code
   122                           
   123  07FC                     __end_of__initialization:	
   124  07FC  0183               	clrf	3
   125  07FD  120A  118A  2FAA   	ljmp	_main	;jump to C main() function
   126                           
   127                           	psect	cstackCOMMON
   128  0070                     __pcstackCOMMON:	
   129  0070                     ?_readEEPROM:	
   130  0070                     ??_readEEPROM:	
   131                           ; 1 bytes @ 0x0
   132                           
   133  0070                     ?_WriteEEPROM:	
   134                           ; 1 bytes @ 0x0
   135                           
   136  0070                     ?_main:	
   137                           ; 1 bytes @ 0x0
   138                           
   139  0070                     readEEPROM@address:	
   140                           ; 1 bytes @ 0x0
   141                           
   142  0070                     WriteEEPROM@dataes:	
   143                           ; 1 bytes @ 0x0
   144                           
   145                           
   146                           ; 1 bytes @ 0x0
   147  0070                     	ds	1
   148  0071                     ??_WriteEEPROM:	
   149                           
   150                           ; 1 bytes @ 0x1
   151  0071                     	ds	1
   152  0072                     WriteEEPROM@address:	
   153                           
   154                           ; 1 bytes @ 0x2
   155  0072                     	ds	1
   156  0073                     WriteEEPROM@INTCON_SAVE:	
   157                           
   158                           ; 1 bytes @ 0x3
   159  0073                     	ds	1
   160  0074                     ??_main:	
   161                           
   162                           ; 1 bytes @ 0x4
   163  0074                     	ds	3
   164  0077                     main@a:	
   165                           
   166                           ; 2 bytes @ 0x7
   167  0077                     	ds	2
   168  0079                     main@i:	
   169                           
   170                           ; 2 bytes @ 0x9
   171  0079                     	ds	2
   172                           
   173                           	psect	maintext
   174  07AA                     __pmaintext:	
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 42 in file "main.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;  i               2    9[COMMON] unsigned int 
   185 ;;  a               2    7[COMMON] unsigned int 
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		wreg, status,2, status,0, pclath, cstack
   190 ;; Tracked objects:
   191 ;;		On entry : B00/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   195 ;;      Params:         0       0       0       0       0
   196 ;;      Locals:         4       0       0       0       0
   197 ;;      Temps:          3       0       0       0       0
   198 ;;      Totals:         7       0       0       0       0
   199 ;;Total ram usage:        7 bytes
   200 ;; Hardware stack levels required when called:    1
   201 ;; This function calls:
   202 ;;		_WriteEEPROM
   203 ;;		_readEEPROM
   204 ;; This function is called by:
   205 ;;		Startup code after reset
   206 ;; This function uses a non-reentrant model
   207 ;;
   208                           
   209                           
   210                           ;psect for function _main
   211  07AA                     _main:	
   212                           
   213                           ;main.c: 44: unsigned int a, i;
   214                           ;main.c: 45: TRISC = 0;
   215                           
   216                           ;incstack = 0
   217                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   218  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   219  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   220  07AC  0187               	clrf	7	;volatile
   221  07AD                     l38:	
   222                           ;main.c: 50: while(1)
   223                           
   224                           
   225                           ;main.c: 51: {
   226                           ;main.c: 52: for(i=0,a=1;i<8;i++)
   227  07AD  01F9               	clrf	main@i
   228  07AE  01FA               	clrf	main@i+1
   229  07AF  3001               	movlw	1
   230  07B0  00F7               	movwf	main@a
   231  07B1  3000               	movlw	0
   232  07B2  00F8               	movwf	main@a+1
   233  07B3  3000               	movlw	0
   234  07B4  027A               	subwf	main@i+1,w
   235  07B5  3008               	movlw	8
   236  07B6  1903               	skipnz
   237  07B7  0279               	subwf	main@i,w
   238  07B8  1803               	btfsc	3,0
   239  07B9  2FD6               	goto	l595
   240  07BA                     l587:	
   241                           
   242                           ;main.c: 53: {
   243                           ;main.c: 54: WriteEEPROM(i, a);
   244  07BA  0877               	movf	main@a,w
   245  07BB  00F4               	movwf	??_main
   246  07BC  0874               	movf	??_main,w
   247  07BD  00F0               	movwf	WriteEEPROM@dataes
   248  07BE  0879               	movf	main@i,w
   249  07BF  120A  118A  278A  120A  118A  	fcall	_WriteEEPROM
   250                           
   251                           ;main.c: 55: a = a<<1;
   252  07C4  1003               	clrc
   253  07C5  0D77               	rlf	main@a,w
   254  07C6  00F7               	movwf	main@a
   255  07C7  0D78               	rlf	main@a+1,w
   256  07C8  00F8               	movwf	main@a+1
   257  07C9  3001               	movlw	1
   258  07CA  07F9               	addwf	main@i,f
   259  07CB  1803               	skipnc
   260  07CC  0AFA               	incf	main@i+1,f
   261  07CD  3000               	movlw	0
   262  07CE  07FA               	addwf	main@i+1,f
   263  07CF  3000               	movlw	0
   264  07D0  027A               	subwf	main@i+1,w
   265  07D1  3008               	movlw	8
   266  07D2  1903               	skipnz
   267  07D3  0279               	subwf	main@i,w
   268  07D4  1C03               	skipc
   269  07D5  2FBA               	goto	l587
   270  07D6                     l595:	
   271                           
   272                           ;main.c: 56: }
   273                           ;main.c: 57: for(i=0;i<8;i++)
   274  07D6  01F9               	clrf	main@i
   275  07D7  01FA               	clrf	main@i+1
   276  07D8                     L1:	
   277  07D8  3000               	movlw	0
   278  07D9  027A               	subwf	main@i+1,w
   279  07DA  3008               	movlw	8
   280  07DB  1903               	skipnz
   281  07DC  0279               	subwf	main@i,w
   282  07DD  1803               	btfsc	3,0
   283  07DE  2FAD               	goto	l38
   284                           
   285                           ;main.c: 58: {
   286                           ;main.c: 59: PORTC = readEEPROM(i);
   287  07DF  0879               	movf	main@i,w
   288  07E0  120A  118A  277D  120A  118A  	fcall	_readEEPROM
   289  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   290  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   291  07E7  0087               	movwf	7	;volatile
   292                           
   293                           ;main.c: 60: _delay((unsigned long)((1000)*(4000000/4000.0)));
   294  07E8  3006               	movlw	6
   295  07E9  00F6               	movwf	??_main+2
   296  07EA  3013               	movlw	19
   297  07EB  00F5               	movwf	??_main+1
   298  07EC  30AD               	movlw	173
   299  07ED  00F4               	movwf	??_main
   300  07EE                     u117:	
   301  07EE  0BF4               	decfsz	??_main,f
   302  07EF  2FEE               	goto	u117
   303  07F0  0BF5               	decfsz	??_main+1,f
   304  07F1  2FEE               	goto	u117
   305  07F2  0BF6               	decfsz	??_main+2,f
   306  07F3  2FEE               	goto	u117
   307  07F4  2FF5               	nop2
   308  07F5  3001               	movlw	1
   309  07F6  07F9               	addwf	main@i,f
   310  07F7  1803               	skipnc
   311  07F8  0AFA               	incf	main@i+1,f
   312  07F9  3000               	movlw	0
   313  07FA  07FA               	addwf	main@i+1,f
   314  07FB  2FD8               	goto	L1
   315  07FC                     __end_of_main:	
   316                           
   317                           	psect	text1
   318  077D                     __ptext1:	
   319 ;; *************** function _readEEPROM *****************
   320 ;; Defined at:
   321 ;;		line 9 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;  address         1    wreg     unsigned char 
   324 ;; Auto vars:     Size  Location     Type
   325 ;;  address         1    0[COMMON] unsigned char 
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      unsigned char 
   328 ;; Registers used:
   329 ;;		wreg
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         1       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0
   338 ;;      Totals:         1       0       0       0       0
   339 ;;Total ram usage:        1 bytes
   340 ;; Hardware stack levels used:    1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           
   349                           ;psect for function _readEEPROM
   350  077D                     _readEEPROM:	
   351                           
   352                           ;incstack = 0
   353                           ; Regs used in _readEEPROM: [wreg]
   354                           ;readEEPROM@address stored from wreg
   355  077D  00F0               	movwf	readEEPROM@address
   356                           
   357                           ;main.c: 11: EEADR=address;
   358  077E  0870               	movf	readEEPROM@address,w
   359  077F  1283               	bcf	3,5	;RP0=0, select bank2
   360  0780  1703               	bsf	3,6	;RP1=1, select bank2
   361  0781  008D               	movwf	13	;volatile
   362                           
   363                           ;main.c: 12: EEPGD=0;
   364  0782  1683               	bsf	3,5	;RP0=1, select bank3
   365  0783  1703               	bsf	3,6	;RP1=1, select bank3
   366  0784  138C               	bcf	12,7	;volsfr
   367                           
   368                           ;main.c: 13: RD=1;
   369  0785  140C               	bsf	12,0	;volsfr
   370                           
   371                           ;main.c: 14: return EEDATA;
   372  0786  1283               	bcf	3,5	;RP0=0, select bank2
   373  0787  1703               	bsf	3,6	;RP1=1, select bank2
   374  0788  080C               	movf	12,w	;volatile
   375  0789  0008               	return
   376  078A                     __end_of_readEEPROM:	
   377                           
   378                           	psect	text2
   379  078A                     __ptext2:	
   380 ;; *************** function _WriteEEPROM *****************
   381 ;; Defined at:
   382 ;;		line 17 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  address         1    wreg     unsigned char 
   385 ;;  dataes          1    0[COMMON] unsigned char 
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  address         1    2[COMMON] unsigned char 
   388 ;;  INTCON_SAVE     1    3[COMMON] unsigned char 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         1       0       0       0       0
   399 ;;      Locals:         2       0       0       0       0
   400 ;;      Temps:          1       0       0       0       0
   401 ;;      Totals:         4       0       0       0       0
   402 ;;Total ram usage:        4 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _WriteEEPROM
   413  078A                     _WriteEEPROM:	
   414                           
   415                           ;incstack = 0
   416                           ; Regs used in _WriteEEPROM: [wreg+status,2]
   417                           ;WriteEEPROM@address stored from wreg
   418  078A  00F2               	movwf	WriteEEPROM@address
   419                           
   420                           ;main.c: 19: unsigned char INTCON_SAVE;
   421                           ;main.c: 20: EEADR = address;
   422  078B  0872               	movf	WriteEEPROM@address,w
   423  078C  1283               	bcf	3,5	;RP0=0, select bank2
   424  078D  1703               	bsf	3,6	;RP1=1, select bank2
   425  078E  008D               	movwf	13	;volatile
   426                           
   427                           ;main.c: 21: EEDATA = dataes;
   428  078F  0870               	movf	WriteEEPROM@dataes,w
   429  0790  008C               	movwf	12	;volatile
   430                           
   431                           ;main.c: 22: EEPGD=0;
   432  0791  1683               	bsf	3,5	;RP0=1, select bank3
   433  0792  1703               	bsf	3,6	;RP1=1, select bank3
   434  0793  138C               	bcf	12,7	;volsfr
   435                           
   436                           ;main.c: 23: WREN=1;
   437  0794  150C               	bsf	12,2	;volsfr
   438                           
   439                           ;main.c: 24: INTCON_SAVE=INTCON;
   440  0795  080B               	movf	11,w	;volatile
   441  0796  00F1               	movwf	??_WriteEEPROM
   442  0797  0871               	movf	??_WriteEEPROM,w
   443  0798  00F3               	movwf	WriteEEPROM@INTCON_SAVE
   444                           
   445                           ;main.c: 25: INTCON=0;
   446  0799  018B               	clrf	11	;volatile
   447                           
   448                           ;main.c: 27: EECON2=0x55;
   449  079A  3055               	movlw	85
   450  079B  008D               	movwf	13	;volsfr
   451                           
   452                           ;main.c: 28: EECON2=0xAA;
   453  079C  30AA               	movlw	170
   454  079D  008D               	movwf	13	;volsfr
   455                           
   456                           ;main.c: 29: WR = 1;
   457  079E  148C               	bsf	12,1	;volsfr
   458                           
   459                           ;main.c: 30: INTCON = INTCON_SAVE;
   460  079F  0873               	movf	WriteEEPROM@INTCON_SAVE,w
   461  07A0  008B               	movwf	11	;volatile
   462                           
   463                           ;main.c: 31: WREN = 0;
   464  07A1  110C               	bcf	12,2	;volsfr
   465  07A2                     l30:	
   466                           ;main.c: 33: while(EEIF == 0)
   467                           
   468  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   469  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   470  07A4  1A0D               	btfsc	13,4	;volatile
   471  07A5  2FA8               	goto	l32
   472  07A6  0000               	nop	;# 
   473  07A7  2FA2               	goto	l30
   474  07A8                     l32:	
   475                           
   476                           ;main.c: 36: }
   477                           ;main.c: 37: EEIF = 0;
   478  07A8  120D               	bcf	13,4	;volatile
   479  07A9  0008               	return
   480  07AA                     __end_of_WriteEEPROM:	
   481  007E                     btemp	set	126	;btemp
   482  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_WriteEEPROM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     317
                                              4 COMMON     7     7      0
                        _WriteEEPROM
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteEEPROM                                          4     3      1     120
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteEEPROM
   _readEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Mar 17 18:47:39 2018

   __size_of_WriteEEPROM 0020                       l30 07A2                       l32 07A8  
                     l38 07AD                       _RD 0C60                       _WR 0C61  
                    l595 07D6                      l587 07BA                      u117 07EE  
                   _EEIF 006C                     _WREN 0C62                     _main 07AA  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _EEADR 010D                    _EEPGD 0C67                    _PORTC 0007  
                  _TRISC 0087                    main@a 0077                    main@i 0079  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074                   _EEDATA 010C  
                 _EECON2 018D                   _INTCON 000B  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            ??_WriteEEPROM 0071               __pmaintext 07AA  
             _readEEPROM 077D      __end_of_WriteEEPROM 07AA       WriteEEPROM@address 0072  
                __ptext1 077D                  __ptext2 078A     end_of_initialization 07FC  
      readEEPROM@address 0070              ?_readEEPROM 0070              _WriteEEPROM 078A  
    start_initialization 07FC      __size_of_readEEPROM 000D                ___latbits 0002  
      WriteEEPROM@dataes 0070             ??_readEEPROM 0070             ?_WriteEEPROM 0070  
     __end_of_readEEPROM 078A   WriteEEPROM@INTCON_SAVE 0073            __size_of_main 0052  
