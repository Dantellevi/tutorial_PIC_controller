

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 18 23:14:25 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0006                     _PORTBbits	set	6
   222  0008                     _PORTDbits	set	8
   223  005F                     _GIE	set	95
   224  0088                     _TRISD	set	136
   225  0086                     _TRISB	set	134
   226  010C                     _EEDATA	set	268
   227  010D                     _EEADR	set	269
   228  018D                     _EECON2	set	397
   229  0C60                     _RD	set	3168
   230  0C62                     _WREN	set	3170
   231  0C61                     _WR	set	3169
   232                           
   233                           	psect	cinit
   234  07FC                     start_initialization:	
   235                           ; #config settings
   236                           
   237  07FC                     __initialization:	
   238  07FC                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  07FC                     __end_of__initialization:	
   242  07FC  0183               	clrf	3
   243  07FD  120A  118A  2F4C   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	cstackCOMMON
   246  0070                     __pcstackCOMMON:	
   247  0070                     ?_Send_Data:	
   248  0070                     ??_Send_Data:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_Send_command:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_lcd_init:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     Send_Data@data:	
   261                           ; 1 bytes @ 0x0
   262                           
   263                           
   264                           ; 1 bytes @ 0x0
   265  0070                     	ds	1
   266  0071                     ??_Send_command:	
   267                           
   268                           ; 1 bytes @ 0x1
   269  0071                     	ds	2
   270  0073                     Send_command@com:	
   271                           
   272                           ; 1 bytes @ 0x3
   273  0073                     	ds	1
   274  0074                     ??_lcd_init:	
   275                           
   276                           ; 1 bytes @ 0x4
   277  0074                     	ds	2
   278  0076                     lcd_init@lcd:	
   279                           
   280                           ; 1 bytes @ 0x6
   281  0076                     	ds	1
   282  0077                     ??_main:	
   283                           
   284                           	psect	cstackBANK0
   285  0020                     __pcstackBANK0:	
   286                           ; 1 bytes @ 0x7
   287                           
   288  0020                     main@i:	
   289                           
   290                           ; 4 bytes @ 0x0
   291  0020                     	ds	4
   292  0024                     main@j:	
   293                           
   294                           ; 4 bytes @ 0x4
   295  0024                     	ds	4
   296  0028                     main@dtt:	
   297                           
   298                           ; 4 bytes @ 0x8
   299  0028                     	ds	4
   300                           
   301                           	psect	maintext
   302  074C                     __pmaintext:	
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 5 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  str1           21    0        unsigned char [21]
   313 ;;  dtt             4    8[BANK0 ] unsigned long 
   314 ;;  j               4    4[BANK0 ] unsigned long 
   315 ;;  i               4    0[BANK0 ] unsigned long 
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : B00/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   325 ;;      Params:         0       0       0       0       0
   326 ;;      Locals:         0      12       0       0       0
   327 ;;      Temps:          0       0       0       0       0
   328 ;;      Totals:         0      12       0       0       0
   329 ;;Total ram usage:       12 bytes
   330 ;; Hardware stack levels required when called:    3
   331 ;; This function calls:
   332 ;;		_lcd_init
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           
   339                           ;psect for function _main
   340  074C                     _main:	
   341                           
   342                           ;main.c: 7: char str1[21];
   343                           ;main.c: 8: unsigned long i=0,j=0,dtt=0;
   344                           
   345                           ;incstack = 0
   346                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   347  074C  3000               	movlw	0
   348  074D  1283               	bcf	3,5	;RP0=0, select bank0
   349  074E  1303               	bcf	3,6	;RP1=0, select bank0
   350  074F  00A3               	movwf	main@i+3
   351  0750  3000               	movlw	0
   352  0751  00A2               	movwf	main@i+2
   353  0752  3000               	movlw	0
   354  0753  00A1               	movwf	main@i+1
   355  0754  3000               	movlw	0
   356  0755  00A0               	movwf	main@i
   357  0756  3000               	movlw	0
   358  0757  00A7               	movwf	main@j+3
   359  0758  3000               	movlw	0
   360  0759  00A6               	movwf	main@j+2
   361  075A  3000               	movlw	0
   362  075B  00A5               	movwf	main@j+1
   363  075C  3000               	movlw	0
   364  075D  00A4               	movwf	main@j
   365  075E  3000               	movlw	0
   366  075F  00AB               	movwf	main@dtt+3
   367  0760  3000               	movlw	0
   368  0761  00AA               	movwf	main@dtt+2
   369  0762  3000               	movlw	0
   370  0763  00A9               	movwf	main@dtt+1
   371  0764  3000               	movlw	0
   372  0765  00A8               	movwf	main@dtt
   373                           
   374                           ;main.c: 9: lcd_init(0);
   375  0766  3000               	movlw	0
   376  0767  120A  118A  276D  120A  118A  	fcall	_lcd_init
   377  076C                     l68:	
   378                           ;main.c: 11: while(1)
   379                           
   380                           
   381                           ;main.c: 12: {
   382  076C  2F6C               	goto	l68
   383  076D                     __end_of_main:	
   384                           
   385                           	psect	text1
   386  076D                     __ptext1:	
   387 ;; *************** function _lcd_init *****************
   388 ;; Defined at:
   389 ;;		line 70 in file "LCD.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;  lcd             1    wreg     unsigned char 
   392 ;; Auto vars:     Size  Location     Type
   393 ;;  lcd             1    6[COMMON] unsigned char 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         1       0       0       0       0
   405 ;;      Temps:          2       0       0       0       0
   406 ;;      Totals:         3       0       0       0       0
   407 ;;Total ram usage:        3 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; Hardware stack levels required when called:    2
   410 ;; This function calls:
   411 ;;		_Send_command
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _lcd_init
   419  076D                     _lcd_init:	
   420                           
   421                           ;incstack = 0
   422                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   423                           ;lcd_init@lcd stored from wreg
   424  076D  00F6               	movwf	lcd_init@lcd
   425                           
   426                           ;LCD.c: 72: TRISB=0x00;
   427  076E  1683               	bsf	3,5	;RP0=1, select bank1
   428  076F  1303               	bcf	3,6	;RP1=0, select bank1
   429  0770  0186               	clrf	6	;volatile
   430                           
   431                           ;LCD.c: 73: TRISD=0x00;
   432  0771  0188               	clrf	8	;volatile
   433                           
   434                           ;LCD.c: 75: switch (lcd)
   435  0772  2F7E               	goto	l819
   436  0773                     l809:	
   437                           ;LCD.c: 76: {
   438                           ;LCD.c: 77: case 0: lcd = 0x0C; break;
   439                           
   440  0773  300C               	movlw	12
   441  0774  2F7A               	goto	L3
   442  0775                     l811:	
   443                           ;LCD.c: 78: case 1: lcd = 0x0D; break;
   444                           
   445  0775  300D               	movlw	13
   446  0776  2F7A               	goto	L3
   447  0777                     l813:	
   448                           ;LCD.c: 79: case 2: lcd = 0x0E; break;
   449                           
   450  0777  300E               	movlw	14
   451  0778  2F7A               	goto	L3
   452  0779                     l815:	
   453                           ;LCD.c: 80: case 3: lcd = 0x0F; break;
   454                           
   455  0779  300F               	movlw	15
   456  077A                     L3:	
   457  077A  00F4               	movwf	??_lcd_init
   458  077B  0874               	movf	??_lcd_init,w
   459  077C  00F6               	movwf	lcd_init@lcd
   460                           
   461                           ;LCD.c: 81: }
   462  077D  2F8C               	goto	l821
   463  077E                     l819:	
   464  077E  0876               	movf	lcd_init@lcd,w
   465                           
   466                           ; Switch size 1, requested type "space"
   467                           ; Number of cases is 4, Range of values is 0 to 3
   468                           ; switch strategies available:
   469                           ; Name         Instructions Cycles
   470                           ; simple_byte           13     7 (average)
   471                           ; direct_byte           20     8 (fixed)
   472                           ; jumptable            260     6 (fixed)
   473                           ;	Chosen strategy is simple_byte
   474  077F  3A00               	xorlw	0	; case 0
   475  0780  1903               	skipnz
   476  0781  2F73               	goto	l809
   477  0782  3A01               	xorlw	1	; case 1
   478  0783  1903               	skipnz
   479  0784  2F75               	goto	l811
   480  0785  3A03               	xorlw	3	; case 2
   481  0786  1903               	skipnz
   482  0787  2F77               	goto	l813
   483  0788  3A01               	xorlw	1	; case 3
   484  0789  1903               	skipnz
   485  078A  2F79               	goto	l815
   486  078B  2F8C               	goto	l821
   487  078C                     l821:	
   488                           
   489                           ;LCD.c: 83: _delay((unsigned long)((20)*(8000000/4000.0)));
   490  078C  3034               	movlw	52
   491  078D  00F5               	movwf	??_lcd_init+1
   492  078E  30F1               	movlw	241
   493  078F  00F4               	movwf	??_lcd_init
   494  0790                     u347:	
   495  0790  0BF4               	decfsz	??_lcd_init,f
   496  0791  2F90               	goto	u347
   497  0792  0BF5               	decfsz	??_lcd_init+1,f
   498  0793  2F90               	goto	u347
   499  0794  2F95               	nop2
   500                           
   501                           ;LCD.c: 85: Send_command(0x03);
   502  0795  3003               	movlw	3
   503  0796  120A  118A  271A  120A  118A  	fcall	_Send_command
   504                           
   505                           ;LCD.c: 86: _delay((unsigned long)((40)*(8000000/4000000.0)));
   506  079B  301A               	movlw	26
   507  079C  00F4               	movwf	??_lcd_init
   508  079D                     u357:	
   509  079D  0BF4               	decfsz	??_lcd_init,f
   510  079E  2F9D               	goto	u357
   511  079F  0000               	nop
   512                           
   513                           ;LCD.c: 87: Send_command(0x03);
   514  07A0  3003               	movlw	3
   515  07A1  120A  118A  271A  120A  118A  	fcall	_Send_command
   516                           
   517                           ;LCD.c: 88: _delay((unsigned long)((40)*(8000000/4000000.0)));
   518  07A6  301A               	movlw	26
   519  07A7  00F4               	movwf	??_lcd_init
   520  07A8                     u367:	
   521  07A8  0BF4               	decfsz	??_lcd_init,f
   522  07A9  2FA8               	goto	u367
   523  07AA  0000               	nop
   524                           
   525                           ;LCD.c: 89: Send_command(0x03);
   526  07AB  3003               	movlw	3
   527  07AC  120A  118A  271A  120A  118A  	fcall	_Send_command
   528                           
   529                           ;LCD.c: 90: _delay((unsigned long)((40)*(8000000/4000000.0)));
   530  07B1  301A               	movlw	26
   531  07B2  00F4               	movwf	??_lcd_init
   532  07B3                     u377:	
   533  07B3  0BF4               	decfsz	??_lcd_init,f
   534  07B4  2FB3               	goto	u377
   535  07B5  0000               	nop
   536                           
   537                           ;LCD.c: 91: Send_command(0x02);
   538  07B6  3002               	movlw	2
   539  07B7  120A  118A  271A  120A  118A  	fcall	_Send_command
   540                           
   541                           ;LCD.c: 92: _delay((unsigned long)((40)*(8000000/4000000.0)));
   542  07BC  301A               	movlw	26
   543  07BD  00F4               	movwf	??_lcd_init
   544  07BE                     u387:	
   545  07BE  0BF4               	decfsz	??_lcd_init,f
   546  07BF  2FBE               	goto	u387
   547  07C0  0000               	nop
   548                           
   549                           ;LCD.c: 93: Send_command(0x02);
   550  07C1  3002               	movlw	2
   551  07C2  120A  118A  271A  120A  118A  	fcall	_Send_command
   552                           
   553                           ;LCD.c: 94: Send_command(0x08);
   554  07C7  3008               	movlw	8
   555  07C8  120A  118A  271A  120A  118A  	fcall	_Send_command
   556                           
   557                           ;LCD.c: 95: Send_command(0x00);
   558  07CD  3000               	movlw	0
   559  07CE  120A  118A  271A  120A  118A  	fcall	_Send_command
   560                           
   561                           ;LCD.c: 96: Send_command(0x08);
   562  07D3  3008               	movlw	8
   563  07D4  120A  118A  271A  120A  118A  	fcall	_Send_command
   564                           
   565                           ;LCD.c: 97: Send_command(0x00);
   566  07D9  3000               	movlw	0
   567  07DA  120A  118A  271A  120A  118A  	fcall	_Send_command
   568                           
   569                           ;LCD.c: 98: Send_command(0x01);
   570  07DF  3001               	movlw	1
   571  07E0  120A  118A  271A  120A  118A  	fcall	_Send_command
   572                           
   573                           ;LCD.c: 99: Send_command(0x00);
   574  07E5  3000               	movlw	0
   575  07E6  120A  118A  271A  120A  118A  	fcall	_Send_command
   576                           
   577                           ;LCD.c: 100: Send_command(0x06);
   578  07EB  3006               	movlw	6
   579  07EC  120A  118A  271A  120A  118A  	fcall	_Send_command
   580                           
   581                           ;LCD.c: 101: Send_command(0x00);
   582  07F1  3000               	movlw	0
   583  07F2  120A  118A  271A  120A  118A  	fcall	_Send_command
   584                           
   585                           ;LCD.c: 102: Send_command(lcd);
   586  07F7  0876               	movf	lcd_init@lcd,w
   587  07F8  120A  118A  271A   	fcall	_Send_command
   588  07FB  0008               	return
   589  07FC                     __end_of_lcd_init:	
   590                           
   591                           	psect	text2
   592  071A                     __ptext2:	
   593 ;; *************** function _Send_command *****************
   594 ;; Defined at:
   595 ;;		line 57 in file "LCD.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  com             1    wreg     unsigned char 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  com             1    3[COMMON] unsigned char 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         1       0       0       0       0
   611 ;;      Temps:          2       0       0       0       0
   612 ;;      Totals:         3       0       0       0       0
   613 ;;Total ram usage:        3 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; Hardware stack levels required when called:    1
   616 ;; This function calls:
   617 ;;		_Send_Data
   618 ;; This function is called by:
   619 ;;		_lcd_init
   620 ;;		_lcd_gotoxy
   621 ;;		_lcd_clear
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _Send_command
   627  071A                     _Send_command:	
   628                           
   629                           ;incstack = 0
   630                           ; Regs used in _Send_command: [wreg+status,2+status,0+pclath+cstack]
   631                           ;Send_command@com stored from wreg
   632  071A  00F3               	movwf	Send_command@com
   633                           
   634                           ;LCD.c: 59: (PORTBbits.RB0=0);
   635  071B  1283               	bcf	3,5	;RP0=0, select bank0
   636  071C  1303               	bcf	3,6	;RP1=0, select bank0
   637  071D  1006               	bcf	6,0	;volatile
   638                           
   639                           ;LCD.c: 60: Send_Data(com);
   640  071E  0873               	movf	Send_command@com,w
   641  071F  120A  118A  2732  120A  118A  	fcall	_Send_Data
   642                           
   643                           ;LCD.c: 61: (PORTBbits.RB2=1);
   644  0724  1283               	bcf	3,5	;RP0=0, select bank0
   645  0725  1303               	bcf	3,6	;RP1=0, select bank0
   646  0726  1506               	bsf	6,2	;volatile
   647                           
   648                           ;LCD.c: 62: (PORTBbits.RB2=0);
   649  0727  1106               	bcf	6,2	;volatile
   650                           
   651                           ;LCD.c: 63: _delay((unsigned long)((4)*(8000000/4000.0)));
   652  0728  300B               	movlw	11
   653  0729  00F2               	movwf	??_Send_command+1
   654  072A  3062               	movlw	98
   655  072B  00F1               	movwf	??_Send_command
   656  072C                     u397:	
   657  072C  0BF1               	decfsz	??_Send_command,f
   658  072D  2F2C               	goto	u397
   659  072E  0BF2               	decfsz	??_Send_command+1,f
   660  072F  2F2C               	goto	u397
   661  0730  0000               	nop
   662  0731  0008               	return
   663  0732                     __end_of_Send_command:	
   664                           
   665                           	psect	text3
   666  0732                     __ptext3:	
   667 ;; *************** function _Send_Data *****************
   668 ;; Defined at:
   669 ;;		line 9 in file "LCD.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  data            1    wreg     unsigned char 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  data            1    0[COMMON] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         1       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0
   686 ;;      Totals:         1       0       0       0       0
   687 ;;Total ram usage:        1 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_Send_command
   693 ;;		_lcd_Print_char
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _Send_Data
   699  0732                     _Send_Data:	
   700                           
   701                           ;incstack = 0
   702                           ; Regs used in _Send_Data: [wreg]
   703                           ;Send_Data@data stored from wreg
   704  0732  00F0               	movwf	Send_Data@data
   705                           
   706                           ;LCD.c: 11: if(data&0x01)
   707  0733  1C70               	btfss	Send_Data@data,0
   708  0734  2F39               	goto	l13
   709                           
   710                           ;LCD.c: 12: {
   711                           ;LCD.c: 13: PORTDbits.RD4=1;
   712  0735  1283               	bcf	3,5	;RP0=0, select bank0
   713  0736  1303               	bcf	3,6	;RP1=0, select bank0
   714  0737  1608               	bsf	8,4	;volatile
   715                           
   716                           ;LCD.c: 15: }
   717  0738  2F3C               	goto	l14
   718  0739                     l13:	
   719                           
   720                           ;LCD.c: 16: else
   721                           ;LCD.c: 17: {
   722                           ;LCD.c: 18: PORTDbits.RD4=0;
   723  0739  1283               	bcf	3,5	;RP0=0, select bank0
   724  073A  1303               	bcf	3,6	;RP1=0, select bank0
   725  073B  1208               	bcf	8,4	;volatile
   726  073C                     l14:	
   727                           
   728                           ;LCD.c: 19: }
   729                           ;LCD.c: 21: if(data&0x02)
   730  073C  1CF0               	btfss	Send_Data@data,1
   731  073D  2F40               	goto	l15
   732                           
   733                           ;LCD.c: 22: {
   734                           ;LCD.c: 23: PORTDbits.RD5=1;
   735  073E  1688               	bsf	8,5	;volatile
   736                           
   737                           ;LCD.c: 25: }
   738  073F  2F41               	goto	l16
   739  0740                     l15:	
   740                           
   741                           ;LCD.c: 26: else
   742                           ;LCD.c: 27: {
   743                           ;LCD.c: 28: PORTDbits.RD5=0;
   744  0740  1288               	bcf	8,5	;volatile
   745  0741                     l16:	
   746                           
   747                           ;LCD.c: 29: }
   748                           ;LCD.c: 31: if(data&0x04)
   749  0741  1D70               	btfss	Send_Data@data,2
   750  0742  2F45               	goto	l17
   751                           
   752                           ;LCD.c: 32: {
   753                           ;LCD.c: 33: PORTDbits.RD6=1;
   754  0743  1708               	bsf	8,6	;volatile
   755                           
   756                           ;LCD.c: 35: }
   757  0744  2F46               	goto	l18
   758  0745                     l17:	
   759                           
   760                           ;LCD.c: 36: else
   761                           ;LCD.c: 37: {
   762                           ;LCD.c: 38: PORTDbits.RD6=0;
   763  0745  1308               	bcf	8,6	;volatile
   764  0746                     l18:	
   765                           
   766                           ;LCD.c: 39: }
   767                           ;LCD.c: 41: if(data&0x08)
   768  0746  1DF0               	btfss	Send_Data@data,3
   769  0747  2F4A               	goto	l19
   770                           
   771                           ;LCD.c: 42: {
   772                           ;LCD.c: 43: PORTDbits.RD7=1;
   773  0748  1788               	bsf	8,7	;volatile
   774                           
   775                           ;LCD.c: 45: }
   776  0749  0008               	return
   777  074A                     l19:	
   778                           
   779                           ;LCD.c: 46: else
   780                           ;LCD.c: 47: {
   781                           ;LCD.c: 48: PORTDbits.RD7=0;
   782  074A  1388               	bcf	8,7	;volatile
   783  074B  0008               	return
   784  074C                     __end_of_Send_Data:	
   785  007E                     btemp	set	126	;btemp
   786  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lcd_init
    _lcd_init->_Send_command
    _Send_command->_Send_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0     161
                                              0 BANK0     12    12      0
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     158
                                              4 COMMON     3     3      0
                       _Send_command
 ---------------------------------------------------------------------------------
 (2) _Send_command                                         3     3      0     110
                                              1 COMMON     3     3      0
                          _Send_Data
 ---------------------------------------------------------------------------------
 (3) _Send_Data                                            1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _Send_command
       _Send_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 18 23:14:25 2018

          Send_Data@data 0070                       l13 0739                       l14 073C  
                     l15 0740                       l16 0741                       l17 0745  
                     l18 0746                       l19 074A                       l68 076C  
                     _RD 0C60                       _WR 0C61                      l811 0775  
                    l813 0777                      l821 078C                      l815 0779  
                    l809 0773                      l819 077E                      _GIE 005F  
                    u347 0790                      u357 079D                      u367 07A8  
                    u377 07B3                      u387 07BE                      u397 072C  
            lcd_init@lcd 0076                     _WREN 0C62                     _main 074C  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _EEADR 010D                    _TRISB 0086                    _TRISD 0088  
                  main@i 0020                    main@j 0024                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 076D  
                 ??_main 0077                   _EEDATA 010C                   _EECON2 018D  
       __end_of_lcd_init 07FC       __size_of_Send_Data 001A  __end_of__initialization 07FC  
          ?_Send_command 0070           __pcstackCOMMON 0070        __end_of_Send_Data 074C  
         ??_Send_command 0071               __pmaintext 074C                ?_lcd_init 0070  
                __ptext1 076D                  __ptext2 071A                  __ptext3 0732  
                main@dtt 0028               ??_lcd_init 0074     end_of_initialization 07FC  
              _PORTBbits 0006                _PORTDbits 0008     __end_of_Send_command 0732  
    start_initialization 07FC                _Send_Data 0732                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lcd_init 008F               ?_Send_Data 0070  
  __size_of_Send_command 0018          Send_command@com 0073             _Send_command 071A  
            ??_Send_Data 0070                 _lcd_init 076D            __size_of_main 0021  
