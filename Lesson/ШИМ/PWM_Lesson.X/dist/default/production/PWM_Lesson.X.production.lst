

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Jan 27 09:29:07 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.44
    22                           ; Generated 14/09/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113                           
   114                           	psect	idataBANK0
   115  038A                     __pidataBANK0:	
   116                           
   117                           ;initializer for _freq
   118  038A  34E8               	retlw	232
   119  038B  3403               	retlw	3
   120  038C  3400               	retlw	0
   121  038D  3400               	retlw	0
   122  0007                     _PORTC	set	7
   123  0015                     _CCPR1L	set	21
   124  00BC                     _CCP1Y	set	188
   125  00BD                     _CCP1X	set	189
   126  0091                     _T2CKPS1	set	145
   127  0090                     _T2CKPS0	set	144
   128  00BA                     _CCP1M2	set	186
   129  00BB                     _CCP1M3	set	187
   130  0087                     _TRISC	set	135
   131  0092                     _PR2	set	146
   132  043A                     _TRISC2	set	1082
   133                           
   134                           ; #config settings
   135  0000                     
   136                           	psect	cinit
   137  07E6                     start_initialization:	
   138  07E6                     __initialization:	
   139                           
   140                           ; Initialize objects allocated to BANK0
   141  07E6  120A  118A  238A  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   142  07EB  00D4               	movwf	__pdataBANK0& (0+127)
   143  07EC  120A  118A  238B  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   144  07F1  00D5               	movwf	(__pdataBANK0+1)& (0+127)
   145  07F2  120A  118A  238C  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   146  07F7  00D6               	movwf	(__pdataBANK0+2)& (0+127)
   147  07F8  120A  118A  238D   	fcall	__pidataBANK0+3	;fetch initializer
   148  07FB  00D7               	movwf	(__pdataBANK0+3)& (0+127)
   149  07FC                     end_of_initialization:	
   150                           ;End of C runtime variable initialization code
   151                           
   152  07FC                     __end_of__initialization:	
   153  07FC  0183               	clrf	3
   154  07FD  120A  118A  2BA2   	ljmp	_main	;jump to C main() function
   155                           
   156                           	psect	dataBANK0
   157  0054                     __pdataBANK0:	
   158  0054                     _freq:	
   159  0054                     	ds	4
   160                           
   161                           	psect	cstackCOMMON
   162  0070                     __pcstackCOMMON:	
   163  0070                     ?_PWM_Init:	
   164  0070                     ?_main:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     ?___ftpack:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  0070                     ?___aldiv:	
   171                           ; 3 bytes @ 0x0
   172                           
   173  0070                     ___ftpack@arg:	
   174                           ; 4 bytes @ 0x0
   175                           
   176  0070                     ___aldiv@divisor:	
   177                           ; 3 bytes @ 0x0
   178                           
   179                           
   180                           ; 4 bytes @ 0x0
   181  0070                     	ds	3
   182  0073                     ___ftpack@exp:	
   183                           
   184                           ; 1 bytes @ 0x3
   185  0073                     	ds	1
   186  0074                     ___ftpack@sign:	
   187  0074                     ___aldiv@dividend:	
   188                           ; 1 bytes @ 0x4
   189                           
   190                           
   191                           ; 4 bytes @ 0x4
   192  0074                     	ds	1
   193  0075                     ??___ftpack:	
   194                           
   195                           ; 1 bytes @ 0x5
   196  0075                     	ds	3
   197  0078                     ??___aldiv:	
   198  0078                     ?___lwtoft:	
   199                           ; 1 bytes @ 0x8
   200                           
   201  0078                     ___lwtoft@c:	
   202                           ; 3 bytes @ 0x8
   203                           
   204                           
   205                           ; 2 bytes @ 0x8
   206  0078                     	ds	1
   207  0079                     ??_PWM_Init:	
   208  0079                     ??___altoft:	
   209                           ; 1 bytes @ 0x9
   210                           
   211                           
   212                           ; 1 bytes @ 0x9
   213  0079                     	ds	2
   214  007B                     ??___lwtoft:	
   215  007B                     ___altoft@exp:	
   216                           ; 1 bytes @ 0xB
   217                           
   218                           
   219                           ; 1 bytes @ 0xB
   220  007B                     	ds	1
   221  007C                     ___altoft@sign:	
   222                           
   223                           ; 1 bytes @ 0xC
   224  007C                     	ds	1
   225  007D                     ??_main:	
   226                           
   227                           	psect	cstackBANK0
   228  0020                     __pcstackBANK0:	
   229                           ; 1 bytes @ 0xD
   230                           
   231  0020                     ?___ftdiv:	
   232  0020                     ___aldiv@counter:	
   233                           ; 3 bytes @ 0x0
   234                           
   235  0020                     ___ftdiv@f2:	
   236                           ; 1 bytes @ 0x0
   237                           
   238                           
   239                           ; 3 bytes @ 0x0
   240  0020                     	ds	1
   241  0021                     ___aldiv@sign:	
   242                           
   243                           ; 1 bytes @ 0x1
   244  0021                     	ds	1
   245  0022                     ___aldiv@quotient:	
   246                           
   247                           ; 4 bytes @ 0x2
   248  0022                     	ds	1
   249  0023                     ___ftdiv@f1:	
   250                           
   251                           ; 3 bytes @ 0x3
   252  0023                     	ds	3
   253  0026                     ??___ftdiv:	
   254  0026                     ?___altoft:	
   255                           ; 1 bytes @ 0x6
   256                           
   257  0026                     ___altoft@c:	
   258                           ; 3 bytes @ 0x6
   259                           
   260                           
   261                           ; 4 bytes @ 0x6
   262  0026                     	ds	4
   263  002A                     ___ftdiv@cntr:	
   264                           
   265                           ; 1 bytes @ 0xA
   266  002A                     	ds	1
   267  002B                     ___ftdiv@f3:	
   268                           
   269                           ; 3 bytes @ 0xB
   270  002B                     	ds	3
   271  002E                     ___ftdiv@exp:	
   272                           
   273                           ; 1 bytes @ 0xE
   274  002E                     	ds	1
   275  002F                     ___ftdiv@sign:	
   276                           
   277                           ; 1 bytes @ 0xF
   278  002F                     	ds	1
   279  0030                     ?___ftmul:	
   280  0030                     ___ftmul@f1:	
   281                           ; 3 bytes @ 0x10
   282                           
   283                           
   284                           ; 3 bytes @ 0x10
   285  0030                     	ds	3
   286  0033                     ___ftmul@f2:	
   287                           
   288                           ; 3 bytes @ 0x13
   289  0033                     	ds	3
   290  0036                     ??___ftmul:	
   291                           
   292                           ; 1 bytes @ 0x16
   293  0036                     	ds	4
   294  003A                     ___ftmul@exp:	
   295                           
   296                           ; 1 bytes @ 0x1A
   297  003A                     	ds	1
   298  003B                     ___ftmul@f3_as_product:	
   299                           
   300                           ; 3 bytes @ 0x1B
   301  003B                     	ds	3
   302  003E                     ___ftmul@cntr:	
   303                           
   304                           ; 1 bytes @ 0x1E
   305  003E                     	ds	1
   306  003F                     ___ftmul@sign:	
   307                           
   308                           ; 1 bytes @ 0x1F
   309  003F                     	ds	1
   310  0040                     ?___fttol:	
   311  0040                     ___fttol@f1:	
   312                           ; 4 bytes @ 0x20
   313                           
   314                           
   315                           ; 3 bytes @ 0x20
   316  0040                     	ds	4
   317  0044                     ??___fttol:	
   318                           
   319                           ; 1 bytes @ 0x24
   320  0044                     	ds	4
   321  0048                     ___fttol@sign1:	
   322                           
   323                           ; 1 bytes @ 0x28
   324  0048                     	ds	1
   325  0049                     ___fttol@lval:	
   326                           
   327                           ; 4 bytes @ 0x29
   328  0049                     	ds	4
   329  004D                     ___fttol@exp1:	
   330                           
   331                           ; 1 bytes @ 0x2D
   332  004D                     	ds	1
   333  004E                     ?_PWM_Duty:	
   334  004E                     PWM_Duty@duty:	
   335                           ; 1 bytes @ 0x2E
   336                           
   337                           
   338                           ; 2 bytes @ 0x2E
   339  004E                     	ds	2
   340  0050                     ??_PWM_Duty:	
   341                           
   342                           ; 1 bytes @ 0x30
   343  0050                     	ds	4
   344                           
   345                           	psect	maintext
   346  03A2                     __pmaintext:	
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 56 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : B00/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0
   369 ;;      Totals:         0       0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels required when called:    3
   372 ;; This function calls:
   373 ;;		_PWM_Duty
   374 ;;		_PWM_Init
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           
   381                           ;psect for function _main
   382  03A2                     _main:	
   383                           
   384                           ;main.c: 58: TRISC=0x00;
   385                           
   386                           ;incstack = 0
   387                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   388  03A2  1683               	bsf	3,5	;RP0=1, select bank1
   389  03A3  1303               	bcf	3,6	;RP1=0, select bank1
   390  03A4  0187               	clrf	7	;volatile
   391                           
   392                           ;main.c: 59: PORTC=0x00;
   393  03A5  1283               	bcf	3,5	;RP0=0, select bank0
   394  03A6  1303               	bcf	3,6	;RP1=0, select bank0
   395  03A7  0187               	clrf	7	;volatile
   396                           
   397                           ;main.c: 60: PWM_Init();
   398  03A8  120A  118A  23B9  120A  118A  	fcall	_PWM_Init
   399                           
   400                           ;main.c: 61: PWM_Duty(500);
   401  03AD  30F4               	movlw	244
   402  03AE  1283               	bcf	3,5	;RP0=0, select bank0
   403  03AF  1303               	bcf	3,6	;RP1=0, select bank0
   404  03B0  00CE               	movwf	PWM_Duty@duty
   405  03B1  3001               	movlw	1
   406  03B2  00CF               	movwf	PWM_Duty@duty+1
   407  03B3  120A  118A  25C2  120A  118A  	fcall	_PWM_Duty
   408  03B8                     l36:	
   409                           ;main.c: 62: while(1)
   410                           
   411                           
   412                           ;main.c: 63: {
   413  03B8  2BB8               	goto	l36
   414  03B9                     __end_of_main:	
   415                           
   416                           	psect	text1
   417  03B9                     __ptext1:	
   418 ;; *************** function _PWM_Init *****************
   419 ;; Defined at:
   420 ;;		line 26 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          4       0       0       0       0
   437 ;;      Totals:         4       0       0       0       0
   438 ;;Total ram usage:        4 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    1
   441 ;; This function calls:
   442 ;;		___aldiv
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _PWM_Init
   450  03B9                     _PWM_Init:	
   451                           
   452                           ;main.c: 28: PR2 = (8000000/(freq*4*4)) - 1;
   453                           
   454                           ;incstack = 0
   455                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
   456  03B9  1283               	bcf	3,5	;RP0=0, select bank0
   457  03BA  1303               	bcf	3,6	;RP1=0, select bank0
   458  03BB  0854               	movf	_freq,w
   459  03BC  00F9               	movwf	??_PWM_Init
   460  03BD  0855               	movf	_freq+1,w
   461  03BE  00FA               	movwf	??_PWM_Init+1
   462  03BF  0856               	movf	_freq+2,w
   463  03C0  00FB               	movwf	??_PWM_Init+2
   464  03C1  0857               	movf	_freq+3,w
   465  03C2  00FC               	movwf	??_PWM_Init+3
   466  03C3  3002               	movlw	2
   467  03C4                     u1215:	
   468  03C4  1003               	clrc
   469  03C5  0DF9               	rlf	??_PWM_Init,f
   470  03C6  0DFA               	rlf	??_PWM_Init+1,f
   471  03C7  0DFB               	rlf	??_PWM_Init+2,f
   472  03C8  0DFC               	rlf	??_PWM_Init+3,f
   473  03C9  3EFF               	addlw	-1
   474  03CA  1D03               	skipz
   475  03CB  2BC4               	goto	u1215
   476  03CC  3002               	movlw	2
   477  03CD                     u1225:	
   478  03CD  1003               	clrc
   479  03CE  0DF9               	rlf	??_PWM_Init,f
   480  03CF  0DFA               	rlf	??_PWM_Init+1,f
   481  03D0  0DFB               	rlf	??_PWM_Init+2,f
   482  03D1  0DFC               	rlf	??_PWM_Init+3,f
   483  03D2  3EFF               	addlw	-1
   484  03D3  1D03               	skipz
   485  03D4  2BCD               	goto	u1225
   486  03D5  087C               	movf	??_PWM_Init+3,w
   487  03D6  00F3               	movwf	___aldiv@divisor+3
   488  03D7  087B               	movf	??_PWM_Init+2,w
   489  03D8  00F2               	movwf	___aldiv@divisor+2
   490  03D9  087A               	movf	??_PWM_Init+1,w
   491  03DA  00F1               	movwf	___aldiv@divisor+1
   492  03DB  0879               	movf	??_PWM_Init,w
   493  03DC  00F0               	movwf	___aldiv@divisor
   494  03DD  3000               	movlw	0
   495  03DE  00F7               	movwf	___aldiv@dividend+3
   496  03DF  307A               	movlw	122
   497  03E0  00F6               	movwf	___aldiv@dividend+2
   498  03E1  3012               	movlw	18
   499  03E2  00F5               	movwf	___aldiv@dividend+1
   500  03E3  3000               	movlw	0
   501  03E4  00F4               	movwf	___aldiv@dividend
   502  03E5  120A  118A  2533   	fcall	___aldiv
   503  03E8  0870               	movf	?___aldiv,w
   504  03E9  3EFF               	addlw	255
   505  03EA  1683               	bsf	3,5	;RP0=1, select bank1
   506  03EB  1303               	bcf	3,6	;RP1=0, select bank1
   507  03EC  0092               	movwf	18	;volatile
   508                           
   509                           ;main.c: 31: CCP1M3=1;
   510  03ED  1283               	bcf	3,5	;RP0=0, select bank0
   511  03EE  1303               	bcf	3,6	;RP1=0, select bank0
   512  03EF  1597               	bsf	23,3	;volatile
   513                           
   514                           ;main.c: 32: CCP1M2=1;
   515  03F0  1517               	bsf	23,2	;volatile
   516                           
   517                           ;main.c: 36: T2CKPS0 = 1;
   518  03F1  1412               	bsf	18,0	;volatile
   519                           
   520                           ;main.c: 37: T2CKPS1 = 0;
   521  03F2  1092               	bcf	18,1	;volatile
   522                           
   523                           ;main.c: 40: TRISC2=0;
   524  03F3  1683               	bsf	3,5	;RP0=1, select bank1
   525  03F4  1303               	bcf	3,6	;RP1=0, select bank1
   526  03F5  1107               	bcf	7,2	;volatile
   527  03F6  0008               	return
   528  03F7                     __end_of_PWM_Init:	
   529                           
   530                           	psect	text2
   531  05C2                     __ptext2:	
   532 ;; *************** function _PWM_Duty *****************
   533 ;; Defined at:
   534 ;;		line 43 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  duty            2   46[BANK0 ] unsigned int 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       2       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       4       0       0       0
   551 ;;      Totals:         0       6       0       0       0
   552 ;;Total ram usage:        6 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    2
   555 ;; This function calls:
   556 ;;		___aldiv
   557 ;;		___altoft
   558 ;;		___ftdiv
   559 ;;		___ftmul
   560 ;;		___fttol
   561 ;;		___lwtoft
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _PWM_Duty
   569  05C2                     _PWM_Duty:	
   570                           
   571                           ;main.c: 45: if (duty<1023)
   572                           
   573                           ;incstack = 0
   574                           ; Regs used in _PWM_Duty: [wreg+status,2+status,0+pclath+cstack]
   575  05C2  3003               	movlw	3
   576  05C3  1283               	bcf	3,5	;RP0=0, select bank0
   577  05C4  1303               	bcf	3,6	;RP1=0, select bank0
   578  05C5  024F               	subwf	PWM_Duty@duty+1,w
   579  05C6  30FF               	movlw	255
   580  05C7  1903               	skipnz
   581  05C8  024E               	subwf	PWM_Duty@duty,w
   582  05C9  1803               	skipnc
   583  05CA  0008               	return
   584                           
   585                           ;main.c: 46: {
   586                           ;main.c: 47: duty=((float)duty /1023) * (8000000/(freq*4));
   587  05CB  084F               	movf	PWM_Duty@duty+1,w
   588  05CC  00F9               	movwf	___lwtoft@c+1
   589  05CD  084E               	movf	PWM_Duty@duty,w
   590  05CE  00F8               	movwf	___lwtoft@c
   591  05CF  120A  118A  238E  120A  118A  	fcall	___lwtoft
   592  05D4  0878               	movf	?___lwtoft,w
   593  05D5  1283               	bcf	3,5	;RP0=0, select bank0
   594  05D6  1303               	bcf	3,6	;RP1=0, select bank0
   595  05D7  00A3               	movwf	___ftdiv@f1
   596  05D8  0879               	movf	?___lwtoft+1,w
   597  05D9  00A4               	movwf	___ftdiv@f1+1
   598  05DA  087A               	movf	?___lwtoft+2,w
   599  05DB  00A5               	movwf	___ftdiv@f1+2
   600  05DC  30C0               	movlw	192
   601  05DD  00A0               	movwf	___ftdiv@f2
   602  05DE  307F               	movlw	127
   603  05DF  00A1               	movwf	___ftdiv@f2+1
   604  05E0  3044               	movlw	68
   605  05E1  00A2               	movwf	___ftdiv@f2+2
   606  05E2  120A  118A  265B  120A  118A  	fcall	___ftdiv
   607  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   608  05E8  1303               	bcf	3,6	;RP1=0, select bank0
   609  05E9  0820               	movf	?___ftdiv,w
   610  05EA  00B3               	movwf	___ftmul@f2
   611  05EB  0821               	movf	?___ftdiv+1,w
   612  05EC  00B4               	movwf	___ftmul@f2+1
   613  05ED  0822               	movf	?___ftdiv+2,w
   614  05EE  00B5               	movwf	___ftmul@f2+2
   615  05EF  3000               	movlw	0
   616  05F0  00F7               	movwf	___aldiv@dividend+3
   617  05F1  307A               	movlw	122
   618  05F2  00F6               	movwf	___aldiv@dividend+2
   619  05F3  3012               	movlw	18
   620  05F4  00F5               	movwf	___aldiv@dividend+1
   621  05F5  3000               	movlw	0
   622  05F6  00F4               	movwf	___aldiv@dividend
   623  05F7  0854               	movf	_freq,w
   624  05F8  00D0               	movwf	??_PWM_Duty
   625  05F9  0855               	movf	_freq+1,w
   626  05FA  00D1               	movwf	??_PWM_Duty+1
   627  05FB  0856               	movf	_freq+2,w
   628  05FC  00D2               	movwf	??_PWM_Duty+2
   629  05FD  0857               	movf	_freq+3,w
   630  05FE  00D3               	movwf	??_PWM_Duty+3
   631  05FF  3002               	movlw	2
   632  0600                     u1245:	
   633  0600  1003               	clrc
   634  0601  0DD0               	rlf	??_PWM_Duty,f
   635  0602  0DD1               	rlf	??_PWM_Duty+1,f
   636  0603  0DD2               	rlf	??_PWM_Duty+2,f
   637  0604  0DD3               	rlf	??_PWM_Duty+3,f
   638  0605  3EFF               	addlw	-1
   639  0606  1D03               	skipz
   640  0607  2E00               	goto	u1245
   641  0608  0853               	movf	??_PWM_Duty+3,w
   642  0609  00F3               	movwf	___aldiv@divisor+3
   643  060A  0852               	movf	??_PWM_Duty+2,w
   644  060B  00F2               	movwf	___aldiv@divisor+2
   645  060C  0851               	movf	??_PWM_Duty+1,w
   646  060D  00F1               	movwf	___aldiv@divisor+1
   647  060E  0850               	movf	??_PWM_Duty,w
   648  060F  00F0               	movwf	___aldiv@divisor
   649  0610  120A  118A  2533  120A  118A  	fcall	___aldiv
   650  0615  0873               	movf	?___aldiv+3,w
   651  0616  1283               	bcf	3,5	;RP0=0, select bank0
   652  0617  1303               	bcf	3,6	;RP1=0, select bank0
   653  0618  00A9               	movwf	___altoft@c+3
   654  0619  0872               	movf	?___aldiv+2,w
   655  061A  00A8               	movwf	___altoft@c+2
   656  061B  0871               	movf	?___aldiv+1,w
   657  061C  00A7               	movwf	___altoft@c+1
   658  061D  0870               	movf	?___aldiv,w
   659  061E  00A6               	movwf	___altoft@c
   660  061F  120A  118A  23F7  120A  118A  	fcall	___altoft
   661  0624  1283               	bcf	3,5	;RP0=0, select bank0
   662  0625  1303               	bcf	3,6	;RP1=0, select bank0
   663  0626  0826               	movf	?___altoft,w
   664  0627  00B0               	movwf	___ftmul@f1
   665  0628  0827               	movf	?___altoft+1,w
   666  0629  00B1               	movwf	___ftmul@f1+1
   667  062A  0828               	movf	?___altoft+2,w
   668  062B  00B2               	movwf	___ftmul@f1+2
   669  062C  120A  118A  2713  120A  118A  	fcall	___ftmul
   670  0631  1283               	bcf	3,5	;RP0=0, select bank0
   671  0632  1303               	bcf	3,6	;RP1=0, select bank0
   672  0633  0830               	movf	?___ftmul,w
   673  0634  00C0               	movwf	___fttol@f1
   674  0635  0831               	movf	?___ftmul+1,w
   675  0636  00C1               	movwf	___fttol@f1+1
   676  0637  0832               	movf	?___ftmul+2,w
   677  0638  00C2               	movwf	___fttol@f1+2
   678  0639  120A  118A  24A5  120A  118A  	fcall	___fttol
   679  063E  1283               	bcf	3,5	;RP0=0, select bank0
   680  063F  1303               	bcf	3,6	;RP1=0, select bank0
   681  0640  0841               	movf	?___fttol+1,w
   682  0641  00CF               	movwf	PWM_Duty@duty+1
   683  0642  0840               	movf	?___fttol,w
   684  0643  00CE               	movwf	PWM_Duty@duty
   685                           
   686                           ;main.c: 49: CCP1X = duty & 1;
   687  0644  1C4E               	btfss	PWM_Duty@duty,0
   688  0645  2E4A               	goto	u1250
   689  0646  1283               	bcf	3,5	;RP0=0, select bank0
   690  0647  1303               	bcf	3,6	;RP1=0, select bank0
   691  0648  1697               	bsf	23,5	;volatile
   692  0649  2E4D               	goto	l997
   693  064A                     u1250:	
   694  064A  1283               	bcf	3,5	;RP0=0, select bank0
   695  064B  1303               	bcf	3,6	;RP1=0, select bank0
   696  064C  1297               	bcf	23,5	;volatile
   697  064D                     l997:	
   698                           
   699                           ;main.c: 50: CCP1Y = duty & 2;
   700  064D  1217               	bcf	23,4	;volatile
   701                           
   702                           ;main.c: 51: CCPR1L = duty >> 2;
   703  064E  084F               	movf	PWM_Duty@duty+1,w
   704  064F  00D1               	movwf	??_PWM_Duty+1
   705  0650  084E               	movf	PWM_Duty@duty,w
   706  0651  00D0               	movwf	??_PWM_Duty
   707  0652  1003               	clrc
   708  0653  0CD1               	rrf	??_PWM_Duty+1,f
   709  0654  0CD0               	rrf	??_PWM_Duty,f
   710  0655  1003               	clrc
   711  0656  0CD1               	rrf	??_PWM_Duty+1,f
   712  0657  0CD0               	rrf	??_PWM_Duty,f
   713  0658  0850               	movf	??_PWM_Duty,w
   714  0659  0095               	movwf	21	;volatile
   715  065A  0008               	return
   716  065B                     __end_of_PWM_Duty:	
   717                           
   718                           	psect	text3
   719  038E                     __ptext3:	
   720 ;; *************** function ___lwtoft *****************
   721 ;; Defined at:
   722 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  c               2    8[COMMON] unsigned int 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  3    8[COMMON] float 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         3       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          1       0       0       0       0
   739 ;;      Totals:         4       0       0       0       0
   740 ;;Total ram usage:        4 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    1
   743 ;; This function calls:
   744 ;;		___ftpack
   745 ;; This function is called by:
   746 ;;		_PWM_Duty
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function ___lwtoft
   752  038E                     ___lwtoft:	
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   756  038E  0878               	movf	___lwtoft@c,w
   757  038F  00F0               	movwf	___ftpack@arg
   758  0390  0879               	movf	___lwtoft@c+1,w
   759  0391  00F1               	movwf	___ftpack@arg+1
   760  0392  01F2               	clrf	___ftpack@arg+2
   761  0393  308E               	movlw	142
   762  0394  00FB               	movwf	??___lwtoft
   763  0395  087B               	movf	??___lwtoft,w
   764  0396  00F3               	movwf	___ftpack@exp
   765  0397  01F4               	clrf	___ftpack@sign
   766  0398  120A  118A  2439   	fcall	___ftpack
   767  039B  0870               	movf	?___ftpack,w
   768  039C  00F8               	movwf	?___lwtoft
   769  039D  0871               	movf	?___ftpack+1,w
   770  039E  00F9               	movwf	?___lwtoft+1
   771  039F  0872               	movf	?___ftpack+2,w
   772  03A0  00FA               	movwf	?___lwtoft+2
   773  03A1  0008               	return
   774  03A2                     __end_of___lwtoft:	
   775                           
   776                           	psect	text4
   777  04A5                     __ptext4:	
   778 ;; *************** function ___fttol *****************
   779 ;; Defined at:
   780 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  f1              3   32[BANK0 ] float 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  lval            4   41[BANK0 ] unsigned long 
   785 ;;  exp1            1   45[BANK0 ] unsigned char 
   786 ;;  sign1           1   40[BANK0 ] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  4   32[BANK0 ] long 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       4       0       0       0
   797 ;;      Locals:         0       6       0       0       0
   798 ;;      Temps:          0       4       0       0       0
   799 ;;      Totals:         0      14       0       0       0
   800 ;;Total ram usage:       14 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_PWM_Duty
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function ___fttol
   811  04A5                     ___fttol:	
   812                           
   813                           ;incstack = 0
   814                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   815  04A5  1283               	bcf	3,5	;RP0=0, select bank0
   816  04A6  1303               	bcf	3,6	;RP1=0, select bank0
   817  04A7  0840               	movf	___fttol@f1,w
   818  04A8  00C4               	movwf	??___fttol
   819  04A9  0841               	movf	___fttol@f1+1,w
   820  04AA  00C5               	movwf	??___fttol+1
   821  04AB  0842               	movf	___fttol@f1+2,w
   822  04AC  00C6               	movwf	??___fttol+2
   823  04AD  1003               	clrc
   824  04AE  0D45               	rlf	??___fttol+1,w
   825  04AF  0D46               	rlf	??___fttol+2,w
   826  04B0  00C7               	movwf	??___fttol+3
   827  04B1  0847               	movf	??___fttol+3,w
   828  04B2  00CD               	movwf	___fttol@exp1
   829  04B3  084D               	movf	___fttol@exp1,w
   830  04B4  1D03               	btfss	3,2
   831  04B5  2CBF               	goto	l939
   832  04B6  3000               	movlw	0
   833  04B7  00C3               	movwf	?___fttol+3
   834  04B8  3000               	movlw	0
   835  04B9  00C2               	movwf	?___fttol+2
   836  04BA  3000               	movlw	0
   837  04BB  00C1               	movwf	?___fttol+1
   838  04BC  3000               	movlw	0
   839  04BD  00C0               	movwf	?___fttol
   840  04BE  0008               	return
   841  04BF                     l939:	
   842  04BF  0840               	movf	___fttol@f1,w
   843  04C0  00C4               	movwf	??___fttol
   844  04C1  0841               	movf	___fttol@f1+1,w
   845  04C2  00C5               	movwf	??___fttol+1
   846  04C3  0842               	movf	___fttol@f1+2,w
   847  04C4  00C6               	movwf	??___fttol+2
   848  04C5  3017               	movlw	23
   849  04C6                     u1125:	
   850  04C6  1003               	clrc
   851  04C7  0CC6               	rrf	??___fttol+2,f
   852  04C8  0CC5               	rrf	??___fttol+1,f
   853  04C9  0CC4               	rrf	??___fttol,f
   854  04CA  3EFF               	addlw	-1
   855  04CB  1D03               	skipz
   856  04CC  2CC6               	goto	u1125
   857  04CD  0844               	movf	??___fttol,w
   858  04CE  00C7               	movwf	??___fttol+3
   859  04CF  0847               	movf	??___fttol+3,w
   860  04D0  00C8               	movwf	___fttol@sign1
   861  04D1  17C1               	bsf	___fttol@f1+1,7
   862  04D2  30FF               	movlw	255
   863  04D3  05C0               	andwf	___fttol@f1,f
   864  04D4  30FF               	movlw	255
   865  04D5  05C1               	andwf	___fttol@f1+1,f
   866  04D6  3000               	movlw	0
   867  04D7  05C2               	andwf	___fttol@f1+2,f
   868  04D8  0840               	movf	___fttol@f1,w
   869  04D9  00C9               	movwf	___fttol@lval
   870  04DA  0841               	movf	___fttol@f1+1,w
   871  04DB  00CA               	movwf	___fttol@lval+1
   872  04DC  0842               	movf	___fttol@f1+2,w
   873  04DD  00CB               	movwf	___fttol@lval+2
   874  04DE  01CC               	clrf	___fttol@lval+3
   875  04DF  308E               	movlw	142
   876  04E0  02CD               	subwf	___fttol@exp1,f
   877  04E1  1FCD               	btfss	___fttol@exp1,7
   878  04E2  2D01               	goto	l959
   879  04E3  084D               	movf	___fttol@exp1,w
   880  04E4  3A80               	xorlw	128
   881  04E5  3E8F               	addlw	143
   882  04E6  1803               	skipnc
   883  04E7  2CF1               	goto	l957
   884  04E8  3000               	movlw	0
   885  04E9  00C3               	movwf	?___fttol+3
   886  04EA  3000               	movlw	0
   887  04EB  00C2               	movwf	?___fttol+2
   888  04EC  3000               	movlw	0
   889  04ED  00C1               	movwf	?___fttol+1
   890  04EE  3000               	movlw	0
   891  04EF  00C0               	movwf	?___fttol
   892  04F0  0008               	return
   893  04F1                     l957:	
   894  04F1  3001               	movlw	1
   895  04F2                     u1155:	
   896  04F2  1003               	clrc
   897  04F3  0CCC               	rrf	___fttol@lval+3,f
   898  04F4  0CCB               	rrf	___fttol@lval+2,f
   899  04F5  0CCA               	rrf	___fttol@lval+1,f
   900  04F6  0CC9               	rrf	___fttol@lval,f
   901  04F7  3EFF               	addlw	-1
   902  04F8  1D03               	skipz
   903  04F9  2CF2               	goto	u1155
   904  04FA  3001               	movlw	1
   905  04FB  00C4               	movwf	??___fttol
   906  04FC  0844               	movf	??___fttol,w
   907  04FD  07CD               	addwf	___fttol@exp1,f
   908  04FE  1903               	btfsc	3,2
   909  04FF  2D1C               	goto	l967
   910  0500  2CF1               	goto	l957
   911  0501                     l959:	
   912  0501  3018               	movlw	24
   913  0502  024D               	subwf	___fttol@exp1,w
   914  0503  1C03               	skipc
   915  0504  2D19               	goto	l375
   916  0505  3000               	movlw	0
   917  0506  00C3               	movwf	?___fttol+3
   918  0507  3000               	movlw	0
   919  0508  00C2               	movwf	?___fttol+2
   920  0509  3000               	movlw	0
   921  050A  00C1               	movwf	?___fttol+1
   922  050B  3000               	movlw	0
   923  050C  00C0               	movwf	?___fttol
   924  050D  0008               	return
   925  050E                     l965:	
   926  050E  3001               	movlw	1
   927  050F  00C4               	movwf	??___fttol
   928  0510                     u1185:	
   929  0510  1003               	clrc
   930  0511  0DC9               	rlf	___fttol@lval,f
   931  0512  0DCA               	rlf	___fttol@lval+1,f
   932  0513  0DCB               	rlf	___fttol@lval+2,f
   933  0514  0DCC               	rlf	___fttol@lval+3,f
   934  0515  0BC4               	decfsz	??___fttol,f
   935  0516  2D10               	goto	u1185
   936  0517  3001               	movlw	1
   937  0518  02CD               	subwf	___fttol@exp1,f
   938  0519                     l375:	
   939  0519  084D               	movf	___fttol@exp1,w
   940  051A  1D03               	btfss	3,2
   941  051B  2D0E               	goto	l965
   942  051C                     l967:	
   943  051C  0848               	movf	___fttol@sign1,w
   944  051D  1903               	btfsc	3,2
   945  051E  2D2A               	goto	l971
   946  051F  09C9               	comf	___fttol@lval,f
   947  0520  09CA               	comf	___fttol@lval+1,f
   948  0521  09CB               	comf	___fttol@lval+2,f
   949  0522  09CC               	comf	___fttol@lval+3,f
   950  0523  0AC9               	incf	___fttol@lval,f
   951  0524  1903               	skipnz
   952  0525  0ACA               	incf	___fttol@lval+1,f
   953  0526  1903               	skipnz
   954  0527  0ACB               	incf	___fttol@lval+2,f
   955  0528  1903               	skipnz
   956  0529  0ACC               	incf	___fttol@lval+3,f
   957  052A                     l971:	
   958  052A  084C               	movf	___fttol@lval+3,w
   959  052B  00C3               	movwf	?___fttol+3
   960  052C  084B               	movf	___fttol@lval+2,w
   961  052D  00C2               	movwf	?___fttol+2
   962  052E  084A               	movf	___fttol@lval+1,w
   963  052F  00C1               	movwf	?___fttol+1
   964  0530  0849               	movf	___fttol@lval,w
   965  0531  00C0               	movwf	?___fttol
   966  0532  0008               	return
   967  0533                     __end_of___fttol:	
   968                           
   969                           	psect	text5
   970  0713                     __ptext5:	
   971 ;; *************** function ___ftmul *****************
   972 ;; Defined at:
   973 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  f1              3   16[BANK0 ] float 
   976 ;;  f2              3   19[BANK0 ] float 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
   979 ;;  sign            1   31[BANK0 ] unsigned char 
   980 ;;  cntr            1   30[BANK0 ] unsigned char 
   981 ;;  exp             1   26[BANK0 ] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  3   16[BANK0 ] float 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       6       0       0       0
   992 ;;      Locals:         0       6       0       0       0
   993 ;;      Temps:          0       4       0       0       0
   994 ;;      Totals:         0      16       0       0       0
   995 ;;Total ram usage:       16 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    1
   998 ;; This function calls:
   999 ;;		___ftpack
  1000 ;; This function is called by:
  1001 ;;		_PWM_Duty
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function ___ftmul
  1007  0713                     ___ftmul:	
  1008                           
  1009                           ;incstack = 0
  1010                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1011  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0715  0830               	movf	___ftmul@f1,w
  1014  0716  00B6               	movwf	??___ftmul
  1015  0717  0831               	movf	___ftmul@f1+1,w
  1016  0718  00B7               	movwf	??___ftmul+1
  1017  0719  0832               	movf	___ftmul@f1+2,w
  1018  071A  00B8               	movwf	??___ftmul+2
  1019  071B  1003               	clrc
  1020  071C  0D37               	rlf	??___ftmul+1,w
  1021  071D  0D38               	rlf	??___ftmul+2,w
  1022  071E  00B9               	movwf	??___ftmul+3
  1023  071F  0839               	movf	??___ftmul+3,w
  1024  0720  00BA               	movwf	___ftmul@exp
  1025  0721  083A               	movf	___ftmul@exp,w
  1026  0722  1D03               	btfss	3,2
  1027  0723  2F2B               	goto	l889
  1028  0724  3000               	movlw	0
  1029  0725  00B0               	movwf	?___ftmul
  1030  0726  3000               	movlw	0
  1031  0727  00B1               	movwf	?___ftmul+1
  1032  0728  3000               	movlw	0
  1033  0729  00B2               	movwf	?___ftmul+2
  1034  072A  0008               	return
  1035  072B                     l889:	
  1036  072B  0833               	movf	___ftmul@f2,w
  1037  072C  00B6               	movwf	??___ftmul
  1038  072D  0834               	movf	___ftmul@f2+1,w
  1039  072E  00B7               	movwf	??___ftmul+1
  1040  072F  0835               	movf	___ftmul@f2+2,w
  1041  0730  00B8               	movwf	??___ftmul+2
  1042  0731  1003               	clrc
  1043  0732  0D37               	rlf	??___ftmul+1,w
  1044  0733  0D38               	rlf	??___ftmul+2,w
  1045  0734  00B9               	movwf	??___ftmul+3
  1046  0735  0839               	movf	??___ftmul+3,w
  1047  0736  00BF               	movwf	___ftmul@sign
  1048  0737  083F               	movf	___ftmul@sign,w
  1049  0738  1D03               	btfss	3,2
  1050  0739  2F41               	goto	l895
  1051  073A  3000               	movlw	0
  1052  073B  00B0               	movwf	?___ftmul
  1053  073C  3000               	movlw	0
  1054  073D  00B1               	movwf	?___ftmul+1
  1055  073E  3000               	movlw	0
  1056  073F  00B2               	movwf	?___ftmul+2
  1057  0740  0008               	return
  1058  0741                     l895:	
  1059  0741  083F               	movf	___ftmul@sign,w
  1060  0742  3E7B               	addlw	123
  1061  0743  00B6               	movwf	??___ftmul
  1062  0744  0836               	movf	??___ftmul,w
  1063  0745  07BA               	addwf	___ftmul@exp,f
  1064  0746  0830               	movf	___ftmul@f1,w
  1065  0747  00B6               	movwf	??___ftmul
  1066  0748  0831               	movf	___ftmul@f1+1,w
  1067  0749  00B7               	movwf	??___ftmul+1
  1068  074A  0832               	movf	___ftmul@f1+2,w
  1069  074B  00B8               	movwf	??___ftmul+2
  1070  074C  3010               	movlw	16
  1071  074D                     u995:	
  1072  074D  1003               	clrc
  1073  074E  0CB8               	rrf	??___ftmul+2,f
  1074  074F  0CB7               	rrf	??___ftmul+1,f
  1075  0750  0CB6               	rrf	??___ftmul,f
  1076  0751  3EFF               	addlw	-1
  1077  0752  1D03               	skipz
  1078  0753  2F4D               	goto	u995
  1079  0754  0836               	movf	??___ftmul,w
  1080  0755  00B9               	movwf	??___ftmul+3
  1081  0756  0839               	movf	??___ftmul+3,w
  1082  0757  00BF               	movwf	___ftmul@sign
  1083  0758  0833               	movf	___ftmul@f2,w
  1084  0759  00B6               	movwf	??___ftmul
  1085  075A  0834               	movf	___ftmul@f2+1,w
  1086  075B  00B7               	movwf	??___ftmul+1
  1087  075C  0835               	movf	___ftmul@f2+2,w
  1088  075D  00B8               	movwf	??___ftmul+2
  1089  075E  3010               	movlw	16
  1090  075F                     u1005:	
  1091  075F  1003               	clrc
  1092  0760  0CB8               	rrf	??___ftmul+2,f
  1093  0761  0CB7               	rrf	??___ftmul+1,f
  1094  0762  0CB6               	rrf	??___ftmul,f
  1095  0763  3EFF               	addlw	-1
  1096  0764  1D03               	skipz
  1097  0765  2F5F               	goto	u1005
  1098  0766  0836               	movf	??___ftmul,w
  1099  0767  00B9               	movwf	??___ftmul+3
  1100  0768  0839               	movf	??___ftmul+3,w
  1101  0769  06BF               	xorwf	___ftmul@sign,f
  1102  076A  3080               	movlw	128
  1103  076B  00B6               	movwf	??___ftmul
  1104  076C  0836               	movf	??___ftmul,w
  1105  076D  05BF               	andwf	___ftmul@sign,f
  1106  076E  17B1               	bsf	___ftmul@f1+1,7
  1107  076F  17B4               	bsf	___ftmul@f2+1,7
  1108  0770  30FF               	movlw	255
  1109  0771  05B3               	andwf	___ftmul@f2,f
  1110  0772  30FF               	movlw	255
  1111  0773  05B4               	andwf	___ftmul@f2+1,f
  1112  0774  3000               	movlw	0
  1113  0775  05B5               	andwf	___ftmul@f2+2,f
  1114  0776  3000               	movlw	0
  1115  0777  00BB               	movwf	___ftmul@f3_as_product
  1116  0778  3000               	movlw	0
  1117  0779  00BC               	movwf	___ftmul@f3_as_product+1
  1118  077A  3000               	movlw	0
  1119  077B  00BD               	movwf	___ftmul@f3_as_product+2
  1120  077C  3007               	movlw	7
  1121  077D  00B6               	movwf	??___ftmul
  1122  077E  0836               	movf	??___ftmul,w
  1123  077F  00BE               	movwf	___ftmul@cntr
  1124  0780                     l907:	
  1125  0780  1C30               	btfss	___ftmul@f1,0
  1126  0781  2F90               	goto	l911
  1127  0782  0833               	movf	___ftmul@f2,w
  1128  0783  07BB               	addwf	___ftmul@f3_as_product,f
  1129  0784  0834               	movf	___ftmul@f2+1,w
  1130  0785  1103               	clrz
  1131  0786  1803               	skipnc
  1132  0787  0A34               	incf	___ftmul@f2+1,w
  1133  0788  1D03               	btfss	3,2
  1134  0789  07BC               	addwf	___ftmul@f3_as_product+1,f
  1135  078A  0835               	movf	___ftmul@f2+2,w
  1136  078B  1103               	clrz
  1137  078C  1803               	skipnc
  1138  078D  0A35               	incf	___ftmul@f2+2,w
  1139  078E  1D03               	btfss	3,2
  1140  078F  07BD               	addwf	___ftmul@f3_as_product+2,f
  1141  0790                     l911:	
  1142  0790  3001               	movlw	1
  1143  0791                     u1035:	
  1144  0791  1003               	clrc
  1145  0792  0CB2               	rrf	___ftmul@f1+2,f
  1146  0793  0CB1               	rrf	___ftmul@f1+1,f
  1147  0794  0CB0               	rrf	___ftmul@f1,f
  1148  0795  3EFF               	addlw	-1
  1149  0796  1D03               	skipz
  1150  0797  2F91               	goto	u1035
  1151  0798  3001               	movlw	1
  1152  0799                     u1045:	
  1153  0799  1003               	clrc
  1154  079A  0DB3               	rlf	___ftmul@f2,f
  1155  079B  0DB4               	rlf	___ftmul@f2+1,f
  1156  079C  0DB5               	rlf	___ftmul@f2+2,f
  1157  079D  3EFF               	addlw	-1
  1158  079E  1D03               	skipz
  1159  079F  2F99               	goto	u1045
  1160  07A0  3001               	movlw	1
  1161  07A1  02BE               	subwf	___ftmul@cntr,f
  1162  07A2  1D03               	btfss	3,2
  1163  07A3  2F80               	goto	l907
  1164  07A4  3009               	movlw	9
  1165  07A5  00B6               	movwf	??___ftmul
  1166  07A6  0836               	movf	??___ftmul,w
  1167  07A7  00BE               	movwf	___ftmul@cntr
  1168  07A8                     l919:	
  1169  07A8  1C30               	btfss	___ftmul@f1,0
  1170  07A9  2FB8               	goto	l923
  1171  07AA  0833               	movf	___ftmul@f2,w
  1172  07AB  07BB               	addwf	___ftmul@f3_as_product,f
  1173  07AC  0834               	movf	___ftmul@f2+1,w
  1174  07AD  1103               	clrz
  1175  07AE  1803               	skipnc
  1176  07AF  0A34               	incf	___ftmul@f2+1,w
  1177  07B0  1D03               	btfss	3,2
  1178  07B1  07BC               	addwf	___ftmul@f3_as_product+1,f
  1179  07B2  0835               	movf	___ftmul@f2+2,w
  1180  07B3  1103               	clrz
  1181  07B4  1803               	skipnc
  1182  07B5  0A35               	incf	___ftmul@f2+2,w
  1183  07B6  1D03               	btfss	3,2
  1184  07B7  07BD               	addwf	___ftmul@f3_as_product+2,f
  1185  07B8                     l923:	
  1186  07B8  3001               	movlw	1
  1187  07B9                     u1085:	
  1188  07B9  1003               	clrc
  1189  07BA  0CB2               	rrf	___ftmul@f1+2,f
  1190  07BB  0CB1               	rrf	___ftmul@f1+1,f
  1191  07BC  0CB0               	rrf	___ftmul@f1,f
  1192  07BD  3EFF               	addlw	-1
  1193  07BE  1D03               	skipz
  1194  07BF  2FB9               	goto	u1085
  1195  07C0  3001               	movlw	1
  1196  07C1                     u1095:	
  1197  07C1  1003               	clrc
  1198  07C2  0CBD               	rrf	___ftmul@f3_as_product+2,f
  1199  07C3  0CBC               	rrf	___ftmul@f3_as_product+1,f
  1200  07C4  0CBB               	rrf	___ftmul@f3_as_product,f
  1201  07C5  3EFF               	addlw	-1
  1202  07C6  1D03               	skipz
  1203  07C7  2FC1               	goto	u1095
  1204  07C8  3001               	movlw	1
  1205  07C9  02BE               	subwf	___ftmul@cntr,f
  1206  07CA  1D03               	btfss	3,2
  1207  07CB  2FA8               	goto	l919
  1208  07CC  083B               	movf	___ftmul@f3_as_product,w
  1209  07CD  00F0               	movwf	___ftpack@arg
  1210  07CE  083C               	movf	___ftmul@f3_as_product+1,w
  1211  07CF  00F1               	movwf	___ftpack@arg+1
  1212  07D0  083D               	movf	___ftmul@f3_as_product+2,w
  1213  07D1  00F2               	movwf	___ftpack@arg+2
  1214  07D2  083A               	movf	___ftmul@exp,w
  1215  07D3  00B6               	movwf	??___ftmul
  1216  07D4  0836               	movf	??___ftmul,w
  1217  07D5  00F3               	movwf	___ftpack@exp
  1218  07D6  083F               	movf	___ftmul@sign,w
  1219  07D7  00B7               	movwf	??___ftmul+1
  1220  07D8  0837               	movf	??___ftmul+1,w
  1221  07D9  00F4               	movwf	___ftpack@sign
  1222  07DA  120A  118A  2439   	fcall	___ftpack
  1223  07DD  0870               	movf	?___ftpack,w
  1224  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1225  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1226  07E0  00B0               	movwf	?___ftmul
  1227  07E1  0871               	movf	?___ftpack+1,w
  1228  07E2  00B1               	movwf	?___ftmul+1
  1229  07E3  0872               	movf	?___ftpack+2,w
  1230  07E4  00B2               	movwf	?___ftmul+2
  1231  07E5  0008               	return
  1232  07E6                     __end_of___ftmul:	
  1233                           
  1234                           	psect	text6
  1235  065B                     __ptext6:	
  1236 ;; *************** function ___ftdiv *****************
  1237 ;; Defined at:
  1238 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  f2              3    0[BANK0 ] float 
  1241 ;;  f1              3    3[BANK0 ] float 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  f3              3   11[BANK0 ] float 
  1244 ;;  sign            1   15[BANK0 ] unsigned char 
  1245 ;;  exp             1   14[BANK0 ] unsigned char 
  1246 ;;  cntr            1   10[BANK0 ] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  3    0[BANK0 ] float 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0, pclath, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         0       6       0       0       0
  1257 ;;      Locals:         0       6       0       0       0
  1258 ;;      Temps:          0       4       0       0       0
  1259 ;;      Totals:         0      16       0       0       0
  1260 ;;Total ram usage:       16 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    1
  1263 ;; This function calls:
  1264 ;;		___ftpack
  1265 ;; This function is called by:
  1266 ;;		_PWM_Duty
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function ___ftdiv
  1272  065B                     ___ftdiv:	
  1273                           
  1274                           ;incstack = 0
  1275                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1276  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1277  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1278  065D  0823               	movf	___ftdiv@f1,w
  1279  065E  00A6               	movwf	??___ftdiv
  1280  065F  0824               	movf	___ftdiv@f1+1,w
  1281  0660  00A7               	movwf	??___ftdiv+1
  1282  0661  0825               	movf	___ftdiv@f1+2,w
  1283  0662  00A8               	movwf	??___ftdiv+2
  1284  0663  1003               	clrc
  1285  0664  0D27               	rlf	??___ftdiv+1,w
  1286  0665  0D28               	rlf	??___ftdiv+2,w
  1287  0666  00A9               	movwf	??___ftdiv+3
  1288  0667  0829               	movf	??___ftdiv+3,w
  1289  0668  00AE               	movwf	___ftdiv@exp
  1290  0669  082E               	movf	___ftdiv@exp,w
  1291  066A  1D03               	btfss	3,2
  1292  066B  2E73               	goto	l847
  1293  066C  3000               	movlw	0
  1294  066D  00A0               	movwf	?___ftdiv
  1295  066E  3000               	movlw	0
  1296  066F  00A1               	movwf	?___ftdiv+1
  1297  0670  3000               	movlw	0
  1298  0671  00A2               	movwf	?___ftdiv+2
  1299  0672  0008               	return
  1300  0673                     l847:	
  1301  0673  0820               	movf	___ftdiv@f2,w
  1302  0674  00A6               	movwf	??___ftdiv
  1303  0675  0821               	movf	___ftdiv@f2+1,w
  1304  0676  00A7               	movwf	??___ftdiv+1
  1305  0677  0822               	movf	___ftdiv@f2+2,w
  1306  0678  00A8               	movwf	??___ftdiv+2
  1307  0679  1003               	clrc
  1308  067A  0D27               	rlf	??___ftdiv+1,w
  1309  067B  0D28               	rlf	??___ftdiv+2,w
  1310  067C  00A9               	movwf	??___ftdiv+3
  1311  067D  0829               	movf	??___ftdiv+3,w
  1312  067E  00AF               	movwf	___ftdiv@sign
  1313  067F  082F               	movf	___ftdiv@sign,w
  1314  0680  1D03               	btfss	3,2
  1315  0681  2E89               	goto	l853
  1316  0682  3000               	movlw	0
  1317  0683  00A0               	movwf	?___ftdiv
  1318  0684  3000               	movlw	0
  1319  0685  00A1               	movwf	?___ftdiv+1
  1320  0686  3000               	movlw	0
  1321  0687  00A2               	movwf	?___ftdiv+2
  1322  0688  0008               	return
  1323  0689                     l853:	
  1324  0689  3000               	movlw	0
  1325  068A  00AB               	movwf	___ftdiv@f3
  1326  068B  3000               	movlw	0
  1327  068C  00AC               	movwf	___ftdiv@f3+1
  1328  068D  3000               	movlw	0
  1329  068E  00AD               	movwf	___ftdiv@f3+2
  1330  068F  3089               	movlw	137
  1331  0690  072F               	addwf	___ftdiv@sign,w
  1332  0691  00A6               	movwf	??___ftdiv
  1333  0692  0826               	movf	??___ftdiv,w
  1334  0693  02AE               	subwf	___ftdiv@exp,f
  1335  0694  0823               	movf	___ftdiv@f1,w
  1336  0695  00A6               	movwf	??___ftdiv
  1337  0696  0824               	movf	___ftdiv@f1+1,w
  1338  0697  00A7               	movwf	??___ftdiv+1
  1339  0698  0825               	movf	___ftdiv@f1+2,w
  1340  0699  00A8               	movwf	??___ftdiv+2
  1341  069A  3010               	movlw	16
  1342  069B                     u915:	
  1343  069B  1003               	clrc
  1344  069C  0CA8               	rrf	??___ftdiv+2,f
  1345  069D  0CA7               	rrf	??___ftdiv+1,f
  1346  069E  0CA6               	rrf	??___ftdiv,f
  1347  069F  3EFF               	addlw	-1
  1348  06A0  1D03               	skipz
  1349  06A1  2E9B               	goto	u915
  1350  06A2  0826               	movf	??___ftdiv,w
  1351  06A3  00A9               	movwf	??___ftdiv+3
  1352  06A4  0829               	movf	??___ftdiv+3,w
  1353  06A5  00AF               	movwf	___ftdiv@sign
  1354  06A6  0820               	movf	___ftdiv@f2,w
  1355  06A7  00A6               	movwf	??___ftdiv
  1356  06A8  0821               	movf	___ftdiv@f2+1,w
  1357  06A9  00A7               	movwf	??___ftdiv+1
  1358  06AA  0822               	movf	___ftdiv@f2+2,w
  1359  06AB  00A8               	movwf	??___ftdiv+2
  1360  06AC  3010               	movlw	16
  1361  06AD                     u925:	
  1362  06AD  1003               	clrc
  1363  06AE  0CA8               	rrf	??___ftdiv+2,f
  1364  06AF  0CA7               	rrf	??___ftdiv+1,f
  1365  06B0  0CA6               	rrf	??___ftdiv,f
  1366  06B1  3EFF               	addlw	-1
  1367  06B2  1D03               	skipz
  1368  06B3  2EAD               	goto	u925
  1369  06B4  0826               	movf	??___ftdiv,w
  1370  06B5  00A9               	movwf	??___ftdiv+3
  1371  06B6  0829               	movf	??___ftdiv+3,w
  1372  06B7  06AF               	xorwf	___ftdiv@sign,f
  1373  06B8  3080               	movlw	128
  1374  06B9  00A6               	movwf	??___ftdiv
  1375  06BA  0826               	movf	??___ftdiv,w
  1376  06BB  05AF               	andwf	___ftdiv@sign,f
  1377  06BC  17A4               	bsf	___ftdiv@f1+1,7
  1378  06BD  30FF               	movlw	255
  1379  06BE  05A3               	andwf	___ftdiv@f1,f
  1380  06BF  30FF               	movlw	255
  1381  06C0  05A4               	andwf	___ftdiv@f1+1,f
  1382  06C1  3000               	movlw	0
  1383  06C2  05A5               	andwf	___ftdiv@f1+2,f
  1384  06C3  17A1               	bsf	___ftdiv@f2+1,7
  1385  06C4  30FF               	movlw	255
  1386  06C5  05A0               	andwf	___ftdiv@f2,f
  1387  06C6  30FF               	movlw	255
  1388  06C7  05A1               	andwf	___ftdiv@f2+1,f
  1389  06C8  3000               	movlw	0
  1390  06C9  05A2               	andwf	___ftdiv@f2+2,f
  1391  06CA  3018               	movlw	24
  1392  06CB  00A6               	movwf	??___ftdiv
  1393  06CC  0826               	movf	??___ftdiv,w
  1394  06CD  00AA               	movwf	___ftdiv@cntr
  1395  06CE                     l867:	
  1396  06CE  3001               	movlw	1
  1397  06CF                     u935:	
  1398  06CF  1003               	clrc
  1399  06D0  0DAB               	rlf	___ftdiv@f3,f
  1400  06D1  0DAC               	rlf	___ftdiv@f3+1,f
  1401  06D2  0DAD               	rlf	___ftdiv@f3+2,f
  1402  06D3  3EFF               	addlw	-1
  1403  06D4  1D03               	skipz
  1404  06D5  2ECF               	goto	u935
  1405  06D6  0822               	movf	___ftdiv@f2+2,w
  1406  06D7  0225               	subwf	___ftdiv@f1+2,w
  1407  06D8  1D03               	skipz
  1408  06D9  2EE0               	goto	u945
  1409  06DA  0821               	movf	___ftdiv@f2+1,w
  1410  06DB  0224               	subwf	___ftdiv@f1+1,w
  1411  06DC  1D03               	skipz
  1412  06DD  2EE0               	goto	u945
  1413  06DE  0820               	movf	___ftdiv@f2,w
  1414  06DF  0223               	subwf	___ftdiv@f1,w
  1415  06E0                     u945:	
  1416  06E0  1C03               	skipc
  1417  06E1  2EED               	goto	l875
  1418  06E2  0820               	movf	___ftdiv@f2,w
  1419  06E3  02A3               	subwf	___ftdiv@f1,f
  1420  06E4  0821               	movf	___ftdiv@f2+1,w
  1421  06E5  1C03               	skipc
  1422  06E6  0F21               	incfsz	___ftdiv@f2+1,w
  1423  06E7  02A4               	subwf	___ftdiv@f1+1,f
  1424  06E8  0822               	movf	___ftdiv@f2+2,w
  1425  06E9  1C03               	skipc
  1426  06EA  0A22               	incf	___ftdiv@f2+2,w
  1427  06EB  02A5               	subwf	___ftdiv@f1+2,f
  1428  06EC  142B               	bsf	___ftdiv@f3,0
  1429  06ED                     l875:	
  1430  06ED  3001               	movlw	1
  1431  06EE                     u955:	
  1432  06EE  1003               	clrc
  1433  06EF  0DA3               	rlf	___ftdiv@f1,f
  1434  06F0  0DA4               	rlf	___ftdiv@f1+1,f
  1435  06F1  0DA5               	rlf	___ftdiv@f1+2,f
  1436  06F2  3EFF               	addlw	-1
  1437  06F3  1D03               	skipz
  1438  06F4  2EEE               	goto	u955
  1439  06F5  3001               	movlw	1
  1440  06F6  02AA               	subwf	___ftdiv@cntr,f
  1441  06F7  1D03               	btfss	3,2
  1442  06F8  2ECE               	goto	l867
  1443  06F9  082B               	movf	___ftdiv@f3,w
  1444  06FA  00F0               	movwf	___ftpack@arg
  1445  06FB  082C               	movf	___ftdiv@f3+1,w
  1446  06FC  00F1               	movwf	___ftpack@arg+1
  1447  06FD  082D               	movf	___ftdiv@f3+2,w
  1448  06FE  00F2               	movwf	___ftpack@arg+2
  1449  06FF  082E               	movf	___ftdiv@exp,w
  1450  0700  00A6               	movwf	??___ftdiv
  1451  0701  0826               	movf	??___ftdiv,w
  1452  0702  00F3               	movwf	___ftpack@exp
  1453  0703  082F               	movf	___ftdiv@sign,w
  1454  0704  00A7               	movwf	??___ftdiv+1
  1455  0705  0827               	movf	??___ftdiv+1,w
  1456  0706  00F4               	movwf	___ftpack@sign
  1457  0707  120A  118A  2439   	fcall	___ftpack
  1458  070A  0870               	movf	?___ftpack,w
  1459  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1460  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1461  070D  00A0               	movwf	?___ftdiv
  1462  070E  0871               	movf	?___ftpack+1,w
  1463  070F  00A1               	movwf	?___ftdiv+1
  1464  0710  0872               	movf	?___ftpack+2,w
  1465  0711  00A2               	movwf	?___ftdiv+2
  1466  0712  0008               	return
  1467  0713                     __end_of___ftdiv:	
  1468                           
  1469                           	psect	text7
  1470  03F7                     __ptext7:	
  1471 ;; *************** function ___altoft *****************
  1472 ;; Defined at:
  1473 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\altoft.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  c               4    6[BANK0 ] long 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  sign            1   12[COMMON] unsigned char 
  1478 ;;  exp             1   11[COMMON] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  3    6[BANK0 ] float 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       4       0       0       0
  1489 ;;      Locals:         2       0       0       0       0
  1490 ;;      Temps:          2       0       0       0       0
  1491 ;;      Totals:         4       4       0       0       0
  1492 ;;Total ram usage:        8 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    1
  1495 ;; This function calls:
  1496 ;;		___ftpack
  1497 ;; This function is called by:
  1498 ;;		_PWM_Duty
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function ___altoft
  1504  03F7                     ___altoft:	
  1505                           
  1506                           ;incstack = 0
  1507                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  1508  03F7  01FC               	clrf	___altoft@sign
  1509  03F8  308E               	movlw	142
  1510  03F9  00F9               	movwf	??___altoft
  1511  03FA  0879               	movf	??___altoft,w
  1512  03FB  00FB               	movwf	___altoft@exp
  1513  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1514  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1515  03FE  1FA9               	btfss	___altoft@c+3,7
  1516  03FF  2C0D               	goto	l835
  1517  0400  09A6               	comf	___altoft@c,f
  1518  0401  09A7               	comf	___altoft@c+1,f
  1519  0402  09A8               	comf	___altoft@c+2,f
  1520  0403  09A9               	comf	___altoft@c+3,f
  1521  0404  0AA6               	incf	___altoft@c,f
  1522  0405  1903               	skipnz
  1523  0406  0AA7               	incf	___altoft@c+1,f
  1524  0407  1903               	skipnz
  1525  0408  0AA8               	incf	___altoft@c+2,f
  1526  0409  1903               	skipnz
  1527  040A  0AA9               	incf	___altoft@c+3,f
  1528  040B  01FC               	clrf	___altoft@sign
  1529  040C  0AFC               	incf	___altoft@sign,f
  1530  040D                     l835:	
  1531  040D  30FF               	movlw	255
  1532  040E  0529               	andwf	___altoft@c+3,w
  1533  040F  1903               	btfsc	3,2
  1534  0410  2C1F               	goto	l837
  1535  0411  3001               	movlw	1
  1536  0412                     u875:	
  1537  0412  1003               	clrc
  1538  0413  0CA9               	rrf	___altoft@c+3,f
  1539  0414  0CA8               	rrf	___altoft@c+2,f
  1540  0415  0CA7               	rrf	___altoft@c+1,f
  1541  0416  0CA6               	rrf	___altoft@c,f
  1542  0417  3EFF               	addlw	-1
  1543  0418  1D03               	skipz
  1544  0419  2C12               	goto	u875
  1545  041A  3001               	movlw	1
  1546  041B  00F9               	movwf	??___altoft
  1547  041C  0879               	movf	??___altoft,w
  1548  041D  07FB               	addwf	___altoft@exp,f
  1549  041E  2C0D               	goto	l835
  1550  041F                     l837:	
  1551  041F  0826               	movf	___altoft@c,w
  1552  0420  00F0               	movwf	___ftpack@arg
  1553  0421  0827               	movf	___altoft@c+1,w
  1554  0422  00F1               	movwf	___ftpack@arg+1
  1555  0423  0828               	movf	___altoft@c+2,w
  1556  0424  00F2               	movwf	___ftpack@arg+2
  1557  0425  087B               	movf	___altoft@exp,w
  1558  0426  00F9               	movwf	??___altoft
  1559  0427  0879               	movf	??___altoft,w
  1560  0428  00F3               	movwf	___ftpack@exp
  1561  0429  087C               	movf	___altoft@sign,w
  1562  042A  00FA               	movwf	??___altoft+1
  1563  042B  087A               	movf	??___altoft+1,w
  1564  042C  00F4               	movwf	___ftpack@sign
  1565  042D  120A  118A  2439   	fcall	___ftpack
  1566  0430  0870               	movf	?___ftpack,w
  1567  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0433  00A6               	movwf	?___altoft
  1570  0434  0871               	movf	?___ftpack+1,w
  1571  0435  00A7               	movwf	?___altoft+1
  1572  0436  0872               	movf	?___ftpack+2,w
  1573  0437  00A8               	movwf	?___altoft+2
  1574  0438  0008               	return
  1575  0439                     __end_of___altoft:	
  1576                           
  1577                           	psect	text8
  1578  0439                     __ptext8:	
  1579 ;; *************** function ___ftpack *****************
  1580 ;; Defined at:
  1581 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  arg             3    0[COMMON] unsigned um
  1584 ;;  exp             1    3[COMMON] unsigned char 
  1585 ;;  sign            1    4[COMMON] unsigned char 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  3    0[COMMON] float 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         5       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0
  1599 ;;      Temps:          3       0       0       0       0
  1600 ;;      Totals:         8       0       0       0       0
  1601 ;;Total ram usage:        8 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		___altoft
  1607 ;;		___ftdiv
  1608 ;;		___ftmul
  1609 ;;		___lwtoft
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function ___ftpack
  1615  0439                     ___ftpack:	
  1616                           
  1617                           ;incstack = 0
  1618                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1619  0439  0873               	movf	___ftpack@exp,w
  1620  043A  1903               	btfsc	3,2
  1621  043B  2C41               	goto	l757
  1622  043C  0872               	movf	___ftpack@arg+2,w
  1623  043D  0471               	iorwf	___ftpack@arg+1,w
  1624  043E  0470               	iorwf	___ftpack@arg,w
  1625  043F  1D03               	skipz
  1626  0440  2C54               	goto	l763
  1627  0441                     l757:	
  1628  0441  3000               	movlw	0
  1629  0442  00F0               	movwf	?___ftpack
  1630  0443  3000               	movlw	0
  1631  0444  00F1               	movwf	?___ftpack+1
  1632  0445  3000               	movlw	0
  1633  0446  00F2               	movwf	?___ftpack+2
  1634  0447  0008               	return
  1635  0448                     l761:	
  1636  0448  3001               	movlw	1
  1637  0449  00F5               	movwf	??___ftpack
  1638  044A  0875               	movf	??___ftpack,w
  1639  044B  07F3               	addwf	___ftpack@exp,f
  1640  044C  3001               	movlw	1
  1641  044D                     u665:	
  1642  044D  1003               	clrc
  1643  044E  0CF2               	rrf	___ftpack@arg+2,f
  1644  044F  0CF1               	rrf	___ftpack@arg+1,f
  1645  0450  0CF0               	rrf	___ftpack@arg,f
  1646  0451  3EFF               	addlw	-1
  1647  0452  1D03               	skipz
  1648  0453  2C4D               	goto	u665
  1649  0454                     l763:	
  1650  0454  30FE               	movlw	254
  1651  0455  0572               	andwf	___ftpack@arg+2,w
  1652  0456  1903               	btfsc	3,2
  1653  0457  2C6F               	goto	l284
  1654  0458  2C48               	goto	l761
  1655  0459                     l765:	
  1656  0459  3001               	movlw	1
  1657  045A  00F5               	movwf	??___ftpack
  1658  045B  0875               	movf	??___ftpack,w
  1659  045C  07F3               	addwf	___ftpack@exp,f
  1660  045D  3001               	movlw	1
  1661  045E  07F0               	addwf	___ftpack@arg,f
  1662  045F  3000               	movlw	0
  1663  0460  1803               	skipnc
  1664  0461  3001               	movlw	1
  1665  0462  07F1               	addwf	___ftpack@arg+1,f
  1666  0463  3000               	movlw	0
  1667  0464  1803               	skipnc
  1668  0465  3001               	movlw	1
  1669  0466  07F2               	addwf	___ftpack@arg+2,f
  1670  0467  3001               	movlw	1
  1671  0468                     u685:	
  1672  0468  1003               	clrc
  1673  0469  0CF2               	rrf	___ftpack@arg+2,f
  1674  046A  0CF1               	rrf	___ftpack@arg+1,f
  1675  046B  0CF0               	rrf	___ftpack@arg,f
  1676  046C  3EFF               	addlw	-1
  1677  046D  1D03               	skipz
  1678  046E  2C68               	goto	u685
  1679  046F                     l284:	
  1680  046F  30FF               	movlw	255
  1681  0470  0572               	andwf	___ftpack@arg+2,w
  1682  0471  1903               	btfsc	3,2
  1683  0472  2C7E               	goto	l773
  1684  0473  2C59               	goto	l765
  1685  0474                     l771:	
  1686  0474  3001               	movlw	1
  1687  0475  02F3               	subwf	___ftpack@exp,f
  1688  0476  3001               	movlw	1
  1689  0477                     u705:	
  1690  0477  1003               	clrc
  1691  0478  0DF0               	rlf	___ftpack@arg,f
  1692  0479  0DF1               	rlf	___ftpack@arg+1,f
  1693  047A  0DF2               	rlf	___ftpack@arg+2,f
  1694  047B  3EFF               	addlw	-1
  1695  047C  1D03               	skipz
  1696  047D  2C77               	goto	u705
  1697  047E                     l773:	
  1698  047E  1BF1               	btfsc	___ftpack@arg+1,7
  1699  047F  2C84               	goto	l291
  1700  0480  3002               	movlw	2
  1701  0481  0273               	subwf	___ftpack@exp,w
  1702  0482  1803               	skipnc
  1703  0483  2C74               	goto	l771
  1704  0484                     l291:	
  1705  0484  1873               	btfsc	___ftpack@exp,0
  1706  0485  2C8C               	goto	l292
  1707  0486  30FF               	movlw	255
  1708  0487  05F0               	andwf	___ftpack@arg,f
  1709  0488  307F               	movlw	127
  1710  0489  05F1               	andwf	___ftpack@arg+1,f
  1711  048A  30FF               	movlw	255
  1712  048B  05F2               	andwf	___ftpack@arg+2,f
  1713  048C                     l292:	
  1714  048C  1003               	clrc
  1715  048D  0CF3               	rrf	___ftpack@exp,f
  1716  048E  0873               	movf	___ftpack@exp,w
  1717  048F  00F5               	movwf	??___ftpack
  1718  0490  01F6               	clrf	??___ftpack+1
  1719  0491  01F7               	clrf	??___ftpack+2
  1720  0492  3010               	movlw	16
  1721  0493                     u745:	
  1722  0493  1003               	clrc
  1723  0494  0DF5               	rlf	??___ftpack,f
  1724  0495  0DF6               	rlf	??___ftpack+1,f
  1725  0496  0DF7               	rlf	??___ftpack+2,f
  1726  0497  3EFF               	addlw	-1
  1727  0498  1D03               	skipz
  1728  0499  2C93               	goto	u745
  1729  049A  0875               	movf	??___ftpack,w
  1730  049B  04F0               	iorwf	___ftpack@arg,f
  1731  049C  0876               	movf	??___ftpack+1,w
  1732  049D  04F1               	iorwf	___ftpack@arg+1,f
  1733  049E  0877               	movf	??___ftpack+2,w
  1734  049F  04F2               	iorwf	___ftpack@arg+2,f
  1735  04A0  0874               	movf	___ftpack@sign,w
  1736  04A1  1903               	btfsc	3,2
  1737  04A2  0008               	return
  1738  04A3  17F2               	bsf	___ftpack@arg+2,7
  1739  04A4  0008               	return
  1740  04A5                     __end_of___ftpack:	
  1741                           
  1742                           	psect	text9
  1743  0533                     __ptext9:	
  1744 ;; *************** function ___aldiv *****************
  1745 ;; Defined at:
  1746 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  divisor         4    0[COMMON] long 
  1749 ;;  dividend        4    4[COMMON] long 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  quotient        4    2[BANK0 ] long 
  1752 ;;  sign            1    1[BANK0 ] unsigned char 
  1753 ;;  counter         1    0[BANK0 ] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  4    0[COMMON] long 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1763 ;;      Params:         8       0       0       0       0
  1764 ;;      Locals:         0       6       0       0       0
  1765 ;;      Temps:          1       0       0       0       0
  1766 ;;      Totals:         9       6       0       0       0
  1767 ;;Total ram usage:       15 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_PWM_Init
  1773 ;;		_PWM_Duty
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function ___aldiv
  1779  0533                     ___aldiv:	
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1783  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0535  01A1               	clrf	___aldiv@sign
  1786  0536  1FF3               	btfss	___aldiv@divisor+3,7
  1787  0537  2D45               	goto	l178
  1788  0538  09F0               	comf	___aldiv@divisor,f
  1789  0539  09F1               	comf	___aldiv@divisor+1,f
  1790  053A  09F2               	comf	___aldiv@divisor+2,f
  1791  053B  09F3               	comf	___aldiv@divisor+3,f
  1792  053C  0AF0               	incf	___aldiv@divisor,f
  1793  053D  1903               	skipnz
  1794  053E  0AF1               	incf	___aldiv@divisor+1,f
  1795  053F  1903               	skipnz
  1796  0540  0AF2               	incf	___aldiv@divisor+2,f
  1797  0541  1903               	skipnz
  1798  0542  0AF3               	incf	___aldiv@divisor+3,f
  1799  0543  01A1               	clrf	___aldiv@sign
  1800  0544  0AA1               	incf	___aldiv@sign,f
  1801  0545                     l178:	
  1802  0545  1FF7               	btfss	___aldiv@dividend+3,7
  1803  0546  2D56               	goto	l795
  1804  0547  09F4               	comf	___aldiv@dividend,f
  1805  0548  09F5               	comf	___aldiv@dividend+1,f
  1806  0549  09F6               	comf	___aldiv@dividend+2,f
  1807  054A  09F7               	comf	___aldiv@dividend+3,f
  1808  054B  0AF4               	incf	___aldiv@dividend,f
  1809  054C  1903               	skipnz
  1810  054D  0AF5               	incf	___aldiv@dividend+1,f
  1811  054E  1903               	skipnz
  1812  054F  0AF6               	incf	___aldiv@dividend+2,f
  1813  0550  1903               	skipnz
  1814  0551  0AF7               	incf	___aldiv@dividend+3,f
  1815  0552  3001               	movlw	1
  1816  0553  00F8               	movwf	??___aldiv
  1817  0554  0878               	movf	??___aldiv,w
  1818  0555  06A1               	xorwf	___aldiv@sign,f
  1819  0556                     l795:	
  1820  0556  3000               	movlw	0
  1821  0557  00A5               	movwf	___aldiv@quotient+3
  1822  0558  3000               	movlw	0
  1823  0559  00A4               	movwf	___aldiv@quotient+2
  1824  055A  3000               	movlw	0
  1825  055B  00A3               	movwf	___aldiv@quotient+1
  1826  055C  3000               	movlw	0
  1827  055D  00A2               	movwf	___aldiv@quotient
  1828  055E  0873               	movf	___aldiv@divisor+3,w
  1829  055F  0472               	iorwf	___aldiv@divisor+2,w
  1830  0560  0471               	iorwf	___aldiv@divisor+1,w
  1831  0561  0470               	iorwf	___aldiv@divisor,w
  1832  0562  1903               	skipnz
  1833  0563  2DAB               	goto	l817
  1834  0564  01A0               	clrf	___aldiv@counter
  1835  0565  0AA0               	incf	___aldiv@counter,f
  1836  0566                     l803:	
  1837  0566  1BF3               	btfsc	___aldiv@divisor+3,7
  1838  0567  2D76               	goto	l805
  1839  0568  3001               	movlw	1
  1840  0569  00F8               	movwf	??___aldiv
  1841  056A                     u795:	
  1842  056A  1003               	clrc
  1843  056B  0DF0               	rlf	___aldiv@divisor,f
  1844  056C  0DF1               	rlf	___aldiv@divisor+1,f
  1845  056D  0DF2               	rlf	___aldiv@divisor+2,f
  1846  056E  0DF3               	rlf	___aldiv@divisor+3,f
  1847  056F  0BF8               	decfsz	??___aldiv,f
  1848  0570  2D6A               	goto	u795
  1849  0571  3001               	movlw	1
  1850  0572  00F8               	movwf	??___aldiv
  1851  0573  0878               	movf	??___aldiv,w
  1852  0574  07A0               	addwf	___aldiv@counter,f
  1853  0575  2D66               	goto	l803
  1854  0576                     l805:	
  1855  0576  3001               	movlw	1
  1856  0577  00F8               	movwf	??___aldiv
  1857  0578                     u815:	
  1858  0578  1003               	clrc
  1859  0579  0DA2               	rlf	___aldiv@quotient,f
  1860  057A  0DA3               	rlf	___aldiv@quotient+1,f
  1861  057B  0DA4               	rlf	___aldiv@quotient+2,f
  1862  057C  0DA5               	rlf	___aldiv@quotient+3,f
  1863  057D  0BF8               	decfsz	??___aldiv,f
  1864  057E  2D78               	goto	u815
  1865  057F  0873               	movf	___aldiv@divisor+3,w
  1866  0580  0277               	subwf	___aldiv@dividend+3,w
  1867  0581  1D03               	skipz
  1868  0582  2D8D               	goto	u825
  1869  0583  0872               	movf	___aldiv@divisor+2,w
  1870  0584  0276               	subwf	___aldiv@dividend+2,w
  1871  0585  1D03               	skipz
  1872  0586  2D8D               	goto	u825
  1873  0587  0871               	movf	___aldiv@divisor+1,w
  1874  0588  0275               	subwf	___aldiv@dividend+1,w
  1875  0589  1D03               	skipz
  1876  058A  2D8D               	goto	u825
  1877  058B  0870               	movf	___aldiv@divisor,w
  1878  058C  0274               	subwf	___aldiv@dividend,w
  1879  058D                     u825:	
  1880  058D  1C03               	skipc
  1881  058E  2D9E               	goto	l813
  1882  058F  0870               	movf	___aldiv@divisor,w
  1883  0590  02F4               	subwf	___aldiv@dividend,f
  1884  0591  0871               	movf	___aldiv@divisor+1,w
  1885  0592  1C03               	skipc
  1886  0593  0F71               	incfsz	___aldiv@divisor+1,w
  1887  0594  02F5               	subwf	___aldiv@dividend+1,f
  1888  0595  0872               	movf	___aldiv@divisor+2,w
  1889  0596  1C03               	skipc
  1890  0597  0F72               	incfsz	___aldiv@divisor+2,w
  1891  0598  02F6               	subwf	___aldiv@dividend+2,f
  1892  0599  0873               	movf	___aldiv@divisor+3,w
  1893  059A  1C03               	skipc
  1894  059B  0F73               	incfsz	___aldiv@divisor+3,w
  1895  059C  02F7               	subwf	___aldiv@dividend+3,f
  1896  059D  1422               	bsf	___aldiv@quotient,0
  1897  059E                     l813:	
  1898  059E  3001               	movlw	1
  1899  059F                     u835:	
  1900  059F  1003               	clrc
  1901  05A0  0CF3               	rrf	___aldiv@divisor+3,f
  1902  05A1  0CF2               	rrf	___aldiv@divisor+2,f
  1903  05A2  0CF1               	rrf	___aldiv@divisor+1,f
  1904  05A3  0CF0               	rrf	___aldiv@divisor,f
  1905  05A4  3EFF               	addlw	-1
  1906  05A5  1D03               	skipz
  1907  05A6  2D9F               	goto	u835
  1908  05A7  3001               	movlw	1
  1909  05A8  02A0               	subwf	___aldiv@counter,f
  1910  05A9  1D03               	btfss	3,2
  1911  05AA  2D76               	goto	l805
  1912  05AB                     l817:	
  1913  05AB  0821               	movf	___aldiv@sign,w
  1914  05AC  1903               	btfsc	3,2
  1915  05AD  2DB9               	goto	l821
  1916  05AE  09A2               	comf	___aldiv@quotient,f
  1917  05AF  09A3               	comf	___aldiv@quotient+1,f
  1918  05B0  09A4               	comf	___aldiv@quotient+2,f
  1919  05B1  09A5               	comf	___aldiv@quotient+3,f
  1920  05B2  0AA2               	incf	___aldiv@quotient,f
  1921  05B3  1903               	skipnz
  1922  05B4  0AA3               	incf	___aldiv@quotient+1,f
  1923  05B5  1903               	skipnz
  1924  05B6  0AA4               	incf	___aldiv@quotient+2,f
  1925  05B7  1903               	skipnz
  1926  05B8  0AA5               	incf	___aldiv@quotient+3,f
  1927  05B9                     l821:	
  1928  05B9  0825               	movf	___aldiv@quotient+3,w
  1929  05BA  00F3               	movwf	?___aldiv+3
  1930  05BB  0824               	movf	___aldiv@quotient+2,w
  1931  05BC  00F2               	movwf	?___aldiv+2
  1932  05BD  0823               	movf	___aldiv@quotient+1,w
  1933  05BE  00F1               	movwf	?___aldiv+1
  1934  05BF  0822               	movf	___aldiv@quotient,w
  1935  05C0  00F0               	movwf	?___aldiv
  1936  05C1  0008               	return
  1937  05C2                     __end_of___aldiv:	
  1938  007E                     btemp	set	126	;btemp
  1939  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     52      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_Init
    _PWM_Init->___aldiv
    _PWM_Duty->___altoft
    ___lwtoft->___ftpack
    ___fttol->___altoft
    ___ftmul->___altoft
    ___ftdiv->___lwtoft
    ___altoft->___aldiv

Critical Paths under _main in BANK0

    _main->_PWM_Duty
    _PWM_Init->___aldiv
    _PWM_Duty->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___altoft->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9383
                           _PWM_Duty
                           _PWM_Init
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             4     4      0     512
                                              9 COMMON     4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM_Duty                                             6     4      2    8871
                                             46 BANK0      6     4      2
                            ___aldiv
                           ___altoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1782
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             32 BANK0     14    10      4
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2139
                                             16 BANK0     16    10      6
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2093
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    1898
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_Duty
     ___aldiv
     ___altoft
       ___aldiv (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM_Init
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Jan 27 09:29:07 2018

           ___altoft@exp 007B              __CFG_CP$OFF 0000            ___altoft@sign 007C  
                     l36 03B8                      l178 0545                      l291 0484  
                    l292 048C                      l284 046F                      l375 0519  
                    l803 0566                      l821 05B9                      l813 059E  
                    l805 0576                      l911 0790                      l817 05AB  
                    l761 0448                      l771 0474                      l763 0454  
                    l835 040D                      l923 07B8                      l907 0780  
                    l773 047E                      l765 0459                      l757 0441  
                    l837 041F                      l853 0689                      l847 0673  
                    l919 07A8                      l795 0556                      l875 06ED  
                    l867 06CE                      l971 052A                      l939 04BF  
                    l965 050E                      l957 04F1                      l895 0741  
                    l967 051C                      l959 0501                      l889 072B  
                    l997 064D                      _PR2 0092                      u705 0477  
                    u815 0578                      u825 058D                      u745 0493  
                    u665 044D                      u835 059F                      u915 069B  
                    u685 0468                      u925 06AD                      u935 06CF  
                    u945 06E0                      u795 056A                      u875 0412  
                    u955 06EE                      u995 074D             __CFG_FOSC$HS 0000  
           ___ftdiv@cntr 002A             ___ftdiv@sign 002F                     u1005 075F  
                   u1035 0791                     u1045 0799                     u1125 04C6  
                   u1215 03C4                     u1225 03CD                     u1250 064A  
                   u1155 04F2                     u1085 07B9                     u1245 0600  
                   u1095 07C1                     u1185 0510                     _main 03A2  
                   _freq 0054             ___ftpack@arg 0070             ___ftpack@exp 0073  
                   btemp 007E                     start 0000             ___ftmul@cntr 003E  
           ___ftmul@sign 003F             ___fttol@exp1 004D             ___fttol@lval 0049  
        __end_of___aldiv 05C2                    ?_main 0070                    _CCP1X 00BD  
                  _CCP1Y 00BC            __CFG_WDTE$OFF 0000          __end_of___ftdiv 0713  
        __end_of___ftmul 07E6          __end_of___fttol 0533                    _PORTC 0007  
                  _TRISC 0087            __CFG_PWRTE$ON 0000            ___ftpack@sign 0074  
       __end_of_PWM_Init 03F7         __end_of_PWM_Duty 065B                    status 0003  
                  wtemp0 007E          __initialization 07E6             __end_of_main 03B9  
                 ??_main 007D            ___fttol@sign1 0048                   _CCP1M2 00BA  
                 _CCP1M3 00BB         __end_of___altoft 0439                   _CCPR1L 0015  
       __end_of___ftpack 04A5         __end_of___lwtoft 03A2                   _TRISC2 043A  
              ??___aldiv 0078                ??___ftdiv 0026                ??___ftmul 0036  
              ??___fttol 0044    ___ftmul@f3_as_product 003B             PWM_Duty@duty 004E  
__end_of__initialization 07FC               ___altoft@c 0026               ___ftdiv@f1 0023  
             ___ftdiv@f2 0020               ___ftdiv@f3 002B               ___ftmul@f1 0030  
             ___ftmul@f2 0033               ___fttol@f1 0040           __pcstackCOMMON 0070  
           __pidataBANK0 038A               ___lwtoft@c 0078                ?_PWM_Init 0070  
              ?_PWM_Duty 004E               __pmaintext 03A2                ?___altoft 0026  
              ?___ftpack 0070               ??_PWM_Init 0079               ??_PWM_Duty 0050  
                _T2CKPS0 0090                  _T2CKPS1 0091                ?___lwtoft 0078  
                ___aldiv 0533                  ___ftdiv 065B                  ___ftmul 0713  
                ___fttol 04A5               ??___altoft 0079               ??___ftpack 0075  
                __ptext1 03B9                  __ptext2 05C2                  __ptext3 038E  
                __ptext4 04A5                  __ptext5 0713                  __ptext6 065B  
                __ptext7 03F7                  __ptext8 0439                  __ptext9 0533  
             ??___lwtoft 007B         ___aldiv@dividend 0074     end_of_initialization 07FC  
       ___aldiv@quotient 0022              ___ftdiv@exp 002E              ___ftmul@exp 003A  
      __size_of_PWM_Init 003E      start_initialization 07E6        __size_of_PWM_Duty 0099  
            __pdataBANK0 0054        __size_of___altoft 0042        __size_of___ftpack 006C  
              ___latbits 0002        __size_of___lwtoft 0014            __pcstackBANK0 0020  
               ?___aldiv 0070                 ?___ftdiv 0020                 ?___ftmul 0030  
               ?___fttol 0040          ___aldiv@divisor 0070          ___aldiv@counter 0020  
               _PWM_Init 03B9                 _PWM_Duty 05C2         __size_of___aldiv 008F  
       __size_of___ftdiv 00B8                 ___altoft 03F7         __size_of___ftmul 00D3  
       __size_of___fttol 008E                 ___ftpack 0439                 ___lwtoft 038E  
          __size_of_main 0017             ___aldiv@sign 0021  
