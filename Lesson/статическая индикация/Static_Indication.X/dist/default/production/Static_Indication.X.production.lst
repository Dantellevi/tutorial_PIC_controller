

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Jan 01 22:43:39 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	swtext1,local,class=CONST,delta=2
    13                           	dabs	1,0x4E,2
    14  0000                     
    15                           ; Version 1.44
    16                           ; Generated 14/09/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F84A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  0088                     	;# 
    64  0089                     	;# 
    65  0006                     _PORTB	set	6
    66  002A                     _RA2	set	42
    67  0085                     _TRISA	set	133
    68  0086                     _TRISB	set	134
    69                           
    70                           ; #config settings
    71  0000                     
    72                           	psect	cinit
    73  03FC                     start_initialization:	
    74  03FC                     __initialization:	
    75                           
    76                           ; Clear objects allocated to BANK0
    77  03FC  1283               	bcf	3,5	;RP0=0, select bank0
    78  03FD  0191               	clrf	__pbssBANK0& (0+127)
    79  03FE                     end_of_initialization:	
    80                           ;End of C runtime variable initialization code
    81                           
    82  03FE                     __end_of__initialization:	
    83  03FE  0183               	clrf	3
    84  03FF  2BAF               	ljmp	_main	;jump to C main() function
    85                           
    86                           	psect	bssBANK0
    87  0011                     __pbssBANK0:	
    88  0011                     _digit:	
    89  0011                     	ds	1
    90                           
    91                           	psect	cstackCOMMON
    92  0000                     __pcstackCOMMON:	
    93  0000                     ??_Port_init:	
    94  0000                     ??_OutputChar:	
    95                           ; 1 bytes @ 0x0
    96                           
    97  0000                     ??_check_Button:	
    98                           ; 1 bytes @ 0x0
    99                           
   100                           
   101                           	psect	cstackBANK0
   102  000C                     __pcstackBANK0:	
   103                           ; 1 bytes @ 0x0
   104                           
   105  000C                     ?_Port_init:	
   106  000C                     ?_OutputChar:	
   107                           ; 1 bytes @ 0x0
   108                           
   109  000C                     ?_check_Button:	
   110                           ; 1 bytes @ 0x0
   111                           
   112  000C                     ?_main:	
   113                           ; 1 bytes @ 0x0
   114                           
   115  000C                     OutputChar@digit:	
   116                           ; 1 bytes @ 0x0
   117                           
   118  000C                     check_Button@butcount:	
   119                           ; 1 bytes @ 0x0
   120                           
   121                           
   122                           ; 2 bytes @ 0x0
   123  000C                     	ds	2
   124  000E                     check_Button@result:	
   125                           
   126                           ; 1 bytes @ 0x2
   127  000E                     	ds	1
   128  000F                     ??_main:	
   129                           
   130                           ; 1 bytes @ 0x3
   131  000F                     	ds	2
   132                           
   133                           	psect	maintext
   134  03AF                     __pmaintext:	
   135 ;;
   136 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   137 ;;
   138 ;; *************** function _main *****************
   139 ;; Defined at:
   140 ;;		line 129 in file "main.c"
   141 ;; Parameters:    Size  Location     Type
   142 ;;		None
   143 ;; Auto vars:     Size  Location     Type
   144 ;;		None
   145 ;; Return value:  Size  Location     Type
   146 ;;                  1    wreg      void 
   147 ;; Registers used:
   148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   149 ;; Tracked objects:
   150 ;;		On entry : B00/0
   151 ;;		On exit  : 0/0
   152 ;;		Unchanged: 0/0
   153 ;; Data sizes:     COMMON   BANK0
   154 ;;      Params:         0       0
   155 ;;      Locals:         0       0
   156 ;;      Temps:          0       2
   157 ;;      Totals:         0       2
   158 ;;Total ram usage:        2 bytes
   159 ;; Hardware stack levels required when called:    1
   160 ;; This function calls:
   161 ;;		_OutputChar
   162 ;;		_Port_init
   163 ;;		_check_Button
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           
   170                           ;psect for function _main
   171  03AF                     _main:	
   172                           
   173                           ;main.c: 131: Port_init();
   174                           
   175                           ;incstack = 0
   176                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   177  03AF  2390               	fcall	_Port_init
   178  03B0                     l651:	
   179                           ;main.c: 133: while(1)
   180                           
   181                           
   182                           ;main.c: 134: {
   183                           ;main.c: 135: if(check_Button()==1)
   184  03B0  2397               	fcall	_check_Button
   185  03B1  3A01               	xorlw	1
   186  03B2  1D03               	skipz
   187  03B3  2BC2               	goto	l657
   188                           
   189                           ;main.c: 136: {
   190                           ;main.c: 137: digit++;
   191  03B4  3001               	movlw	1
   192  03B5  1283               	bcf	3,5	;RP0=0, select bank0
   193  03B6  008F               	movwf	??_main
   194  03B7  080F               	movf	??_main,w
   195  03B8  0791               	addwf	_digit,f
   196                           
   197                           ;main.c: 138: _delay((unsigned long)((100)*(4000000/4000.0)));
   198  03B9  3082               	movlw	130
   199  03BA  0090               	movwf	??_main+1
   200  03BB  30DD               	movlw	221
   201  03BC  008F               	movwf	??_main
   202  03BD                     u97:	
   203  03BD  0B8F               	decfsz	??_main,f
   204  03BE  2BBD               	goto	u97
   205  03BF  0B90               	decfsz	??_main+1,f
   206  03C0  2BBD               	goto	u97
   207  03C1  2BC2               	nop2
   208  03C2                     l657:	
   209                           
   210                           ;main.c: 139: }
   211                           ;main.c: 141: OutputChar(digit);
   212  03C2  1283               	bcf	3,5	;RP0=0, select bank0
   213  03C3  0811               	movf	_digit,w
   214  03C4  23CC               	fcall	_OutputChar
   215                           
   216                           ;main.c: 143: if(digit>10)
   217  03C5  300B               	movlw	11
   218  03C6  1283               	bcf	3,5	;RP0=0, select bank0
   219  03C7  0211               	subwf	_digit,w
   220  03C8  1C03               	skipc
   221  03C9  2BB0               	goto	l651
   222                           
   223                           ;main.c: 144: {
   224                           ;main.c: 145: digit=0;
   225  03CA  0191               	clrf	_digit
   226  03CB  2BB0               	goto	l651
   227  03CC                     __end_of_main:	
   228                           
   229                           	psect	text1
   230  0397                     __ptext1:	
   231 ;; *************** function _check_Button *****************
   232 ;; Defined at:
   233 ;;		line 108 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  butcount        2    0[BANK0 ] unsigned int 
   238 ;;  result          1    2[BANK0 ] unsigned char 
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      unsigned char 
   241 ;; Registers used:
   242 ;;		wreg, status,2
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0
   248 ;;      Params:         0       0
   249 ;;      Locals:         0       3
   250 ;;      Temps:          0       0
   251 ;;      Totals:         0       3
   252 ;;Total ram usage:        3 bytes
   253 ;; Hardware stack levels used:    1
   254 ;; This function calls:
   255 ;;		Nothing
   256 ;; This function is called by:
   257 ;;		_main
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           
   262                           ;psect for function _check_Button
   263  0397                     _check_Button:	
   264                           
   265                           ;main.c: 110: unsigned char result=0;
   266                           
   267                           ;incstack = 0
   268                           ; Regs used in _check_Button: [wreg+status,2]
   269  0397  1283               	bcf	3,5	;RP0=0, select bank0
   270  0398  018E               	clrf	check_Button@result
   271                           
   272                           ;main.c: 111: unsigned int butcount=0;
   273  0399  018C               	clrf	check_Button@butcount
   274  039A  018D               	clrf	check_Button@butcount+1
   275  039B                     l34:	
   276                           ;main.c: 113: while(!RA2)
   277                           
   278  039B  1905               	btfsc	5,2	;volatile
   279  039C  2BAD               	goto	l645
   280                           
   281                           ;main.c: 114: {
   282                           ;main.c: 115: if(butcount<10000)
   283  039D  3027               	movlw	39
   284  039E  020D               	subwf	check_Button@butcount+1,w
   285  039F  3010               	movlw	16
   286  03A0  1903               	skipnz
   287  03A1  020C               	subwf	check_Button@butcount,w
   288  03A2  1803               	skipnc
   289  03A3  2BAB               	goto	l36
   290                           
   291                           ;main.c: 116: {
   292                           ;main.c: 117: butcount++;
   293  03A4  3001               	movlw	1
   294  03A5  078C               	addwf	check_Button@butcount,f
   295  03A6  1803               	skipnc
   296  03A7  0A8D               	incf	check_Button@butcount+1,f
   297  03A8  3000               	movlw	0
   298  03A9  078D               	addwf	check_Button@butcount+1,f
   299                           
   300                           ;main.c: 118: }
   301  03AA  2B9B               	goto	l34
   302  03AB                     l36:	
   303                           
   304                           ;main.c: 119: else
   305                           ;main.c: 120: {
   306                           ;main.c: 121: result=1;
   307  03AB  018E               	clrf	check_Button@result
   308  03AC  0A8E               	incf	check_Button@result,f
   309  03AD                     l645:	
   310                           ;main.c: 122: break;
   311                           
   312                           
   313                           ;main.c: 123: }
   314                           ;main.c: 124: }
   315                           ;main.c: 126: return result;
   316  03AD  080E               	movf	check_Button@result,w
   317  03AE  0008               	return
   318  03AF                     __end_of_check_Button:	
   319                           
   320                           	psect	text2
   321  0390                     __ptext2:	
   322 ;; *************** function _Port_init *****************
   323 ;; Defined at:
   324 ;;		line 35 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		status,2
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0
   338 ;;      Params:         0       0
   339 ;;      Locals:         0       0
   340 ;;      Temps:          0       0
   341 ;;      Totals:         0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels used:    1
   344 ;; This function calls:
   345 ;;		Nothing
   346 ;; This function is called by:
   347 ;;		_main
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           
   352                           ;psect for function _Port_init
   353  0390                     _Port_init:	
   354                           
   355                           ;main.c: 37: TRISB=0x00;
   356                           
   357                           ;incstack = 0
   358                           ; Regs used in _Port_init: [status,2]
   359  0390  1683               	bsf	3,5	;RP0=1, select bank1
   360  0391  0186               	clrf	6	;volatile
   361                           
   362                           ;main.c: 38: PORTB=0x00;
   363  0392  1283               	bcf	3,5	;RP0=0, select bank0
   364  0393  0186               	clrf	6	;volatile
   365                           
   366                           ;main.c: 39: TRISA|=(1<<2);
   367  0394  1683               	bsf	3,5	;RP0=1, select bank1
   368  0395  1505               	bsf	5,2	;volatile
   369  0396  0008               	return
   370  0397                     __end_of_Port_init:	
   371                           
   372                           	psect	text3
   373  03CC                     __ptext3:	
   374 ;; *************** function _OutputChar *****************
   375 ;; Defined at:
   376 ;;		line 46 in file "main.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  digit           1    wreg     unsigned char 
   379 ;; Auto vars:     Size  Location     Type
   380 ;;  digit           1    0[BANK0 ] unsigned char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0
   390 ;;      Params:         0       0
   391 ;;      Locals:         0       1
   392 ;;      Temps:          0       0
   393 ;;      Totals:         0       1
   394 ;;Total ram usage:        1 bytes
   395 ;; Hardware stack levels used:    1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _OutputChar
   405  03CC                     _OutputChar:	
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in _OutputChar: [wreg-fsr0h+status,2+status,0]
   409                           ;OutputChar@digit stored from wreg
   410  03CC  1283               	bcf	3,5	;RP0=0, select bank0
   411  03CD  008C               	movwf	OutputChar@digit
   412                           
   413                           ;main.c: 48: switch(digit)
   414  03CE  2BF0               	goto	l631
   415  03CF                     l607:	
   416                           ;main.c: 49: {
   417                           ;main.c: 50: case 0:
   418                           
   419                           
   420                           ;main.c: 51: {
   421                           ;main.c: 52: PORTB=0x3F;
   422  03CF  303F               	movlw	63
   423  03D0  0086               	movwf	6	;volatile
   424                           
   425                           ;main.c: 53: break;
   426  03D1  0008               	return
   427  03D2                     l609:	
   428                           ;main.c: 54: }
   429                           ;main.c: 55: case 1:
   430                           
   431                           
   432                           ;main.c: 56: {
   433                           ;main.c: 57: PORTB=0x06;
   434  03D2  3006               	movlw	6
   435  03D3  0086               	movwf	6	;volatile
   436                           
   437                           ;main.c: 58: break;
   438  03D4  0008               	return
   439  03D5                     l611:	
   440                           ;main.c: 59: }
   441                           ;main.c: 60: case 2:
   442                           
   443                           
   444                           ;main.c: 61: {
   445                           ;main.c: 62: PORTB=0x5B;
   446  03D5  305B               	movlw	91
   447  03D6  0086               	movwf	6	;volatile
   448                           
   449                           ;main.c: 63: break;
   450  03D7  0008               	return
   451  03D8                     l613:	
   452                           ;main.c: 64: }
   453                           ;main.c: 65: case 3:
   454                           
   455                           
   456                           ;main.c: 66: {
   457                           ;main.c: 67: PORTB=0x4F;
   458  03D8  304F               	movlw	79
   459  03D9  0086               	movwf	6	;volatile
   460                           
   461                           ;main.c: 68: break;
   462  03DA  0008               	return
   463  03DB                     l615:	
   464                           ;main.c: 69: }
   465                           ;main.c: 70: case 4:
   466                           
   467                           
   468                           ;main.c: 71: {
   469                           ;main.c: 72: PORTB=0x66;
   470  03DB  3066               	movlw	102
   471  03DC  0086               	movwf	6	;volatile
   472                           
   473                           ;main.c: 73: break;
   474  03DD  0008               	return
   475  03DE                     l617:	
   476                           ;main.c: 74: }
   477                           ;main.c: 75: case 5:
   478                           
   479                           
   480                           ;main.c: 76: {
   481                           ;main.c: 77: PORTB=0x6D;
   482  03DE  306D               	movlw	109
   483  03DF  0086               	movwf	6	;volatile
   484                           
   485                           ;main.c: 78: break;
   486  03E0  0008               	return
   487  03E1                     l619:	
   488                           ;main.c: 79: }
   489                           ;main.c: 80: case 6:
   490                           
   491                           
   492                           ;main.c: 81: {
   493                           ;main.c: 82: PORTB=0x7D;
   494  03E1  307D               	movlw	125
   495  03E2  0086               	movwf	6	;volatile
   496                           
   497                           ;main.c: 83: break;
   498  03E3  0008               	return
   499  03E4                     l621:	
   500                           ;main.c: 84: }
   501                           ;main.c: 85: case 7:
   502                           
   503                           
   504                           ;main.c: 86: {
   505                           ;main.c: 87: PORTB=0x07;
   506  03E4  3007               	movlw	7
   507  03E5  0086               	movwf	6	;volatile
   508                           
   509                           ;main.c: 88: break;
   510  03E6  0008               	return
   511  03E7                     l623:	
   512                           ;main.c: 89: }
   513                           ;main.c: 90: case 8:
   514                           
   515                           
   516                           ;main.c: 91: {
   517                           ;main.c: 92: PORTB=0x7F;
   518  03E7  307F               	movlw	127
   519  03E8  0086               	movwf	6	;volatile
   520                           
   521                           ;main.c: 93: break;
   522  03E9  0008               	return
   523  03EA                     l625:	
   524                           ;main.c: 94: }
   525                           ;main.c: 95: case 9:
   526                           
   527                           
   528                           ;main.c: 96: {
   529                           ;main.c: 97: PORTB=0x6F;
   530  03EA  306F               	movlw	111
   531  03EB  0086               	movwf	6	;volatile
   532                           
   533                           ;main.c: 98: break;
   534  03EC  0008               	return
   535  03ED                     l627:	
   536                           ;main.c: 99: }
   537                           ;main.c: 100: case 10:
   538                           
   539                           
   540                           ;main.c: 101: {
   541                           ;main.c: 102: PORTB=0x80;
   542  03ED  3080               	movlw	128
   543  03EE  0086               	movwf	6	;volatile
   544                           
   545                           ;main.c: 104: }
   546                           ;main.c: 105: }
   547                           
   548                           ;main.c: 103: break;
   549  03EF  0008               	return
   550  03F0                     l631:	
   551  03F0  080C               	movf	OutputChar@digit,w
   552                           
   553                           ; Switch size 1, requested type "space"
   554                           ; Number of cases is 11, Range of values is 0 to 10
   555                           ; switch strategies available:
   556                           ; Name         Instructions Cycles
   557                           ; direct_byte           17     6 (fixed)
   558                           ; simple_byte           34    18 (average)
   559                           ; jumptable            260     6 (fixed)
   560                           ;	Chosen strategy is direct_byte
   561  03F1  0084               	movwf	4
   562  03F2  300B               	movlw	11
   563  03F3  0204               	subwf	4,w
   564  03F4  1803               	skipnc
   565  03F5  0008               	return
   566  03F6  3000               	movlw	high S693
   567  03F7  008A               	movwf	10
   568  03F8  3001               	movlw	low S693
   569  03F9  0704               	addwf	4,w
   570  03FA  0082               	movwf	2
   571  03FB  0008               	return
   572  03FC                     __end_of_OutputChar:	
   573  004E                     btemp	set	78	;btemp
   574  004E                     wtemp0	set	78
   575                           
   576                           	psect	swtext1
   577  0001                     __pswtext1:	
   578  0001                     S693:	
   579  0001  2BCF               	ljmp	l607
   580  0002  2BD2               	ljmp	l609
   581  0003  2BD5               	ljmp	l611
   582  0004  2BD8               	ljmp	l613
   583  0005  2BDB               	ljmp	l615
   584  0006  2BDE               	ljmp	l617
   585  0007  2BE1               	ljmp	l619
   586  0008  2BE4               	ljmp	l621
   587  0009  2BE7               	ljmp	l623
   588  000A  2BEA               	ljmp	l625
   589  000B  2BED               	ljmp	l627


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      5       6

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_check_Button

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      70
                                              3 BANK0      2     2      0
                         _OutputChar
                          _Port_init
                       _check_Button
 ---------------------------------------------------------------------------------
 (1) _check_Button                                         3     3      0      48
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OutputChar                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OutputChar
   _Port_init
   _check_Button

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      5       6       3        9.1%
ABS                  0      0       6       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       6       6        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Jan 01 22:43:39 2018

   __end_of_check_Button 03AF     check_Button@butcount 000C                        pc 0002  
            __CFG_CP$OFF 0000                       l34 039B                       l36 03AB  
                     u97 03BD                       fsr 0004                      S693 0001  
                    l611 03D5                      l621 03E4                      l613 03D8  
                    l623 03E7                      l615 03DB                      l607 03CF  
                    l631 03F0                      l625 03EA                      l617 03DE  
                    l609 03D2                      l627 03ED                      l619 03E1  
                    l651 03B0                      l645 03AD                      l657 03C2  
                    _RA2 002A             __CFG_FOSC$HS 0000                     _main 03AF  
                   btemp 004E                     start 0000                    ?_main 000C  
          __CFG_WDTE$OFF 0000                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086            __CFG_PWRTE$ON 0000                    _digit 0011  
                  pclath 000A          OutputChar@digit 000C                    status 0003  
                  wtemp0 004E          __initialization 03FC             __end_of_main 03CC  
                 ??_main 000F    __size_of_check_Button 0018       __size_of_Port_init 0007  
           _check_Button 0397               _OutputChar 03CC  __end_of__initialization 03FE  
         __pcstackCOMMON 0000               __pbssBANK0 0011        __end_of_Port_init 0397  
             __pmaintext 03AF              ?_OutputChar 000C                  __ptext1 0397  
                __ptext2 0390                  __ptext3 03CC     end_of_initialization 03FE  
    __size_of_OutputChar 0030       check_Button@result 000E      start_initialization 03FC  
              _Port_init 0390                ___latbits 0000            __pcstackBANK0 000C  
           ??_OutputChar 0000               ?_Port_init 000C                __pswtext1 0001  
     __end_of_OutputChar 03FC            ?_check_Button 000C              ??_Port_init 0000  
         ??_check_Button 0000            __size_of_main 001D  
