

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Feb 23 11:25:05 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.44
    19                           ; Generated 14/09/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F876A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0007                     _PORTCbits	set	7
   165  0001                     _TMR0	set	1
   166  0007                     _PORTC	set	7
   167  0006                     _PORTB	set	6
   168  0092                     _TMR2ON	set	146
   169  0091                     _T2CKPS1	set	145
   170  0090                     _T2CKPS0	set	144
   171  0093                     _TOUTPS0	set	147
   172  0094                     _TOUTPS1	set	148
   173  0095                     _TOUTPS2	set	149
   174  0096                     _TOUTPS3	set	150
   175  005E                     _PEIE	set	94
   176  005F                     _GIE	set	95
   177  005D                     _T0IE	set	93
   178  0061                     _TMR2IF	set	97
   179  005A                     _T0IF	set	90
   180  005A                     _TMR0IF	set	90
   181  005D                     _TMR0IE	set	93
   182  0092                     _PR2	set	146
   183  0081                     _OPTION_REG	set	129
   184  0087                     _TRISC	set	135
   185  0086                     _TRISB	set	134
   186  0461                     _TMR2IE	set	1121
   187                           
   188                           ; #config settings
   189  0000                     
   190                           	psect	cinit
   191  0015                     start_initialization:	
   192  0015                     __initialization:	
   193                           
   194                           ; Clear objects allocated to BANK0
   195  0015  1283               	bcf	3,5	;RP0=0, select bank0
   196  0016  1303               	bcf	3,6	;RP1=0, select bank0
   197  0017  01AA               	clrf	__pbssBANK0& (0+127)
   198  0018  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   199  0019  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   200  001A  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   201  001B  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   202  001C  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   203  001D  01B0               	clrf	(__pbssBANK0+6)& (0+127)
   204  001E  01B1               	clrf	(__pbssBANK0+7)& (0+127)
   205  001F                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208  001F                     __end_of__initialization:	
   209  001F  0183               	clrf	3
   210  0020  120A  118A  29F1   	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	bssBANK0
   213  002A                     __pbssBANK0:	
   214  002A                     _TIM1_Count:	
   215  002A                     	ds	2
   216  002C                     _R4:	
   217  002C                     	ds	1
   218  002D                     _R3:	
   219  002D                     	ds	1
   220  002E                     _R2:	
   221  002E                     	ds	1
   222  002F                     _R1:	
   223  002F                     	ds	1
   224  0030                     _n_count:	
   225  0030                     	ds	1
   226  0031                     _ncnt:	
   227  0031                     	ds	1
   228                           
   229                           	psect	cstackCOMMON
   230  0070                     __pcstackCOMMON:	
   231  0070                     ?_TIM0_Callback:	
   232  0070                     ?_isr:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_main:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_segchar:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?___lwmod:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     segchar@seg:	
   245                           ; 2 bytes @ 0x0
   246                           
   247  0070                     ___lwmod@divisor:	
   248                           ; 2 bytes @ 0x0
   249                           
   250                           
   251                           ; 2 bytes @ 0x0
   252  0070                     	ds	2
   253  0072                     ??_segchar:	
   254  0072                     ___lwmod@dividend:	
   255                           ; 1 bytes @ 0x2
   256                           
   257                           
   258                           ; 2 bytes @ 0x2
   259  0072                     	ds	2
   260  0074                     ??___lwmod:	
   261                           
   262                           ; 1 bytes @ 0x4
   263  0074                     	ds	1
   264  0075                     ___lwmod@counter:	
   265                           
   266                           ; 1 bytes @ 0x5
   267  0075                     	ds	1
   268  0076                     ?___lwdiv:	
   269  0076                     ___lwdiv@divisor:	
   270                           ; 2 bytes @ 0x6
   271                           
   272                           
   273                           ; 2 bytes @ 0x6
   274  0076                     	ds	2
   275  0078                     ___lwdiv@dividend:	
   276                           
   277                           ; 2 bytes @ 0x8
   278  0078                     	ds	2
   279  007A                     ??___lwdiv:	
   280                           
   281                           ; 1 bytes @ 0xA
   282  007A                     	ds	1
   283  007B                     ___lwdiv@quotient:	
   284                           
   285                           ; 2 bytes @ 0xB
   286  007B                     	ds	2
   287  007D                     ___lwdiv@counter:	
   288                           
   289                           ; 1 bytes @ 0xD
   290  007D                     	ds	1
   291                           
   292                           	psect	cstackBANK0
   293  0020                     __pcstackBANK0:	
   294  0020                     ?_ledprint:	
   295  0020                     ledprint@number:	
   296                           ; 1 bytes @ 0x0
   297                           
   298                           
   299                           ; 2 bytes @ 0x0
   300  0020                     	ds	2
   301  0022                     ??_ledprint:	
   302                           
   303                           ; 1 bytes @ 0x2
   304  0022                     	ds	1
   305  0023                     ??_TIM0_Callback:	
   306                           
   307                           ; 1 bytes @ 0x3
   308  0023                     	ds	2
   309  0025                     ??_isr:	
   310                           
   311                           ; 1 bytes @ 0x5
   312  0025                     	ds	5
   313  002A                     ??_main:	
   314                           
   315                           	psect	maintext
   316  01F1                     __pmaintext:	
   317                           ; 1 bytes @ 0xA
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 26 in file "main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels required when called:    4
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           
   351                           ;psect for function _main
   352  01F1                     _main:	
   353                           
   354                           ;main.c: 27: TRISB = 0x00;
   355                           
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg+status,2]
   358  01F1  1683               	bsf	3,5	;RP0=1, select bank1
   359  01F2  1303               	bcf	3,6	;RP1=0, select bank1
   360  01F3  0186               	clrf	6	;volatile
   361                           
   362                           ;main.c: 28: PORTB = 0xFF;
   363  01F4  30FF               	movlw	255
   364  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   365  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   366  01F7  0086               	movwf	6	;volatile
   367                           
   368                           ;main.c: 29: TRISC = 0x00;
   369  01F8  1683               	bsf	3,5	;RP0=1, select bank1
   370  01F9  1303               	bcf	3,6	;RP1=0, select bank1
   371  01FA  0187               	clrf	7	;volatile
   372                           
   373                           ;main.c: 30: PORTC = 0x00;
   374  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   375  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   376  01FD  0187               	clrf	7	;volatile
   377                           
   378                           ;main.c: 31: OPTION_REG=0b00000010;
   379  01FE  3002               	movlw	2
   380  01FF  1683               	bsf	3,5	;RP0=1, select bank1
   381  0200  1303               	bcf	3,6	;RP1=0, select bank1
   382  0201  0081               	movwf	1	;volatile
   383                           
   384                           ;main.c: 32: T0IE=1;
   385  0202  168B               	bsf	11,5	;volatile
   386                           
   387                           ;main.c: 33: GIE=1;
   388  0203  178B               	bsf	11,7	;volatile
   389                           
   390                           ;main.c: 34: PEIE=1;
   391  0204  170B               	bsf	11,6	;volatile
   392                           
   393                           ;main.c: 35: TOUTPS3=1;
   394  0205  1283               	bcf	3,5	;RP0=0, select bank0
   395  0206  1303               	bcf	3,6	;RP1=0, select bank0
   396  0207  1712               	bsf	18,6	;volatile
   397                           
   398                           ;main.c: 36: TOUTPS2=0;
   399  0208  1292               	bcf	18,5	;volatile
   400                           
   401                           ;main.c: 37: TOUTPS1=0;
   402  0209  1212               	bcf	18,4	;volatile
   403                           
   404                           ;main.c: 38: TOUTPS0=1;
   405  020A  1592               	bsf	18,3	;volatile
   406                           
   407                           ;main.c: 39: T2CKPS0=1;
   408  020B  1412               	bsf	18,0	;volatile
   409                           
   410                           ;main.c: 40: T2CKPS1=1;
   411  020C  1492               	bsf	18,1	;volatile
   412                           
   413                           ;main.c: 41: PR2=0xF9;
   414  020D  30F9               	movlw	249
   415  020E  1683               	bsf	3,5	;RP0=1, select bank1
   416  020F  1303               	bcf	3,6	;RP1=0, select bank1
   417  0210  0092               	movwf	18	;volatile
   418                           
   419                           ;main.c: 42: TMR2IE=1;
   420  0211  148C               	bsf	12,1	;volatile
   421                           
   422                           ;main.c: 43: TMR2ON=1;
   423  0212  1283               	bcf	3,5	;RP0=0, select bank0
   424  0213  1303               	bcf	3,6	;RP1=0, select bank0
   425  0214  1512               	bsf	18,2	;volatile
   426                           
   427                           ;main.c: 44: TMR0=0;
   428  0215  0181               	clrf	1	;volatile
   429  0216                     l65:	
   430                           ;main.c: 45: while(1)
   431                           
   432                           
   433                           ;main.c: 46: {
   434  0216  2A16               	goto	l65
   435  0217                     __end_of_main:	
   436                           
   437                           	psect	text1
   438  0187                     __ptext1:	
   439 ;; *************** function _isr *****************
   440 ;; Defined at:
   441 ;;		line 6 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          0       5       0       0       0
   458 ;;      Totals:         0       5       0       0       0
   459 ;;Total ram usage:        5 bytes
   460 ;; Hardware stack levels used:    1
   461 ;; Hardware stack levels required when called:    3
   462 ;; This function calls:
   463 ;;		_TIM0_Callback
   464 ;; This function is called by:
   465 ;;		Interrupt level 1
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           
   470                           ;psect for function _isr
   471  0187                     _isr:	
   472                           
   473                           ;main.c: 8: if(TMR0IE&&TMR0IF)
   474  0187  1A8B               	btfsc	11,5	;volatile
   475  0188  1D0B               	btfss	11,2	;volatile
   476  0189  2991               	goto	i1l55
   477                           
   478                           ;main.c: 9: {
   479                           ;main.c: 10: TIM0_Callback();
   480  018A  120A  118A  2023  120A  118A  	fcall	_TIM0_Callback
   481                           
   482                           ;main.c: 11: T0IF=0;
   483  018F  110B               	bcf	11,2	;volatile
   484                           
   485                           ;main.c: 12: }
   486  0190  29B2               	goto	i1l60
   487  0191                     i1l55:	
   488                           
   489                           ;main.c: 13: else if(TMR2IE&&TMR2IF)
   490  0191  1683               	bsf	3,5	;RP0=1, select bank1
   491  0192  1303               	bcf	3,6	;RP1=0, select bank1
   492  0193  1C8C               	btfss	12,1	;volatile
   493  0194  29B2               	goto	i1l60
   494  0195  1283               	bcf	3,5	;RP0=0, select bank0
   495  0196  1303               	bcf	3,6	;RP1=0, select bank0
   496  0197  1C8C               	btfss	12,1	;volatile
   497  0198  29B2               	goto	i1l60
   498                           
   499                           ;main.c: 14: {
   500                           ;main.c: 15: TMR2IF=0;
   501  0199  108C               	bcf	12,1	;volatile
   502                           
   503                           ;main.c: 16: ncnt++;
   504  019A  3001               	movlw	1
   505  019B  00A5               	movwf	??_isr
   506  019C  0825               	movf	??_isr,w
   507  019D  07B1               	addwf	_ncnt,f
   508                           
   509                           ;main.c: 17: if(ncnt>25)
   510  019E  301A               	movlw	26
   511  019F  0231               	subwf	_ncnt,w
   512  01A0  1C03               	skipc
   513  01A1  29B2               	goto	i1l60
   514                           
   515                           ;main.c: 18: {
   516                           ;main.c: 19: ncnt=0;
   517  01A2  01B1               	clrf	_ncnt
   518                           
   519                           ;main.c: 20: TIM1_Count++;
   520  01A3  3001               	movlw	1
   521  01A4  07AA               	addwf	_TIM1_Count,f
   522  01A5  1803               	skipnc
   523  01A6  0AAB               	incf	_TIM1_Count+1,f
   524  01A7  3000               	movlw	0
   525  01A8  07AB               	addwf	_TIM1_Count+1,f
   526                           
   527                           ;main.c: 21: if(TIM1_Count>9999) TIM1_Count=0;
   528  01A9  3027               	movlw	39
   529  01AA  022B               	subwf	_TIM1_Count+1,w
   530  01AB  3010               	movlw	16
   531  01AC  1903               	skipnz
   532  01AD  022A               	subwf	_TIM1_Count,w
   533  01AE  1C03               	skipc
   534  01AF  29B2               	goto	i1l60
   535  01B0  01AA               	clrf	_TIM1_Count
   536  01B1  01AB               	clrf	_TIM1_Count+1
   537  01B2                     i1l60:	
   538  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   539  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   540  01B4  0829               	movf	??_isr+4,w
   541  01B5  00FF               	movwf	127
   542  01B6  0828               	movf	??_isr+3,w
   543  01B7  008A               	movwf	10
   544  01B8  0827               	movf	??_isr+2,w
   545  01B9  0084               	movwf	4
   546  01BA  0E26               	swapf	(??_isr+1)^0,w
   547  01BB  0083               	movwf	3
   548  01BC  0EFE               	swapf	126,f
   549  01BD  0E7E               	swapf	126,w
   550  01BE  0009               	retfie
   551  01BF                     __end_of_isr:	
   552                           
   553                           	psect	intentry
   554  0004                     __pintentry:	
   555                           ;incstack = 0
   556                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   557                           
   558  0004                     interrupt_function:	
   559  007E                     saved_w	set	btemp
   560  0004  00FE               	movwf	btemp
   561  0005  0E03               	swapf	3,w
   562  0006  1283               	bcf	3,5	;RP0=0, select bank0
   563  0007  1303               	bcf	3,6	;RP1=0, select bank0
   564  0008  00A6               	movwf	??_isr+1
   565  0009  0804               	movf	4,w
   566  000A  00A7               	movwf	??_isr+2
   567  000B  080A               	movf	10,w
   568  000C  00A8               	movwf	??_isr+3
   569  000D  087F               	movf	btemp+1,w
   570  000E  00A9               	movwf	??_isr+4
   571  000F  120A  118A  2987   	ljmp	_isr
   572                           
   573                           	psect	text2
   574  0023                     __ptext2:	
   575 ;; *************** function _TIM0_Callback *****************
   576 ;; Defined at:
   577 ;;		line 51 in file "led.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       2       0       0       0
   594 ;;      Totals:         0       2       0       0       0
   595 ;;Total ram usage:        2 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    2
   598 ;; This function calls:
   599 ;;		_ledprint
   600 ;;		_segchar
   601 ;; This function is called by:
   602 ;;		_isr
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _TIM0_Callback
   608  0023                     _TIM0_Callback:	
   609                           
   610                           ;led.c: 53: ledprint(TIM1_Count);
   611                           
   612                           ;incstack = 0
   613                           ; Regs used in _TIM0_Callback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   614  0023  1283               	bcf	3,5	;RP0=0, select bank0
   615  0024  1303               	bcf	3,6	;RP1=0, select bank0
   616  0025  082B               	movf	_TIM1_Count+1,w
   617  0026  00A1               	movwf	ledprint@number+1
   618  0027  082A               	movf	_TIM1_Count,w
   619  0028  00A0               	movwf	ledprint@number
   620  0029  120A  118A  208B  120A  118A  	fcall	_ledprint
   621                           
   622                           ;led.c: 54: if(n_count==0)
   623  002E  1283               	bcf	3,5	;RP0=0, select bank0
   624  002F  1303               	bcf	3,6	;RP1=0, select bank0
   625  0030  0830               	movf	_n_count,w
   626  0031  1D03               	btfss	3,2
   627  0032  2844               	goto	i1l863
   628                           
   629                           ;led.c: 55: {
   630                           ;led.c: 56: PORTCbits.RC3 = 0;
   631  0033  1187               	bcf	7,3	;volatile
   632                           
   633                           ;led.c: 57: segchar(R1);
   634  0034  082F               	movf	_R1,w
   635  0035  00A3               	movwf	??_TIM0_Callback
   636  0036  01A4               	clrf	??_TIM0_Callback+1
   637  0037  0823               	movf	??_TIM0_Callback,w
   638  0038  00F0               	movwf	segchar@seg
   639  0039  0824               	movf	??_TIM0_Callback+1,w
   640  003A  00F1               	movwf	segchar@seg+1
   641  003B  120A  118A  20F2  120A  118A  	fcall	_segchar
   642                           
   643                           ;led.c: 58: PORTCbits.RC0 = 1;
   644  0040  1283               	bcf	3,5	;RP0=0, select bank0
   645  0041  1303               	bcf	3,6	;RP1=0, select bank0
   646  0042  1407               	bsf	7,0	;volatile
   647                           
   648                           ;led.c: 59: }
   649  0043  2881               	goto	i1l887
   650  0044                     i1l863:	
   651                           
   652                           ;led.c: 60: else if(n_count==1)
   653  0044  0330               	decf	_n_count,w
   654  0045  1D03               	btfss	3,2
   655  0046  2858               	goto	i1l871
   656                           
   657                           ;led.c: 61: {
   658                           ;led.c: 62: PORTCbits.RC0 = 0;
   659  0047  1007               	bcf	7,0	;volatile
   660                           
   661                           ;led.c: 63: segchar(R2);
   662  0048  082E               	movf	_R2,w
   663  0049  00A3               	movwf	??_TIM0_Callback
   664  004A  01A4               	clrf	??_TIM0_Callback+1
   665  004B  0823               	movf	??_TIM0_Callback,w
   666  004C  00F0               	movwf	segchar@seg
   667  004D  0824               	movf	??_TIM0_Callback+1,w
   668  004E  00F1               	movwf	segchar@seg+1
   669  004F  120A  118A  20F2  120A  118A  	fcall	_segchar
   670                           
   671                           ;led.c: 64: PORTCbits.RC1 = 1;
   672  0054  1283               	bcf	3,5	;RP0=0, select bank0
   673  0055  1303               	bcf	3,6	;RP1=0, select bank0
   674  0056  1487               	bsf	7,1	;volatile
   675                           
   676                           ;led.c: 65: }
   677  0057  2881               	goto	i1l887
   678  0058                     i1l871:	
   679                           
   680                           ;led.c: 66: else if(n_count==2)
   681  0058  3002               	movlw	2
   682  0059  0630               	xorwf	_n_count,w
   683  005A  1D03               	btfss	3,2
   684  005B  286D               	goto	i1l879
   685                           
   686                           ;led.c: 67: {
   687                           ;led.c: 68: PORTCbits.RC1 = 0;
   688  005C  1087               	bcf	7,1	;volatile
   689                           
   690                           ;led.c: 69: segchar(R3);
   691  005D  082D               	movf	_R3,w
   692  005E  00A3               	movwf	??_TIM0_Callback
   693  005F  01A4               	clrf	??_TIM0_Callback+1
   694  0060  0823               	movf	??_TIM0_Callback,w
   695  0061  00F0               	movwf	segchar@seg
   696  0062  0824               	movf	??_TIM0_Callback+1,w
   697  0063  00F1               	movwf	segchar@seg+1
   698  0064  120A  118A  20F2  120A  118A  	fcall	_segchar
   699                           
   700                           ;led.c: 70: PORTCbits.RC2 = 1;
   701  0069  1283               	bcf	3,5	;RP0=0, select bank0
   702  006A  1303               	bcf	3,6	;RP1=0, select bank0
   703  006B  1507               	bsf	7,2	;volatile
   704                           
   705                           ;led.c: 71: }
   706  006C  2881               	goto	i1l887
   707  006D                     i1l879:	
   708                           
   709                           ;led.c: 72: else if(n_count==3)
   710  006D  3003               	movlw	3
   711  006E  0630               	xorwf	_n_count,w
   712  006F  1D03               	btfss	3,2
   713  0070  2881               	goto	i1l887
   714                           
   715                           ;led.c: 73: {
   716                           ;led.c: 74: PORTCbits.RC2 = 0;
   717  0071  1107               	bcf	7,2	;volatile
   718                           
   719                           ;led.c: 75: segchar(R4);
   720  0072  082C               	movf	_R4,w
   721  0073  00A3               	movwf	??_TIM0_Callback
   722  0074  01A4               	clrf	??_TIM0_Callback+1
   723  0075  0823               	movf	??_TIM0_Callback,w
   724  0076  00F0               	movwf	segchar@seg
   725  0077  0824               	movf	??_TIM0_Callback+1,w
   726  0078  00F1               	movwf	segchar@seg+1
   727  0079  120A  118A  20F2  120A  118A  	fcall	_segchar
   728                           
   729                           ;led.c: 76: PORTCbits.RC3 = 1;
   730  007E  1283               	bcf	3,5	;RP0=0, select bank0
   731  007F  1303               	bcf	3,6	;RP1=0, select bank0
   732  0080  1587               	bsf	7,3	;volatile
   733  0081                     i1l887:	
   734                           
   735                           ;led.c: 77: }
   736                           ;led.c: 78: n_count++;
   737  0081  3001               	movlw	1
   738  0082  00A3               	movwf	??_TIM0_Callback
   739  0083  0823               	movf	??_TIM0_Callback,w
   740  0084  07B0               	addwf	_n_count,f
   741                           
   742                           ;led.c: 79: if (n_count>3) n_count=0;
   743  0085  3004               	movlw	4
   744  0086  0230               	subwf	_n_count,w
   745  0087  1C03               	skipc
   746  0088  0008               	return
   747  0089  01B0               	clrf	_n_count
   748  008A  0008               	return
   749  008B                     __end_of_TIM0_Callback:	
   750                           
   751                           	psect	text3
   752  00F2                     __ptext3:	
   753 ;; *************** function _segchar *****************
   754 ;; Defined at:
   755 ;;		line 6 in file "led.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  seg             2    0[COMMON] unsigned int 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         2       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0
   772 ;;      Totals:         2       0       0       0       0
   773 ;;Total ram usage:        2 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_TIM0_Callback
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _segchar
   784  00F2                     _segchar:	
   785                           
   786                           ;led.c: 8: switch (seg)
   787                           
   788                           ;incstack = 0
   789                           ; Regs used in _segchar: [wreg-fsr0h+status,2+status,0]
   790  00F2  2925               	goto	i1l845
   791  00F3                     i1l823:	
   792                           ;led.c: 9: {
   793                           ;led.c: 10: case 1:
   794                           
   795                           
   796                           ;led.c: 11: PORTB = 0b11111001;
   797  00F3  30F9               	movlw	249
   798  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   799  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   800  00F6  0086               	movwf	6	;volatile
   801                           
   802                           ;led.c: 12: break;
   803  00F7  0008               	return
   804  00F8                     i1l825:	
   805                           ;led.c: 13: case 2:
   806                           
   807                           
   808                           ;led.c: 14: PORTB = 0b10100100;
   809  00F8  30A4               	movlw	164
   810  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   811  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   812  00FB  0086               	movwf	6	;volatile
   813                           
   814                           ;led.c: 15: break;
   815  00FC  0008               	return
   816  00FD                     i1l827:	
   817                           ;led.c: 16: case 3:
   818                           
   819                           
   820                           ;led.c: 17: PORTB = 0b10110000;
   821  00FD  30B0               	movlw	176
   822  00FE  1283               	bcf	3,5	;RP0=0, select bank0
   823  00FF  1303               	bcf	3,6	;RP1=0, select bank0
   824  0100  0086               	movwf	6	;volatile
   825                           
   826                           ;led.c: 18: break;
   827  0101  0008               	return
   828  0102                     i1l829:	
   829                           ;led.c: 19: case 4:
   830                           
   831                           
   832                           ;led.c: 20: PORTB = 0b10011001;
   833  0102  3099               	movlw	153
   834  0103  1283               	bcf	3,5	;RP0=0, select bank0
   835  0104  1303               	bcf	3,6	;RP1=0, select bank0
   836  0105  0086               	movwf	6	;volatile
   837                           
   838                           ;led.c: 21: break;
   839  0106  0008               	return
   840  0107                     i1l831:	
   841                           ;led.c: 22: case 5:
   842                           
   843                           
   844                           ;led.c: 23: PORTB = 0b10010010;
   845  0107  3092               	movlw	146
   846  0108  1283               	bcf	3,5	;RP0=0, select bank0
   847  0109  1303               	bcf	3,6	;RP1=0, select bank0
   848  010A  0086               	movwf	6	;volatile
   849                           
   850                           ;led.c: 24: break;
   851  010B  0008               	return
   852  010C                     i1l833:	
   853                           ;led.c: 25: case 6:
   854                           
   855                           
   856                           ;led.c: 26: PORTB = 0b10000010;
   857  010C  3082               	movlw	130
   858  010D  1283               	bcf	3,5	;RP0=0, select bank0
   859  010E  1303               	bcf	3,6	;RP1=0, select bank0
   860  010F  0086               	movwf	6	;volatile
   861                           
   862                           ;led.c: 27: break;
   863  0110  0008               	return
   864  0111                     i1l835:	
   865                           ;led.c: 28: case 7:
   866                           
   867                           
   868                           ;led.c: 29: PORTB = 0b11111000;
   869  0111  30F8               	movlw	248
   870  0112  1283               	bcf	3,5	;RP0=0, select bank0
   871  0113  1303               	bcf	3,6	;RP1=0, select bank0
   872  0114  0086               	movwf	6	;volatile
   873                           
   874                           ;led.c: 30: break;
   875  0115  0008               	return
   876  0116                     i1l837:	
   877                           ;led.c: 31: case 8:
   878                           
   879                           
   880                           ;led.c: 32: PORTB = 0b10000000;
   881  0116  3080               	movlw	128
   882  0117  1283               	bcf	3,5	;RP0=0, select bank0
   883  0118  1303               	bcf	3,6	;RP1=0, select bank0
   884  0119  0086               	movwf	6	;volatile
   885                           
   886                           ;led.c: 33: break;
   887  011A  0008               	return
   888  011B                     i1l839:	
   889                           ;led.c: 34: case 9:
   890                           
   891                           
   892                           ;led.c: 35: PORTB = 0b10010000;
   893  011B  3090               	movlw	144
   894  011C  1283               	bcf	3,5	;RP0=0, select bank0
   895  011D  1303               	bcf	3,6	;RP1=0, select bank0
   896  011E  0086               	movwf	6	;volatile
   897                           
   898                           ;led.c: 36: break;
   899  011F  0008               	return
   900  0120                     i1l841:	
   901                           ;led.c: 37: case 0:
   902                           
   903                           
   904                           ;led.c: 38: PORTB = 0b11000000;
   905  0120  30C0               	movlw	192
   906  0121  1283               	bcf	3,5	;RP0=0, select bank0
   907  0122  1303               	bcf	3,6	;RP1=0, select bank0
   908  0123  0086               	movwf	6	;volatile
   909                           
   910                           ;led.c: 40: }
   911                           
   912                           ;led.c: 39: break;
   913  0124  0008               	return
   914  0125                     i1l845:	
   915                           
   916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   917                           ; Switch size 1, requested type "space"
   918                           ; Number of cases is 1, Range of values is 0 to 0
   919                           ; switch strategies available:
   920                           ; Name         Instructions Cycles
   921                           ; simple_byte            4     3 (average)
   922                           ; direct_byte           11     8 (fixed)
   923                           ; jumptable            260     6 (fixed)
   924                           ;	Chosen strategy is simple_byte
   925  0125  0871               	movf	segchar@seg+1,w
   926  0126  3A00               	xorlw	0	; case 0
   927  0127  1903               	skipnz
   928  0128  292A               	goto	i1l973
   929  0129  294A               	goto	i1l99
   930  012A                     i1l973:	
   931                           
   932                           ; Switch size 1, requested type "space"
   933                           ; Number of cases is 10, Range of values is 0 to 9
   934                           ; switch strategies available:
   935                           ; Name         Instructions Cycles
   936                           ; simple_byte           31    16 (average)
   937                           ; direct_byte           38     8 (fixed)
   938                           ; jumptable            260     6 (fixed)
   939                           ;	Chosen strategy is simple_byte
   940  012A  0870               	movf	segchar@seg,w
   941  012B  3A00               	xorlw	0	; case 0
   942  012C  1903               	skipnz
   943  012D  2920               	goto	i1l841
   944  012E  3A01               	xorlw	1	; case 1
   945  012F  1903               	skipnz
   946  0130  28F3               	goto	i1l823
   947  0131  3A03               	xorlw	3	; case 2
   948  0132  1903               	skipnz
   949  0133  28F8               	goto	i1l825
   950  0134  3A01               	xorlw	1	; case 3
   951  0135  1903               	skipnz
   952  0136  28FD               	goto	i1l827
   953  0137  3A07               	xorlw	7	; case 4
   954  0138  1903               	skipnz
   955  0139  2902               	goto	i1l829
   956  013A  3A01               	xorlw	1	; case 5
   957  013B  1903               	skipnz
   958  013C  2907               	goto	i1l831
   959  013D  3A03               	xorlw	3	; case 6
   960  013E  1903               	skipnz
   961  013F  290C               	goto	i1l833
   962  0140  3A01               	xorlw	1	; case 7
   963  0141  1903               	skipnz
   964  0142  2911               	goto	i1l835
   965  0143  3A0F               	xorlw	15	; case 8
   966  0144  1903               	skipnz
   967  0145  2916               	goto	i1l837
   968  0146  3A01               	xorlw	1	; case 9
   969  0147  1903               	skipnz
   970  0148  291B               	goto	i1l839
   971  0149  294A               	goto	i1l99
   972  014A                     i1l99:	
   973  014A  0008               	return
   974  014B                     __end_of_segchar:	
   975                           
   976                           	psect	text4
   977  008B                     __ptext4:	
   978 ;; *************** function _ledprint *****************
   979 ;; Defined at:
   980 ;;		line 43 in file "led.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  number          2    0[BANK0 ] unsigned int 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       2       0       0       0
   995 ;;      Locals:         0       0       0       0       0
   996 ;;      Temps:          0       1       0       0       0
   997 ;;      Totals:         0       3       0       0       0
   998 ;;Total ram usage:        3 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    1
  1001 ;; This function calls:
  1002 ;;		___lwdiv
  1003 ;;		___lwmod
  1004 ;; This function is called by:
  1005 ;;		_TIM0_Callback
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           
  1010                           ;psect for function _ledprint
  1011  008B                     _ledprint:	
  1012                           
  1013                           ;led.c: 45: R1 = number%10;
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _ledprint: [wreg+status,2+status,0+pclath+cstack]
  1017  008B  300A               	movlw	10
  1018  008C  00F0               	movwf	___lwmod@divisor
  1019  008D  3000               	movlw	0
  1020  008E  00F1               	movwf	___lwmod@divisor+1
  1021  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0091  0821               	movf	ledprint@number+1,w
  1024  0092  00F3               	movwf	___lwmod@dividend+1
  1025  0093  0820               	movf	ledprint@number,w
  1026  0094  00F2               	movwf	___lwmod@dividend
  1027  0095  120A  118A  21BF  120A  118A  	fcall	___lwmod
  1028  009A  0870               	movf	?___lwmod,w
  1029  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1030  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1031  009D  00A2               	movwf	??_ledprint
  1032  009E  0822               	movf	??_ledprint,w
  1033  009F  00AF               	movwf	_R1
  1034                           
  1035                           ;led.c: 46: R2 = number%100/10;
  1036  00A0  300A               	movlw	10
  1037  00A1  00F6               	movwf	___lwdiv@divisor
  1038  00A2  3000               	movlw	0
  1039  00A3  00F7               	movwf	___lwdiv@divisor+1
  1040  00A4  0821               	movf	ledprint@number+1,w
  1041  00A5  00F3               	movwf	___lwmod@dividend+1
  1042  00A6  0820               	movf	ledprint@number,w
  1043  00A7  00F2               	movwf	___lwmod@dividend
  1044  00A8  3064               	movlw	100
  1045  00A9  00F0               	movwf	___lwmod@divisor
  1046  00AA  3000               	movlw	0
  1047  00AB  00F1               	movwf	___lwmod@divisor+1
  1048  00AC  120A  118A  21BF  120A  118A  	fcall	___lwmod
  1049  00B1  0871               	movf	?___lwmod+1,w
  1050  00B2  00F9               	movwf	___lwdiv@dividend+1
  1051  00B3  0870               	movf	?___lwmod,w
  1052  00B4  00F8               	movwf	___lwdiv@dividend
  1053  00B5  120A  118A  214B  120A  118A  	fcall	___lwdiv
  1054  00BA  0876               	movf	?___lwdiv,w
  1055  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1056  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1057  00BD  00A2               	movwf	??_ledprint
  1058  00BE  0822               	movf	??_ledprint,w
  1059  00BF  00AE               	movwf	_R2
  1060                           
  1061                           ;led.c: 47: R3 = number%1000/100;
  1062  00C0  3064               	movlw	100
  1063  00C1  00F6               	movwf	___lwdiv@divisor
  1064  00C2  3000               	movlw	0
  1065  00C3  00F7               	movwf	___lwdiv@divisor+1
  1066  00C4  0821               	movf	ledprint@number+1,w
  1067  00C5  00F3               	movwf	___lwmod@dividend+1
  1068  00C6  0820               	movf	ledprint@number,w
  1069  00C7  00F2               	movwf	___lwmod@dividend
  1070  00C8  30E8               	movlw	232
  1071  00C9  00F0               	movwf	___lwmod@divisor
  1072  00CA  3003               	movlw	3
  1073  00CB  00F1               	movwf	___lwmod@divisor+1
  1074  00CC  120A  118A  21BF  120A  118A  	fcall	___lwmod
  1075  00D1  0871               	movf	?___lwmod+1,w
  1076  00D2  00F9               	movwf	___lwdiv@dividend+1
  1077  00D3  0870               	movf	?___lwmod,w
  1078  00D4  00F8               	movwf	___lwdiv@dividend
  1079  00D5  120A  118A  214B  120A  118A  	fcall	___lwdiv
  1080  00DA  0876               	movf	?___lwdiv,w
  1081  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1082  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1083  00DD  00A2               	movwf	??_ledprint
  1084  00DE  0822               	movf	??_ledprint,w
  1085  00DF  00AD               	movwf	_R3
  1086                           
  1087                           ;led.c: 48: R4 = number/1000;
  1088  00E0  30E8               	movlw	232
  1089  00E1  00F6               	movwf	___lwdiv@divisor
  1090  00E2  3003               	movlw	3
  1091  00E3  00F7               	movwf	___lwdiv@divisor+1
  1092  00E4  0821               	movf	ledprint@number+1,w
  1093  00E5  00F9               	movwf	___lwdiv@dividend+1
  1094  00E6  0820               	movf	ledprint@number,w
  1095  00E7  00F8               	movwf	___lwdiv@dividend
  1096  00E8  120A  118A  214B   	fcall	___lwdiv
  1097  00EB  0876               	movf	?___lwdiv,w
  1098  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1099  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1100  00EE  00A2               	movwf	??_ledprint
  1101  00EF  0822               	movf	??_ledprint,w
  1102  00F0  00AC               	movwf	_R4
  1103  00F1  0008               	return
  1104  00F2                     __end_of_ledprint:	
  1105                           
  1106                           	psect	text5
  1107  01BF                     __ptext5:	
  1108 ;; *************** function ___lwmod *****************
  1109 ;; Defined at:
  1110 ;;		line 6 in file "D:\WINDIR\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  divisor         2    0[COMMON] unsigned int 
  1113 ;;  dividend        2    2[COMMON] unsigned int 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  counter         1    5[COMMON] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  2    0[COMMON] unsigned int 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         4       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0
  1127 ;;      Temps:          1       0       0       0       0
  1128 ;;      Totals:         6       0       0       0       0
  1129 ;;Total ram usage:        6 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_ledprint
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function ___lwmod
  1140  01BF                     ___lwmod:	
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1144  01BF  0870               	movf	___lwmod@divisor,w
  1145  01C0  0471               	iorwf	___lwmod@divisor+1,w
  1146  01C1  1903               	btfsc	3,2
  1147  01C2  29EC               	goto	i1l817
  1148  01C3  01F5               	clrf	___lwmod@counter
  1149  01C4  0AF5               	incf	___lwmod@counter,f
  1150  01C5                     i1l807:	
  1151  01C5  1BF1               	btfsc	___lwmod@divisor+1,7
  1152  01C6  29D3               	goto	i1l809
  1153  01C7  3001               	movlw	1
  1154  01C8                     u33_25:	
  1155  01C8  1003               	clrc
  1156  01C9  0DF0               	rlf	___lwmod@divisor,f
  1157  01CA  0DF1               	rlf	___lwmod@divisor+1,f
  1158  01CB  3EFF               	addlw	-1
  1159  01CC  1D03               	skipz
  1160  01CD  29C8               	goto	u33_25
  1161  01CE  3001               	movlw	1
  1162  01CF  00F4               	movwf	??___lwmod
  1163  01D0  0874               	movf	??___lwmod,w
  1164  01D1  07F5               	addwf	___lwmod@counter,f
  1165  01D2  29C5               	goto	i1l807
  1166  01D3                     i1l809:	
  1167  01D3  0871               	movf	___lwmod@divisor+1,w
  1168  01D4  0273               	subwf	___lwmod@dividend+1,w
  1169  01D5  1D03               	skipz
  1170  01D6  29D9               	goto	u35_25
  1171  01D7  0870               	movf	___lwmod@divisor,w
  1172  01D8  0272               	subwf	___lwmod@dividend,w
  1173  01D9                     u35_25:	
  1174  01D9  1C03               	skipc
  1175  01DA  29E1               	goto	i1l813
  1176  01DB  0870               	movf	___lwmod@divisor,w
  1177  01DC  02F2               	subwf	___lwmod@dividend,f
  1178  01DD  0871               	movf	___lwmod@divisor+1,w
  1179  01DE  1C03               	skipc
  1180  01DF  03F3               	decf	___lwmod@dividend+1,f
  1181  01E0  02F3               	subwf	___lwmod@dividend+1,f
  1182  01E1                     i1l813:	
  1183  01E1  3001               	movlw	1
  1184  01E2                     u36_25:	
  1185  01E2  1003               	clrc
  1186  01E3  0CF1               	rrf	___lwmod@divisor+1,f
  1187  01E4  0CF0               	rrf	___lwmod@divisor,f
  1188  01E5  3EFF               	addlw	-1
  1189  01E6  1D03               	skipz
  1190  01E7  29E2               	goto	u36_25
  1191  01E8  3001               	movlw	1
  1192  01E9  02F5               	subwf	___lwmod@counter,f
  1193  01EA  1D03               	btfss	3,2
  1194  01EB  29D3               	goto	i1l809
  1195  01EC                     i1l817:	
  1196  01EC  0873               	movf	___lwmod@dividend+1,w
  1197  01ED  00F1               	movwf	?___lwmod+1
  1198  01EE  0872               	movf	___lwmod@dividend,w
  1199  01EF  00F0               	movwf	?___lwmod
  1200  01F0  0008               	return
  1201  01F1                     __end_of___lwmod:	
  1202                           
  1203                           	psect	text6
  1204  014B                     __ptext6:	
  1205 ;; *************** function ___lwdiv *****************
  1206 ;; Defined at:
  1207 ;;		line 6 in file "D:\WINDIR\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  divisor         2    6[COMMON] unsigned int 
  1210 ;;  dividend        2    8[COMMON] unsigned int 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  quotient        2   11[COMMON] unsigned int 
  1213 ;;  counter         1   13[COMMON] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  2    6[COMMON] unsigned int 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         4       0       0       0       0
  1224 ;;      Locals:         3       0       0       0       0
  1225 ;;      Temps:          1       0       0       0       0
  1226 ;;      Totals:         8       0       0       0       0
  1227 ;;Total ram usage:        8 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_ledprint
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function ___lwdiv
  1238  014B                     ___lwdiv:	
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1242  014B  01FB               	clrf	___lwdiv@quotient
  1243  014C  01FC               	clrf	___lwdiv@quotient+1
  1244  014D  0876               	movf	___lwdiv@divisor,w
  1245  014E  0477               	iorwf	___lwdiv@divisor+1,w
  1246  014F  1903               	btfsc	3,2
  1247  0150  2982               	goto	i1l795
  1248  0151  01FD               	clrf	___lwdiv@counter
  1249  0152  0AFD               	incf	___lwdiv@counter,f
  1250  0153                     i1l783:	
  1251  0153  1BF7               	btfsc	___lwdiv@divisor+1,7
  1252  0154  2961               	goto	i1l785
  1253  0155  3001               	movlw	1
  1254  0156                     u26_25:	
  1255  0156  1003               	clrc
  1256  0157  0DF6               	rlf	___lwdiv@divisor,f
  1257  0158  0DF7               	rlf	___lwdiv@divisor+1,f
  1258  0159  3EFF               	addlw	-1
  1259  015A  1D03               	skipz
  1260  015B  2956               	goto	u26_25
  1261  015C  3001               	movlw	1
  1262  015D  00FA               	movwf	??___lwdiv
  1263  015E  087A               	movf	??___lwdiv,w
  1264  015F  07FD               	addwf	___lwdiv@counter,f
  1265  0160  2953               	goto	i1l783
  1266  0161                     i1l785:	
  1267  0161  3001               	movlw	1
  1268  0162                     u28_25:	
  1269  0162  1003               	clrc
  1270  0163  0DFB               	rlf	___lwdiv@quotient,f
  1271  0164  0DFC               	rlf	___lwdiv@quotient+1,f
  1272  0165  3EFF               	addlw	-1
  1273  0166  1D03               	skipz
  1274  0167  2962               	goto	u28_25
  1275  0168  0877               	movf	___lwdiv@divisor+1,w
  1276  0169  0279               	subwf	___lwdiv@dividend+1,w
  1277  016A  1D03               	skipz
  1278  016B  296E               	goto	u29_25
  1279  016C  0876               	movf	___lwdiv@divisor,w
  1280  016D  0278               	subwf	___lwdiv@dividend,w
  1281  016E                     u29_25:	
  1282  016E  1C03               	skipc
  1283  016F  2977               	goto	i1l791
  1284  0170  0876               	movf	___lwdiv@divisor,w
  1285  0171  02F8               	subwf	___lwdiv@dividend,f
  1286  0172  0877               	movf	___lwdiv@divisor+1,w
  1287  0173  1C03               	skipc
  1288  0174  03F9               	decf	___lwdiv@dividend+1,f
  1289  0175  02F9               	subwf	___lwdiv@dividend+1,f
  1290  0176  147B               	bsf	___lwdiv@quotient,0
  1291  0177                     i1l791:	
  1292  0177  3001               	movlw	1
  1293  0178                     u30_25:	
  1294  0178  1003               	clrc
  1295  0179  0CF7               	rrf	___lwdiv@divisor+1,f
  1296  017A  0CF6               	rrf	___lwdiv@divisor,f
  1297  017B  3EFF               	addlw	-1
  1298  017C  1D03               	skipz
  1299  017D  2978               	goto	u30_25
  1300  017E  3001               	movlw	1
  1301  017F  02FD               	subwf	___lwdiv@counter,f
  1302  0180  1D03               	btfss	3,2
  1303  0181  2961               	goto	i1l785
  1304  0182                     i1l795:	
  1305  0182  087C               	movf	___lwdiv@quotient+1,w
  1306  0183  00F7               	movwf	?___lwdiv+1
  1307  0184  087B               	movf	___lwdiv@quotient,w
  1308  0185  00F6               	movwf	?___lwdiv
  1309  0186  0008               	return
  1310  0187                     __end_of___lwdiv:	
  1311  007E                     btemp	set	126	;btemp
  1312  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _ledprint->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_TIM0_Callback
    _TIM0_Callback->_ledprint

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  5     5      0    1332
                                              5 BANK0      5     5      0
                      _TIM0_Callback
 ---------------------------------------------------------------------------------
 (2) _TIM0_Callback                                        2     2      0    1332
                                              3 BANK0      2     2      0
                           _ledprint
                            _segchar
 ---------------------------------------------------------------------------------
 (3) _segchar                                              2     0      2     234
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ledprint                                             3     1      2    1098
                                              0 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   _TIM0_Callback
     _ledprint
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _segchar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Feb 23 11:25:05 2018

            __CFG_CP$OFF 0000                       l65 0216                       _R1 002F  
                     _R2 002E                       _R3 002D                       _R4 002C  
  __end_of_TIM0_Callback 008B                      _GIE 005F                      _PR2 0092  
           __CFG_CPD$OFF 0000                      _isr 0187                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     ?_isr 0070  
                   _T0IE 005D                     _T0IF 005A                     _PEIE 005E  
                   i1l60 01B2                     i1l55 0191                     i1l99 014A  
                   _TMR0 0001             __CFG_WRT$OFF 0000                     _main 01F1  
                   _ncnt 0031                     btemp 007E                     start 0012  
                  ??_isr 0025                    ?_main 0070            __CFG_WDTE$OFF 0000  
        __end_of___lwdiv 0187          __end_of___lwmod 01F1                    i1l813 01E1  
                  i1l807 01C5                    i1l831 0107                    i1l823 00F3  
                  i1l809 01D3                    i1l817 01EC                    i1l841 0120  
                  i1l833 010C                    i1l825 00F8                    i1l835 0111  
                  i1l827 00FD                    i1l837 0116                    i1l829 0102  
                  i1l845 0125                    i1l791 0177                    i1l783 0153  
                  i1l839 011B                    i1l871 0058                    i1l863 0044  
                  i1l785 0161                    i1l795 0182                    i1l973 012A  
                  i1l879 006D                    i1l887 0081                    u30_25 0178  
                  u33_25 01C8                    u26_25 0156                    _PORTB 0006  
                  _PORTC 0007                    u35_25 01D9                    u28_25 0162  
                  u36_25 01E2                    u29_25 016E                    _TRISB 0086  
                  _TRISC 0087            __CFG_PWRTE$ON 0000          __end_of_segchar 014B  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 0217  
                 ??_main 002A                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TMR2IE 0461                   _TMR2IF 0061                   _TMR2ON 0092  
         ledprint@number 0020         __end_of_ledprint 00F2                ??___lwdiv 007A  
              ??___lwmod 0074                ??_segchar 0072                   saved_w 007E  
__end_of__initialization 001F           __pcstackCOMMON 0070               __pbssBANK0 002A  
             __pmaintext 01F1               __pintentry 0004                  _T2CKPS0 0090  
                _T2CKPS1 0091                  _TOUTPS0 0093                  _TOUTPS1 0094  
                _TOUTPS2 0095                  _TOUTPS3 0096                ?_ledprint 0020  
 __size_of_TIM0_Callback 0068                  ___lwdiv 014B                  ___lwmod 01BF  
                __ptext1 0187                  __ptext2 0023                  __ptext3 00F2  
                __ptext4 008B                  __ptext5 01BF                  __ptext6 014B  
                _n_count 0030             __size_of_isr 0038                  _segchar 00F2  
   end_of_initialization 001F               ??_ledprint 0022                _PORTCbits 0007  
          _TIM0_Callback 0023           ?_TIM0_Callback 0070      start_initialization 0015  
            __end_of_isr 01BF                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_ledprint 0067               segchar@seg 0070         ___lwdiv@dividend 0078  
               ?___lwdiv 0076                 ?___lwmod 0070          ??_TIM0_Callback 0023  
               ?_segchar 0070         ___lwdiv@quotient 007B        interrupt_function 0004  
       __size_of___lwdiv 003C         __size_of___lwmod 0032          ___lwdiv@divisor 0076  
       __size_of_segchar 0059          ___lwdiv@counter 007D                 _ledprint 008B  
          __size_of_main 0026                 intlevel1 0000         ___lwmod@dividend 0072  
             _TIM1_Count 002A               _OPTION_REG 0081          ___lwmod@divisor 0070  
        ___lwmod@counter 0075  
