

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Mar 17 17:54:40 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 1.44
    21                           ; Generated 14/09/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0001                     _TMR0	set	1
   133  0008                     _PORTD	set	8
   134  0005                     _PORTAbits	set	5
   135  005E                     _PEIE	set	94
   136  005F                     _GIE	set	95
   137  005D                     _T0IE	set	93
   138  0092                     _TMR2ON	set	146
   139  0090                     _T2CKPS0	set	144
   140  0091                     _T2CKPS1	set	145
   141  0096                     _TOUTPS3	set	150
   142  0095                     _TOUTPS2	set	149
   143  0094                     _TOUTPS1	set	148
   144  0093                     _TOUTPS0	set	147
   145  0061                     _TMR2IF	set	97
   146  005A                     _T0IF	set	90
   147  005A                     _TMR0IF	set	90
   148  005D                     _TMR0IE	set	93
   149  0081                     _OPTION_REG	set	129
   150  0092                     _PR2	set	146
   151  0088                     _TRISD	set	136
   152  042B                     _TRISA3	set	1067
   153  042A                     _TRISA2	set	1066
   154  0429                     _TRISA1	set	1065
   155  0428                     _TRISA0	set	1064
   156  0461                     _TMR2IE	set	1121
   157                           
   158                           	psect	cinit
   159  0015                     start_initialization:	
   160                           ; #config settings
   161                           
   162  0015                     __initialization:	
   163                           
   164                           ; Clear objects allocated to BANK0
   165  0015  1283               	bcf	3,5	;RP0=0, select bank0
   166  0016  1303               	bcf	3,6	;RP1=0, select bank0
   167  0017  01A9               	clrf	__pbssBANK0& (0+127)
   168  0018  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   169  0019  01AB               	clrf	(__pbssBANK0+2)& (0+127)
   170  001A  01AC               	clrf	(__pbssBANK0+3)& (0+127)
   171  001B  01AD               	clrf	(__pbssBANK0+4)& (0+127)
   172  001C  01AE               	clrf	(__pbssBANK0+5)& (0+127)
   173  001D  01AF               	clrf	(__pbssBANK0+6)& (0+127)
   174  001E  01B0               	clrf	(__pbssBANK0+7)& (0+127)
   175  001F                     end_of_initialization:	
   176                           ;End of C runtime variable initialization code
   177                           
   178  001F                     __end_of__initialization:	
   179  001F  0183               	clrf	3
   180  0020  120A  118A  29D2   	ljmp	_main	;jump to C main() function
   181                           
   182                           	psect	bssBANK0
   183  0029                     __pbssBANK0:	
   184  0029                     _TIM1_Count:	
   185  0029                     	ds	2
   186  002B                     _ncnt:	
   187  002B                     	ds	1
   188  002C                     _n_count:	
   189  002C                     	ds	1
   190  002D                     _R4:	
   191  002D                     	ds	1
   192  002E                     _R3:	
   193  002E                     	ds	1
   194  002F                     _R2:	
   195  002F                     	ds	1
   196  0030                     _R1:	
   197  0030                     	ds	1
   198                           
   199                           	psect	cstackCOMMON
   200  0070                     __pcstackCOMMON:	
   201  0070                     ?_TIM2_CallBack:	
   202  0070                     ?_isr:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?_Port_Init:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ?_segchar:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0070                     ??_segchar:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0070                     ?_Timer2_Init:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0070                     ?_main:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ?___lwmod:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     segchar@seg:	
   224                           ; 2 bytes @ 0x0
   225                           
   226  0070                     ___lwmod@divisor:	
   227                           ; 1 bytes @ 0x0
   228                           
   229                           
   230                           ; 2 bytes @ 0x0
   231  0070                     	ds	2
   232  0072                     ___lwmod@dividend:	
   233                           
   234                           ; 2 bytes @ 0x2
   235  0072                     	ds	2
   236  0074                     ??___lwmod:	
   237                           
   238                           ; 1 bytes @ 0x4
   239  0074                     	ds	1
   240  0075                     ___lwmod@counter:	
   241                           
   242                           ; 1 bytes @ 0x5
   243  0075                     	ds	1
   244  0076                     ?___lwdiv:	
   245  0076                     ___lwdiv@divisor:	
   246                           ; 2 bytes @ 0x6
   247                           
   248                           
   249                           ; 2 bytes @ 0x6
   250  0076                     	ds	2
   251  0078                     ___lwdiv@dividend:	
   252                           
   253                           ; 2 bytes @ 0x8
   254  0078                     	ds	2
   255  007A                     ??___lwdiv:	
   256                           
   257                           ; 1 bytes @ 0xA
   258  007A                     	ds	1
   259  007B                     ___lwdiv@quotient:	
   260                           
   261                           ; 2 bytes @ 0xB
   262  007B                     	ds	2
   263  007D                     ___lwdiv@counter:	
   264                           
   265                           ; 1 bytes @ 0xD
   266  007D                     	ds	1
   267                           
   268                           	psect	cstackBANK0
   269  0020                     __pcstackBANK0:	
   270  0020                     ?_ledprint:	
   271  0020                     ledprint@number:	
   272                           ; 1 bytes @ 0x0
   273                           
   274                           
   275                           ; 2 bytes @ 0x0
   276  0020                     	ds	2
   277  0022                     ??_ledprint:	
   278                           
   279                           ; 1 bytes @ 0x2
   280  0022                     	ds	1
   281  0023                     ??_TIM2_CallBack:	
   282                           
   283                           ; 1 bytes @ 0x3
   284  0023                     	ds	1
   285  0024                     ??_isr:	
   286                           
   287                           ; 1 bytes @ 0x4
   288  0024                     	ds	5
   289  0029                     ??_Port_Init:	
   290  0029                     ??_Timer2_Init:	
   291                           ; 1 bytes @ 0x9
   292                           
   293  0029                     ??_main:	
   294                           ; 1 bytes @ 0x9
   295                           
   296                           
   297                           	psect	maintext
   298  01D2                     __pmaintext:	
   299                           ; 1 bytes @ 0x9
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 148 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0, pclath, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : B00/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   319 ;;      Params:         0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0
   322 ;;      Totals:         0       0       0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels required when called:    5
   325 ;; This function calls:
   326 ;;		_Port_Init
   327 ;;		_Timer2_Init
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           
   334                           ;psect for function _main
   335  01D2                     _main:	
   336                           
   337                           ;main.c: 150: Port_Init();
   338                           
   339                           ;incstack = 0
   340                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   341  01D2  120A  118A  21E7  120A  118A  	fcall	_Port_Init
   342                           
   343                           ;main.c: 151: T0IE=1;
   344  01D7  168B               	bsf	11,5	;volatile
   345                           
   346                           ;main.c: 152: GIE=1;
   347  01D8  178B               	bsf	11,7	;volatile
   348                           
   349                           ;main.c: 153: PEIE=1;
   350  01D9  170B               	bsf	11,6	;volatile
   351                           
   352                           ;main.c: 154: OPTION_REG=0b00000010;
   353  01DA  3002               	movlw	2
   354  01DB  1683               	bsf	3,5	;RP0=1, select bank1
   355  01DC  1303               	bcf	3,6	;RP1=0, select bank1
   356  01DD  0081               	movwf	1	;volatile
   357                           
   358                           ;main.c: 155: Timer2_Init();
   359  01DE  120A  118A  21FA  120A  118A  	fcall	_Timer2_Init
   360                           
   361                           ;main.c: 156: TMR0=0;
   362  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   363  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   364  01E5  0181               	clrf	1	;volatile
   365  01E6                     l113:	
   366                           ;main.c: 157: while(1)
   367                           
   368                           
   369                           ;main.c: 158: {
   370  01E6  29E6               	goto	l113
   371  01E7                     __end_of_main:	
   372                           
   373                           	psect	text1
   374  01FA                     __ptext1:	
   375 ;; *************** function _Timer2_Init *****************
   376 ;; Defined at:
   377 ;;		line 122 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   391 ;;      Params:         0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0
   394 ;;      Totals:         0       0       0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels used:    1
   397 ;; Hardware stack levels required when called:    4
   398 ;; This function calls:
   399 ;;		Nothing
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           
   406                           ;psect for function _Timer2_Init
   407  01FA                     _Timer2_Init:	
   408                           
   409                           ;main.c: 126: TOUTPS0=1;
   410                           
   411                           ;incstack = 0
   412                           ; Regs used in _Timer2_Init: [wreg]
   413  01FA  1283               	bcf	3,5	;RP0=0, select bank0
   414  01FB  1303               	bcf	3,6	;RP1=0, select bank0
   415  01FC  1592               	bsf	18,3	;volatile
   416                           
   417                           ;main.c: 127: TOUTPS1=0;
   418  01FD  1212               	bcf	18,4	;volatile
   419                           
   420                           ;main.c: 128: TOUTPS2=0;
   421  01FE  1292               	bcf	18,5	;volatile
   422                           
   423                           ;main.c: 129: TOUTPS3=1;
   424  01FF  1712               	bsf	18,6	;volatile
   425                           
   426                           ;main.c: 133: T2CKPS1=1;
   427  0200  1492               	bsf	18,1	;volatile
   428                           
   429                           ;main.c: 134: T2CKPS0=1;
   430  0201  1412               	bsf	18,0	;volatile
   431                           
   432                           ;main.c: 140: PR2=0xF9;
   433  0202  30F9               	movlw	249
   434  0203  1683               	bsf	3,5	;RP0=1, select bank1
   435  0204  1303               	bcf	3,6	;RP1=0, select bank1
   436  0205  0092               	movwf	18	;volatile
   437                           
   438                           ;main.c: 141: TMR2IE=1;
   439  0206  148C               	bsf	12,1	;volatile
   440                           
   441                           ;main.c: 142: TMR2ON=1;
   442  0207  1283               	bcf	3,5	;RP0=0, select bank0
   443  0208  1303               	bcf	3,6	;RP1=0, select bank0
   444  0209  1512               	bsf	18,2	;volatile
   445  020A  0008               	return
   446  020B                     __end_of_Timer2_Init:	
   447                           
   448                           	psect	text2
   449  01E7                     __ptext2:	
   450 ;; *************** function _Port_Init *****************
   451 ;; Defined at:
   452 ;;		line 34 in file "main.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		status,2
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    4
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _Port_Init
   482  01E7                     _Port_Init:	
   483                           
   484                           ;main.c: 36: TRISA0=0;
   485                           
   486                           ;incstack = 0
   487                           ; Regs used in _Port_Init: [status,2]
   488  01E7  1683               	bsf	3,5	;RP0=1, select bank1
   489  01E8  1303               	bcf	3,6	;RP1=0, select bank1
   490  01E9  1005               	bcf	5,0	;volatile
   491                           
   492                           ;main.c: 37: TRISA1=0;
   493  01EA  1085               	bcf	5,1	;volatile
   494                           
   495                           ;main.c: 38: TRISA2=0;
   496  01EB  1105               	bcf	5,2	;volatile
   497                           
   498                           ;main.c: 39: TRISA3=0;
   499  01EC  1185               	bcf	5,3	;volatile
   500                           
   501                           ;main.c: 41: PORTAbits.RA0=0;
   502  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   503  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   504  01EF  1005               	bcf	5,0	;volatile
   505                           
   506                           ;main.c: 42: PORTAbits.RA1=0;
   507  01F0  1085               	bcf	5,1	;volatile
   508                           
   509                           ;main.c: 43: PORTAbits.RA2=0;
   510  01F1  1105               	bcf	5,2	;volatile
   511                           
   512                           ;main.c: 44: PORTAbits.RA3=0;
   513  01F2  1185               	bcf	5,3	;volatile
   514                           
   515                           ;main.c: 46: TRISD=0x00;
   516  01F3  1683               	bsf	3,5	;RP0=1, select bank1
   517  01F4  1303               	bcf	3,6	;RP1=0, select bank1
   518  01F5  0188               	clrf	8	;volatile
   519                           
   520                           ;main.c: 47: PORTD=0x00;
   521  01F6  1283               	bcf	3,5	;RP0=0, select bank0
   522  01F7  1303               	bcf	3,6	;RP1=0, select bank0
   523  01F8  0188               	clrf	8	;volatile
   524  01F9  0008               	return
   525  01FA                     __end_of_Port_Init:	
   526                           
   527                           	psect	text3
   528  0168                     __ptext3:	
   529 ;; *************** function _isr *****************
   530 ;; Defined at:
   531 ;;		line 13 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0
   547 ;;      Temps:          0       5       0       0       0
   548 ;;      Totals:         0       5       0       0       0
   549 ;;Total ram usage:        5 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    3
   552 ;; This function calls:
   553 ;;		_TIM2_CallBack
   554 ;; This function is called by:
   555 ;;		Interrupt level 1
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           
   560                           ;psect for function _isr
   561  0168                     _isr:	
   562                           
   563                           ;main.c: 15: if(TMR0IE&&TMR0IF)
   564  0168  1A8B               	btfsc	11,5	;volatile
   565  0169  1D0B               	btfss	11,2	;volatile
   566  016A  2972               	goto	i1l71
   567                           
   568                           ;main.c: 16: {
   569                           ;main.c: 17: TIM2_CallBack();
   570  016B  120A  118A  20DF  120A  118A  	fcall	_TIM2_CallBack
   571                           
   572                           ;main.c: 18: T0IF=0;
   573  0170  110B               	bcf	11,2	;volatile
   574                           
   575                           ;main.c: 19: }
   576  0171  2993               	goto	i1l76
   577  0172                     i1l71:	
   578                           
   579                           ;main.c: 20: else if(TMR2IE&&TMR2IF)
   580  0172  1683               	bsf	3,5	;RP0=1, select bank1
   581  0173  1303               	bcf	3,6	;RP1=0, select bank1
   582  0174  1C8C               	btfss	12,1	;volatile
   583  0175  2993               	goto	i1l76
   584  0176  1283               	bcf	3,5	;RP0=0, select bank0
   585  0177  1303               	bcf	3,6	;RP1=0, select bank0
   586  0178  1C8C               	btfss	12,1	;volatile
   587  0179  2993               	goto	i1l76
   588                           
   589                           ;main.c: 21: {
   590                           ;main.c: 22: TMR2IF=0;
   591  017A  108C               	bcf	12,1	;volatile
   592                           
   593                           ;main.c: 23: ncnt++;
   594  017B  3001               	movlw	1
   595  017C  00A4               	movwf	??_isr
   596  017D  0824               	movf	??_isr,w
   597  017E  07AB               	addwf	_ncnt,f
   598                           
   599                           ;main.c: 24: if(ncnt>25)
   600  017F  301A               	movlw	26
   601  0180  022B               	subwf	_ncnt,w
   602  0181  1C03               	skipc
   603  0182  2993               	goto	i1l76
   604                           
   605                           ;main.c: 25: {
   606                           ;main.c: 26: ncnt=0;
   607  0183  01AB               	clrf	_ncnt
   608                           
   609                           ;main.c: 27: TIM1_Count++;
   610  0184  3001               	movlw	1
   611  0185  07A9               	addwf	_TIM1_Count,f
   612  0186  1803               	skipnc
   613  0187  0AAA               	incf	_TIM1_Count+1,f
   614  0188  3000               	movlw	0
   615  0189  07AA               	addwf	_TIM1_Count+1,f
   616                           
   617                           ;main.c: 28: if(TIM1_Count>9999) TIM1_Count=0;
   618  018A  3027               	movlw	39
   619  018B  022A               	subwf	_TIM1_Count+1,w
   620  018C  3010               	movlw	16
   621  018D  1903               	skipnz
   622  018E  0229               	subwf	_TIM1_Count,w
   623  018F  1C03               	skipc
   624  0190  2993               	goto	i1l76
   625  0191  01A9               	clrf	_TIM1_Count
   626  0192  01AA               	clrf	_TIM1_Count+1
   627  0193                     i1l76:	
   628  0193  1283               	bcf	3,5	;RP0=0, select bank0
   629  0194  1303               	bcf	3,6	;RP1=0, select bank0
   630  0195  0828               	movf	??_isr+4,w
   631  0196  00FF               	movwf	127
   632  0197  0827               	movf	??_isr+3,w
   633  0198  008A               	movwf	10
   634  0199  0826               	movf	??_isr+2,w
   635  019A  0084               	movwf	4
   636  019B  0E25               	swapf	(??_isr+1)^0,w
   637  019C  0083               	movwf	3
   638  019D  0EFE               	swapf	126,f
   639  019E  0E7E               	swapf	126,w
   640  019F  0009               	retfie
   641  01A0                     __end_of_isr:	
   642                           
   643                           	psect	intentry
   644  0004                     __pintentry:	
   645                           ;incstack = 0
   646                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   647                           
   648  0004                     interrupt_function:	
   649  007E                     saved_w	set	btemp
   650  0004  00FE               	movwf	btemp
   651  0005  0E03               	swapf	3,w
   652  0006  1283               	bcf	3,5	;RP0=0, select bank0
   653  0007  1303               	bcf	3,6	;RP1=0, select bank0
   654  0008  00A5               	movwf	??_isr+1
   655  0009  0804               	movf	4,w
   656  000A  00A6               	movwf	??_isr+2
   657  000B  080A               	movf	10,w
   658  000C  00A7               	movwf	??_isr+3
   659  000D  087F               	movf	btemp+1,w
   660  000E  00A8               	movwf	??_isr+4
   661  000F  120A  118A  2968   	ljmp	_isr
   662                           
   663                           	psect	text4
   664  00DF                     __ptext4:	
   665 ;; *************** function _TIM2_CallBack *****************
   666 ;; Defined at:
   667 ;;		line 89 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          0       1       0       0       0
   684 ;;      Totals:         0       1       0       0       0
   685 ;;Total ram usage:        1 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    2
   688 ;; This function calls:
   689 ;;		_ledprint
   690 ;;		_segchar
   691 ;; This function is called by:
   692 ;;		_isr
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _TIM2_CallBack
   698  00DF                     _TIM2_CallBack:	
   699                           
   700                           ;main.c: 91: ledprint(TIM1_Count);
   701                           
   702                           ;incstack = 0
   703                           ; Regs used in _TIM2_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   704  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   705  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   706  00E1  082A               	movf	_TIM1_Count+1,w
   707  00E2  00A1               	movwf	ledprint@number+1
   708  00E3  0829               	movf	_TIM1_Count,w
   709  00E4  00A0               	movwf	ledprint@number
   710  00E5  120A  118A  2023  120A  118A  	fcall	_ledprint
   711                           
   712                           ;main.c: 93: if(n_count==0)
   713  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   714  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   715  00EC  082C               	movf	_n_count,w
   716  00ED  1D03               	btfss	3,2
   717  00EE  28F9               	goto	i1l826
   718                           
   719                           ;main.c: 94: {
   720                           ;main.c: 95: PORTAbits.RA3=0;
   721  00EF  1185               	bcf	5,3	;volatile
   722                           
   723                           ;main.c: 96: segchar(R1);
   724  00F0  0830               	movf	_R1,w
   725  00F1  120A  118A  208A  120A  118A  	fcall	_segchar
   726                           
   727                           ;main.c: 97: PORTAbits.RA0=1;
   728  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   729  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   730  00F8  1405               	bsf	5,0	;volatile
   731  00F9                     i1l826:	
   732                           
   733                           ;main.c: 98: }
   734                           ;main.c: 99: if(n_count==1)
   735  00F9  032C               	decf	_n_count,w
   736  00FA  1D03               	btfss	3,2
   737  00FB  2906               	goto	i1l834
   738                           
   739                           ;main.c: 100: {
   740                           ;main.c: 101: PORTAbits.RA0=0;
   741  00FC  1005               	bcf	5,0	;volatile
   742                           
   743                           ;main.c: 102: segchar(R2);
   744  00FD  082F               	movf	_R2,w
   745  00FE  120A  118A  208A  120A  118A  	fcall	_segchar
   746                           
   747                           ;main.c: 103: PORTAbits.RA1=1;
   748  0103  1283               	bcf	3,5	;RP0=0, select bank0
   749  0104  1303               	bcf	3,6	;RP1=0, select bank0
   750  0105  1485               	bsf	5,1	;volatile
   751  0106                     i1l834:	
   752                           
   753                           ;main.c: 104: }
   754                           ;main.c: 105: if(n_count==2)
   755  0106  3002               	movlw	2
   756  0107  062C               	xorwf	_n_count,w
   757  0108  1D03               	btfss	3,2
   758  0109  2914               	goto	i1l842
   759                           
   760                           ;main.c: 106: {
   761                           ;main.c: 107: PORTAbits.RA1=0;
   762  010A  1085               	bcf	5,1	;volatile
   763                           
   764                           ;main.c: 108: segchar(R3);
   765  010B  082E               	movf	_R3,w
   766  010C  120A  118A  208A  120A  118A  	fcall	_segchar
   767                           
   768                           ;main.c: 109: PORTAbits.RA2=1;
   769  0111  1283               	bcf	3,5	;RP0=0, select bank0
   770  0112  1303               	bcf	3,6	;RP1=0, select bank0
   771  0113  1505               	bsf	5,2	;volatile
   772  0114                     i1l842:	
   773                           
   774                           ;main.c: 110: }
   775                           ;main.c: 111: if(n_count==3)
   776  0114  3003               	movlw	3
   777  0115  062C               	xorwf	_n_count,w
   778  0116  1D03               	btfss	3,2
   779  0117  2922               	goto	i1l850
   780                           
   781                           ;main.c: 112: {
   782                           ;main.c: 113: PORTAbits.RA2=0;
   783  0118  1105               	bcf	5,2	;volatile
   784                           
   785                           ;main.c: 114: segchar(R4);
   786  0119  082D               	movf	_R4,w
   787  011A  120A  118A  208A  120A  118A  	fcall	_segchar
   788                           
   789                           ;main.c: 115: PORTAbits.RA3=1;
   790  011F  1283               	bcf	3,5	;RP0=0, select bank0
   791  0120  1303               	bcf	3,6	;RP1=0, select bank0
   792  0121  1585               	bsf	5,3	;volatile
   793  0122                     i1l850:	
   794                           
   795                           ;main.c: 116: }
   796                           ;main.c: 117: n_count++;
   797  0122  3001               	movlw	1
   798  0123  00A3               	movwf	??_TIM2_CallBack
   799  0124  0823               	movf	??_TIM2_CallBack,w
   800  0125  07AC               	addwf	_n_count,f
   801                           
   802                           ;main.c: 118: if (n_count>3) n_count=0;
   803  0126  3004               	movlw	4
   804  0127  022C               	subwf	_n_count,w
   805  0128  1C03               	skipc
   806  0129  0008               	return
   807  012A  01AC               	clrf	_n_count
   808  012B  0008               	return
   809  012C                     __end_of_TIM2_CallBack:	
   810                           
   811                           	psect	text5
   812  008A                     __ptext5:	
   813 ;; *************** function _segchar *****************
   814 ;; Defined at:
   815 ;;		line 67 in file "main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  seg             1    wreg     unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  seg             1    0[COMMON] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         1       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         1       0       0       0       0
   833 ;;Total ram usage:        1 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_TIM2_CallBack
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _segchar
   844  008A                     _segchar:	
   845                           
   846                           ;incstack = 0
   847                           ; Regs used in _segchar: [wreg-fsr0h+status,2+status,0]
   848                           ;segchar@seg stored from wreg
   849  008A  00F0               	movwf	segchar@seg
   850                           
   851                           ;main.c: 69: switch(seg)
   852  008B  28BE               	goto	i1l814
   853  008C                     i1l792:	
   854                           ;main.c: 70: {
   855                           ;main.c: 71: case 1: PORTD = 0b11111001; break;
   856                           
   857  008C  30F9               	movlw	249
   858  008D  1283               	bcf	3,5	;RP0=0, select bank0
   859  008E  1303               	bcf	3,6	;RP1=0, select bank0
   860  008F  0088               	movwf	8	;volatile
   861  0090  0008               	return
   862  0091                     i1l794:	
   863                           ;main.c: 72: case 2: PORTD = 0b10100100; break;
   864                           
   865  0091  30A4               	movlw	164
   866  0092  1283               	bcf	3,5	;RP0=0, select bank0
   867  0093  1303               	bcf	3,6	;RP1=0, select bank0
   868  0094  0088               	movwf	8	;volatile
   869  0095  0008               	return
   870  0096                     i1l796:	
   871                           ;main.c: 73: case 3: PORTD = 0b10110000; break;
   872                           
   873  0096  30B0               	movlw	176
   874  0097  1283               	bcf	3,5	;RP0=0, select bank0
   875  0098  1303               	bcf	3,6	;RP1=0, select bank0
   876  0099  0088               	movwf	8	;volatile
   877  009A  0008               	return
   878  009B                     i1l798:	
   879                           ;main.c: 74: case 4: PORTD = 0b10011001; break;
   880                           
   881  009B  3099               	movlw	153
   882  009C  1283               	bcf	3,5	;RP0=0, select bank0
   883  009D  1303               	bcf	3,6	;RP1=0, select bank0
   884  009E  0088               	movwf	8	;volatile
   885  009F  0008               	return
   886  00A0                     i1l800:	
   887                           ;main.c: 75: case 5: PORTD = 0b10010010; break;
   888                           
   889  00A0  3092               	movlw	146
   890  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   891  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   892  00A3  0088               	movwf	8	;volatile
   893  00A4  0008               	return
   894  00A5                     i1l802:	
   895                           ;main.c: 76: case 6: PORTD = 0b10000010; break;
   896                           
   897  00A5  3082               	movlw	130
   898  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   899  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   900  00A8  0088               	movwf	8	;volatile
   901  00A9  0008               	return
   902  00AA                     i1l804:	
   903                           ;main.c: 77: case 7: PORTD = 0b11111000; break;
   904                           
   905  00AA  30F8               	movlw	248
   906  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   907  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   908  00AD  0088               	movwf	8	;volatile
   909  00AE  0008               	return
   910  00AF                     i1l806:	
   911                           ;main.c: 78: case 8: PORTD = 0b10000000; break;
   912                           
   913  00AF  3080               	movlw	128
   914  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   915  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   916  00B2  0088               	movwf	8	;volatile
   917  00B3  0008               	return
   918  00B4                     i1l808:	
   919                           ;main.c: 79: case 9: PORTD = 0b10010000; break;
   920                           
   921  00B4  3090               	movlw	144
   922  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   923  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   924  00B7  0088               	movwf	8	;volatile
   925  00B8  0008               	return
   926  00B9                     i1l810:	
   927                           ;main.c: 80: case 0: PORTD = 0b11000000; break;
   928                           
   929  00B9  30C0               	movlw	192
   930  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   931  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   932  00BC  0088               	movwf	8	;volatile
   933                           
   934                           ;main.c: 81: }
   935  00BD  0008               	return
   936  00BE                     i1l814:	
   937  00BE  0870               	movf	segchar@seg,w
   938                           
   939                           ; Switch size 1, requested type "space"
   940                           ; Number of cases is 10, Range of values is 0 to 9
   941                           ; switch strategies available:
   942                           ; Name         Instructions Cycles
   943                           ; simple_byte           31    16 (average)
   944                           ; direct_byte           38     8 (fixed)
   945                           ; jumptable            260     6 (fixed)
   946                           ;	Chosen strategy is simple_byte
   947  00BF  3A00               	xorlw	0	; case 0
   948  00C0  1903               	skipnz
   949  00C1  28B9               	goto	i1l810
   950  00C2  3A01               	xorlw	1	; case 1
   951  00C3  1903               	skipnz
   952  00C4  288C               	goto	i1l792
   953  00C5  3A03               	xorlw	3	; case 2
   954  00C6  1903               	skipnz
   955  00C7  2891               	goto	i1l794
   956  00C8  3A01               	xorlw	1	; case 3
   957  00C9  1903               	skipnz
   958  00CA  2896               	goto	i1l796
   959  00CB  3A07               	xorlw	7	; case 4
   960  00CC  1903               	skipnz
   961  00CD  289B               	goto	i1l798
   962  00CE  3A01               	xorlw	1	; case 5
   963  00CF  1903               	skipnz
   964  00D0  28A0               	goto	i1l800
   965  00D1  3A03               	xorlw	3	; case 6
   966  00D2  1903               	skipnz
   967  00D3  28A5               	goto	i1l802
   968  00D4  3A01               	xorlw	1	; case 7
   969  00D5  1903               	skipnz
   970  00D6  28AA               	goto	i1l804
   971  00D7  3A0F               	xorlw	15	; case 8
   972  00D8  1903               	skipnz
   973  00D9  28AF               	goto	i1l806
   974  00DA  3A01               	xorlw	1	; case 9
   975  00DB  1903               	skipnz
   976  00DC  28B4               	goto	i1l808
   977  00DD  28DE               	goto	i1l97
   978  00DE                     i1l97:	
   979  00DE  0008               	return
   980  00DF                     __end_of_segchar:	
   981                           
   982                           	psect	text6
   983  0023                     __ptext6:	
   984 ;; *************** function _ledprint *****************
   985 ;; Defined at:
   986 ;;		line 54 in file "main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  number          2    0[BANK0 ] unsigned int 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       2       0       0       0
  1001 ;;      Locals:         0       0       0       0       0
  1002 ;;      Temps:          0       1       0       0       0
  1003 ;;      Totals:         0       3       0       0       0
  1004 ;;Total ram usage:        3 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    1
  1007 ;; This function calls:
  1008 ;;		___lwdiv
  1009 ;;		___lwmod
  1010 ;; This function is called by:
  1011 ;;		_TIM2_CallBack
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _ledprint
  1017  0023                     _ledprint:	
  1018                           
  1019                           ;main.c: 57: R1 = number%10;
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in _ledprint: [wreg+status,2+status,0+pclath+cstack]
  1023  0023  300A               	movlw	10
  1024  0024  00F0               	movwf	___lwmod@divisor
  1025  0025  3000               	movlw	0
  1026  0026  00F1               	movwf	___lwmod@divisor+1
  1027  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0029  0821               	movf	ledprint@number+1,w
  1030  002A  00F3               	movwf	___lwmod@dividend+1
  1031  002B  0820               	movf	ledprint@number,w
  1032  002C  00F2               	movwf	___lwmod@dividend
  1033  002D  120A  118A  21A0  120A  118A  	fcall	___lwmod
  1034  0032  0870               	movf	?___lwmod,w
  1035  0033  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0034  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0035  00A2               	movwf	??_ledprint
  1038  0036  0822               	movf	??_ledprint,w
  1039  0037  00B0               	movwf	_R1
  1040                           
  1041                           ;main.c: 58: R2 = number%100/10;
  1042  0038  300A               	movlw	10
  1043  0039  00F6               	movwf	___lwdiv@divisor
  1044  003A  3000               	movlw	0
  1045  003B  00F7               	movwf	___lwdiv@divisor+1
  1046  003C  0821               	movf	ledprint@number+1,w
  1047  003D  00F3               	movwf	___lwmod@dividend+1
  1048  003E  0820               	movf	ledprint@number,w
  1049  003F  00F2               	movwf	___lwmod@dividend
  1050  0040  3064               	movlw	100
  1051  0041  00F0               	movwf	___lwmod@divisor
  1052  0042  3000               	movlw	0
  1053  0043  00F1               	movwf	___lwmod@divisor+1
  1054  0044  120A  118A  21A0  120A  118A  	fcall	___lwmod
  1055  0049  0871               	movf	?___lwmod+1,w
  1056  004A  00F9               	movwf	___lwdiv@dividend+1
  1057  004B  0870               	movf	?___lwmod,w
  1058  004C  00F8               	movwf	___lwdiv@dividend
  1059  004D  120A  118A  212C  120A  118A  	fcall	___lwdiv
  1060  0052  0876               	movf	?___lwdiv,w
  1061  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0055  00A2               	movwf	??_ledprint
  1064  0056  0822               	movf	??_ledprint,w
  1065  0057  00AF               	movwf	_R2
  1066                           
  1067                           ;main.c: 59: R3 = number%1000/100;
  1068  0058  3064               	movlw	100
  1069  0059  00F6               	movwf	___lwdiv@divisor
  1070  005A  3000               	movlw	0
  1071  005B  00F7               	movwf	___lwdiv@divisor+1
  1072  005C  0821               	movf	ledprint@number+1,w
  1073  005D  00F3               	movwf	___lwmod@dividend+1
  1074  005E  0820               	movf	ledprint@number,w
  1075  005F  00F2               	movwf	___lwmod@dividend
  1076  0060  30E8               	movlw	232
  1077  0061  00F0               	movwf	___lwmod@divisor
  1078  0062  3003               	movlw	3
  1079  0063  00F1               	movwf	___lwmod@divisor+1
  1080  0064  120A  118A  21A0  120A  118A  	fcall	___lwmod
  1081  0069  0871               	movf	?___lwmod+1,w
  1082  006A  00F9               	movwf	___lwdiv@dividend+1
  1083  006B  0870               	movf	?___lwmod,w
  1084  006C  00F8               	movwf	___lwdiv@dividend
  1085  006D  120A  118A  212C  120A  118A  	fcall	___lwdiv
  1086  0072  0876               	movf	?___lwdiv,w
  1087  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0075  00A2               	movwf	??_ledprint
  1090  0076  0822               	movf	??_ledprint,w
  1091  0077  00AE               	movwf	_R3
  1092                           
  1093                           ;main.c: 60: R4 = number/1000;
  1094  0078  30E8               	movlw	232
  1095  0079  00F6               	movwf	___lwdiv@divisor
  1096  007A  3003               	movlw	3
  1097  007B  00F7               	movwf	___lwdiv@divisor+1
  1098  007C  0821               	movf	ledprint@number+1,w
  1099  007D  00F9               	movwf	___lwdiv@dividend+1
  1100  007E  0820               	movf	ledprint@number,w
  1101  007F  00F8               	movwf	___lwdiv@dividend
  1102  0080  120A  118A  212C   	fcall	___lwdiv
  1103  0083  0876               	movf	?___lwdiv,w
  1104  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0086  00A2               	movwf	??_ledprint
  1107  0087  0822               	movf	??_ledprint,w
  1108  0088  00AD               	movwf	_R4
  1109  0089  0008               	return
  1110  008A                     __end_of_ledprint:	
  1111                           
  1112                           	psect	text7
  1113  01A0                     __ptext7:	
  1114 ;; *************** function ___lwmod *****************
  1115 ;; Defined at:
  1116 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  divisor         2    0[COMMON] unsigned int 
  1119 ;;  dividend        2    2[COMMON] unsigned int 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  counter         1    5[COMMON] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  2    0[COMMON] unsigned int 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         4       0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0
  1133 ;;      Temps:          1       0       0       0       0
  1134 ;;      Totals:         6       0       0       0       0
  1135 ;;Total ram usage:        6 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_ledprint
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           
  1145                           ;psect for function ___lwmod
  1146  01A0                     ___lwmod:	
  1147                           
  1148                           ;incstack = 0
  1149                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1150  01A0  0870               	movf	___lwmod@divisor,w
  1151  01A1  0471               	iorwf	___lwmod@divisor+1,w
  1152  01A2  1903               	btfsc	3,2
  1153  01A3  29CD               	goto	i1l784
  1154  01A4  01F5               	clrf	___lwmod@counter
  1155  01A5  0AF5               	incf	___lwmod@counter,f
  1156  01A6                     i1l774:	
  1157  01A6  1BF1               	btfsc	___lwmod@divisor+1,7
  1158  01A7  29B4               	goto	i1l776
  1159  01A8  3001               	movlw	1
  1160  01A9                     u33_25:	
  1161  01A9  1003               	clrc
  1162  01AA  0DF0               	rlf	___lwmod@divisor,f
  1163  01AB  0DF1               	rlf	___lwmod@divisor+1,f
  1164  01AC  3EFF               	addlw	-1
  1165  01AD  1D03               	skipz
  1166  01AE  29A9               	goto	u33_25
  1167  01AF  3001               	movlw	1
  1168  01B0  00F4               	movwf	??___lwmod
  1169  01B1  0874               	movf	??___lwmod,w
  1170  01B2  07F5               	addwf	___lwmod@counter,f
  1171  01B3  29A6               	goto	i1l774
  1172  01B4                     i1l776:	
  1173  01B4  0871               	movf	___lwmod@divisor+1,w
  1174  01B5  0273               	subwf	___lwmod@dividend+1,w
  1175  01B6  1D03               	skipz
  1176  01B7  29BA               	goto	u35_25
  1177  01B8  0870               	movf	___lwmod@divisor,w
  1178  01B9  0272               	subwf	___lwmod@dividend,w
  1179  01BA                     u35_25:	
  1180  01BA  1C03               	skipc
  1181  01BB  29C2               	goto	i1l780
  1182  01BC  0870               	movf	___lwmod@divisor,w
  1183  01BD  02F2               	subwf	___lwmod@dividend,f
  1184  01BE  0871               	movf	___lwmod@divisor+1,w
  1185  01BF  1C03               	skipc
  1186  01C0  03F3               	decf	___lwmod@dividend+1,f
  1187  01C1  02F3               	subwf	___lwmod@dividend+1,f
  1188  01C2                     i1l780:	
  1189  01C2  3001               	movlw	1
  1190  01C3                     u36_25:	
  1191  01C3  1003               	clrc
  1192  01C4  0CF1               	rrf	___lwmod@divisor+1,f
  1193  01C5  0CF0               	rrf	___lwmod@divisor,f
  1194  01C6  3EFF               	addlw	-1
  1195  01C7  1D03               	skipz
  1196  01C8  29C3               	goto	u36_25
  1197  01C9  3001               	movlw	1
  1198  01CA  02F5               	subwf	___lwmod@counter,f
  1199  01CB  1D03               	btfss	3,2
  1200  01CC  29B4               	goto	i1l776
  1201  01CD                     i1l784:	
  1202  01CD  0873               	movf	___lwmod@dividend+1,w
  1203  01CE  00F1               	movwf	?___lwmod+1
  1204  01CF  0872               	movf	___lwmod@dividend,w
  1205  01D0  00F0               	movwf	?___lwmod
  1206  01D1  0008               	return
  1207  01D2                     __end_of___lwmod:	
  1208                           
  1209                           	psect	text8
  1210  012C                     __ptext8:	
  1211 ;; *************** function ___lwdiv *****************
  1212 ;; Defined at:
  1213 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  divisor         2    6[COMMON] unsigned int 
  1216 ;;  dividend        2    8[COMMON] unsigned int 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  quotient        2   11[COMMON] unsigned int 
  1219 ;;  counter         1   13[COMMON] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  2    6[COMMON] unsigned int 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         4       0       0       0       0
  1230 ;;      Locals:         3       0       0       0       0
  1231 ;;      Temps:          1       0       0       0       0
  1232 ;;      Totals:         8       0       0       0       0
  1233 ;;Total ram usage:        8 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_ledprint
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           
  1243                           ;psect for function ___lwdiv
  1244  012C                     ___lwdiv:	
  1245                           
  1246                           ;incstack = 0
  1247                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1248  012C  01FB               	clrf	___lwdiv@quotient
  1249  012D  01FC               	clrf	___lwdiv@quotient+1
  1250  012E  0876               	movf	___lwdiv@divisor,w
  1251  012F  0477               	iorwf	___lwdiv@divisor+1,w
  1252  0130  1903               	btfsc	3,2
  1253  0131  2963               	goto	i1l762
  1254  0132  01FD               	clrf	___lwdiv@counter
  1255  0133  0AFD               	incf	___lwdiv@counter,f
  1256  0134                     i1l750:	
  1257  0134  1BF7               	btfsc	___lwdiv@divisor+1,7
  1258  0135  2942               	goto	i1l752
  1259  0136  3001               	movlw	1
  1260  0137                     u26_25:	
  1261  0137  1003               	clrc
  1262  0138  0DF6               	rlf	___lwdiv@divisor,f
  1263  0139  0DF7               	rlf	___lwdiv@divisor+1,f
  1264  013A  3EFF               	addlw	-1
  1265  013B  1D03               	skipz
  1266  013C  2937               	goto	u26_25
  1267  013D  3001               	movlw	1
  1268  013E  00FA               	movwf	??___lwdiv
  1269  013F  087A               	movf	??___lwdiv,w
  1270  0140  07FD               	addwf	___lwdiv@counter,f
  1271  0141  2934               	goto	i1l750
  1272  0142                     i1l752:	
  1273  0142  3001               	movlw	1
  1274  0143                     u28_25:	
  1275  0143  1003               	clrc
  1276  0144  0DFB               	rlf	___lwdiv@quotient,f
  1277  0145  0DFC               	rlf	___lwdiv@quotient+1,f
  1278  0146  3EFF               	addlw	-1
  1279  0147  1D03               	skipz
  1280  0148  2943               	goto	u28_25
  1281  0149  0877               	movf	___lwdiv@divisor+1,w
  1282  014A  0279               	subwf	___lwdiv@dividend+1,w
  1283  014B  1D03               	skipz
  1284  014C  294F               	goto	u29_25
  1285  014D  0876               	movf	___lwdiv@divisor,w
  1286  014E  0278               	subwf	___lwdiv@dividend,w
  1287  014F                     u29_25:	
  1288  014F  1C03               	skipc
  1289  0150  2958               	goto	i1l758
  1290  0151  0876               	movf	___lwdiv@divisor,w
  1291  0152  02F8               	subwf	___lwdiv@dividend,f
  1292  0153  0877               	movf	___lwdiv@divisor+1,w
  1293  0154  1C03               	skipc
  1294  0155  03F9               	decf	___lwdiv@dividend+1,f
  1295  0156  02F9               	subwf	___lwdiv@dividend+1,f
  1296  0157  147B               	bsf	___lwdiv@quotient,0
  1297  0158                     i1l758:	
  1298  0158  3001               	movlw	1
  1299  0159                     u30_25:	
  1300  0159  1003               	clrc
  1301  015A  0CF7               	rrf	___lwdiv@divisor+1,f
  1302  015B  0CF6               	rrf	___lwdiv@divisor,f
  1303  015C  3EFF               	addlw	-1
  1304  015D  1D03               	skipz
  1305  015E  2959               	goto	u30_25
  1306  015F  3001               	movlw	1
  1307  0160  02FD               	subwf	___lwdiv@counter,f
  1308  0161  1D03               	btfss	3,2
  1309  0162  2942               	goto	i1l752
  1310  0163                     i1l762:	
  1311  0163  087C               	movf	___lwdiv@quotient+1,w
  1312  0164  00F7               	movwf	?___lwdiv+1
  1313  0165  087B               	movf	___lwdiv@quotient,w
  1314  0166  00F6               	movwf	?___lwdiv
  1315  0167  0008               	return
  1316  0168                     __end_of___lwdiv:	
  1317  007E                     btemp	set	126	;btemp
  1318  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _ledprint->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_TIM2_CallBack
    _TIM2_CallBack->_ledprint

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _Port_Init
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0    1120
                                              4 BANK0      5     5      0
                      _TIM2_CallBack
 ---------------------------------------------------------------------------------
 (3) _TIM2_CallBack                                        1     1      0    1120
                                              3 BANK0      1     1      0
                           _ledprint
                            _segchar
 ---------------------------------------------------------------------------------
 (4) _segchar                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ledprint                                             3     1      2    1098
                                              0 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     480
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Port_Init
   _Timer2_Init

 _isr (ROOT)
   _TIM2_CallBack
     _ledprint
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _segchar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      11       5       21.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Mar 17 17:54:40 2018

                     _R1 0030                       _R2 002F                       _R3 002E  
                     _R4 002D                      l113 01E6                      _GIE 005F  
                    _PR2 0092                      _isr 0168                      fsr0 0004  
  __end_of_TIM2_CallBack 012C                     ?_isr 0070                     _T0IE 005D  
                   _T0IF 005A                     _PEIE 005E                     i1l71 0172  
                   i1l76 0193                     i1l97 00DE                     _TMR0 0001  
                   _main 01D2                     _ncnt 002B                     btemp 007E  
                   start 0012                    ??_isr 0024                    ?_main 0070  
        __end_of___lwdiv 0168          __end_of___lwmod 01D2                    i1l800 00A0  
                  i1l810 00B9                    i1l802 00A5                    i1l804 00AA  
                  i1l750 0134                    i1l806 00AF                    i1l814 00BE  
                  i1l752 0142                    i1l808 00B4                    i1l762 0163  
                  i1l850 0122                    i1l842 0114                    i1l834 0106  
                  i1l826 00F9                    i1l780 01C2                    i1l758 0158  
                  i1l774 01A6                    i1l776 01B4                    i1l784 01CD  
                  i1l792 008C                    i1l794 0091                    i1l796 0096  
                  i1l798 009B                    u30_25 0159                    u33_25 01A9  
                  u26_25 0137                    _PORTD 0008                    u35_25 01BA  
                  u28_25 0143                    u36_25 01C3                    u29_25 014F  
                  _TRISD 0088          __end_of_segchar 00DF                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 01E7                   ??_main 0029                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TMR2IE 0461                   _TMR2IF 0061  
                 _TMR2ON 0092                   _TRISA0 0428                   _TRISA1 0429  
                 _TRISA2 042A                   _TRISA3 042B            ??_Timer2_Init 0029  
         ledprint@number 0020         __end_of_ledprint 008A                ??___lwdiv 007A  
              ??___lwmod 0074       __size_of_Port_Init 0013                ??_segchar 0070  
                 saved_w 007E  __end_of__initialization 001F           __pcstackCOMMON 0070  
    __end_of_Timer2_Init 020B               __pbssBANK0 0029        __end_of_Port_Init 01FA  
             __pmaintext 01D2               __pintentry 0004                  _T2CKPS0 0090  
                _T2CKPS1 0091                  _TOUTPS0 0093                  _TOUTPS1 0094  
                _TOUTPS2 0095                  _TOUTPS3 0096                ?_ledprint 0020  
            _Timer2_Init 01FA   __size_of_TIM2_CallBack 004D                  ___lwdiv 012C  
                ___lwmod 01A0                  __ptext1 01FA                  __ptext2 01E7  
                __ptext3 0168                  __ptext4 00DF                  __ptext5 008A  
                __ptext6 0023                  __ptext7 01A0                  __ptext8 012C  
                _n_count 002C             __size_of_isr 0038                  _segchar 008A  
   end_of_initialization 001F               ??_ledprint 0022                _PORTAbits 0005  
          _TIM2_CallBack 00DF      start_initialization 0015           ?_TIM2_CallBack 0070  
            __end_of_isr 01A0                _Port_Init 01E7                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_ledprint 0067               segchar@seg 0070  
           ?_Timer2_Init 0070         ___lwdiv@dividend 0078               ?_Port_Init 0070  
               ?___lwdiv 0076                 ?___lwmod 0070          ??_TIM2_CallBack 0023  
               ?_segchar 0070         ___lwdiv@quotient 007B        interrupt_function 0004  
            ??_Port_Init 0029         __size_of___lwdiv 003C         __size_of___lwmod 0032  
        ___lwdiv@divisor 0076         __size_of_segchar 0055          ___lwdiv@counter 007D  
               _ledprint 0023            __size_of_main 0015     __size_of_Timer2_Init 0011  
               intlevel1 0000         ___lwmod@dividend 0072               _TIM1_Count 0029  
             _OPTION_REG 0081          ___lwmod@divisor 0070          ___lwmod@counter 0075  
